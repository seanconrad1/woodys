/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/contentful";
exports.ids = ["vendor-chunks/contentful"];
exports.modules = {

/***/ "(ssr)/./node_modules/contentful/dist/contentful.node.min.js":
/*!*************************************************************!*\
  !*** ./node_modules/contentful/dist/contentful.node.min.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*! For license information please see contentful.node.min.js.LICENSE.txt */ !function(e, n) {\n     true ? module.exports = n() : 0;\n}(global, ()=>(()=>{\n        var e = {\n            4878: (e, n, a)=>{\n                e.exports = {\n                    parallel: a(9050),\n                    serial: a(2451),\n                    serialOrdered: a(6709)\n                };\n            },\n            8813: (e)=>{\n                function n(e) {\n                    \"function\" == typeof this.jobs[e] && this.jobs[e]();\n                }\n                e.exports = function(e) {\n                    Object.keys(e.jobs).forEach(n.bind(e)), e.jobs = {};\n                };\n            },\n            9127: (e, n, a)=>{\n                var t = a(4701);\n                e.exports = function(e) {\n                    var n = !1;\n                    return t(function() {\n                        n = !0;\n                    }), function(a, i) {\n                        n ? e(a, i) : t(function() {\n                            e(a, i);\n                        });\n                    };\n                };\n            },\n            4701: (e)=>{\n                e.exports = function(e) {\n                    var n = \"function\" == typeof setImmediate ? setImmediate : \"object\" == typeof process && \"function\" == typeof process.nextTick ? process.nextTick : null;\n                    n ? n(e) : setTimeout(e, 0);\n                };\n            },\n            2751: (e, n, a)=>{\n                var t = a(9127), i = a(8813);\n                e.exports = function(e, n, a, o) {\n                    var s = a.keyedList ? a.keyedList[a.index] : a.index;\n                    a.jobs[s] = function(e, n, a, i) {\n                        return 2 == e.length ? e(a, t(i)) : e(a, n, t(i));\n                    }(n, s, e[s], function(e, n) {\n                        s in a.jobs && (delete a.jobs[s], e ? i(a) : a.results[s] = n, o(e, a.results));\n                    });\n                };\n            },\n            7178: (e)=>{\n                e.exports = function(e, n) {\n                    var a = !Array.isArray(e), t = {\n                        index: 0,\n                        keyedList: a || n ? Object.keys(e) : null,\n                        jobs: {},\n                        results: a ? {} : [],\n                        size: a ? Object.keys(e).length : e.length\n                    };\n                    return n && t.keyedList.sort(a ? n : function(a, t) {\n                        return n(e[a], e[t]);\n                    }), t;\n                };\n            },\n            8694: (e, n, a)=>{\n                var t = a(8813), i = a(9127);\n                e.exports = function(e) {\n                    Object.keys(this.jobs).length && (this.index = this.size, t(this), i(e)(null, this.results));\n                };\n            },\n            9050: (e, n, a)=>{\n                var t = a(2751), i = a(7178), o = a(8694);\n                e.exports = function(e, n, a) {\n                    for(var s = i(e); s.index < (s.keyedList || e).length;)t(e, n, s, function(e, n) {\n                        e ? a(e, n) : 0 !== Object.keys(s.jobs).length || a(null, s.results);\n                    }), s.index++;\n                    return o.bind(s, a);\n                };\n            },\n            2451: (e, n, a)=>{\n                var t = a(6709);\n                e.exports = function(e, n, a) {\n                    return t(e, n, null, a);\n                };\n            },\n            6709: (e, n, a)=>{\n                var t = a(2751), i = a(7178), o = a(8694);\n                function s(e, n) {\n                    return e < n ? -1 : e > n ? 1 : 0;\n                }\n                e.exports = function(e, n, a, s) {\n                    var r = i(e, a);\n                    return t(e, n, r, function a(i, o) {\n                        i ? s(i, o) : (r.index++, r.index < (r.keyedList || e).length ? t(e, n, r, a) : s(null, r.results));\n                    }), o.bind(r, s);\n                }, e.exports.ascending = s, e.exports.descending = function(e, n) {\n                    return -1 * s(e, n);\n                };\n            },\n            4970: (e, n, a)=>{\n                var t = a(4464), i = a(3837), o = a(1017), s = a(3685), r = a(5687), c = a(7310).parse, p = a(7147), l = a(2781).Stream, u = a(2839), d = a(4878), m = a(9259);\n                function f(e) {\n                    if (!(this instanceof f)) return new f(e);\n                    for(var n in this._overheadLength = 0, this._valueLength = 0, this._valuesToMeasure = [], t.call(this), e = e || {})this[n] = e[n];\n                }\n                e.exports = f, i.inherits(f, t), f.LINE_BREAK = \"\\r\\n\", f.DEFAULT_CONTENT_TYPE = \"application/octet-stream\", f.prototype.append = function(e, n, a) {\n                    \"string\" == typeof (a = a || {}) && (a = {\n                        filename: a\n                    });\n                    var o = t.prototype.append.bind(this);\n                    if (\"number\" == typeof n && (n = \"\" + n), i.isArray(n)) this._error(new Error(\"Arrays are not supported.\"));\n                    else {\n                        var s = this._multiPartHeader(e, n, a), r = this._multiPartFooter();\n                        o(s), o(n), o(r), this._trackLength(s, n, a);\n                    }\n                }, f.prototype._trackLength = function(e, n, a) {\n                    var t = 0;\n                    null != a.knownLength ? t += +a.knownLength : Buffer.isBuffer(n) ? t = n.length : \"string\" == typeof n && (t = Buffer.byteLength(n)), this._valueLength += t, this._overheadLength += Buffer.byteLength(e) + f.LINE_BREAK.length, n && (n.path || n.readable && n.hasOwnProperty(\"httpVersion\") || n instanceof l) && (a.knownLength || this._valuesToMeasure.push(n));\n                }, f.prototype._lengthRetriever = function(e, n) {\n                    e.hasOwnProperty(\"fd\") ? null != e.end && e.end != 1 / 0 && null != e.start ? n(null, e.end + 1 - (e.start ? e.start : 0)) : p.stat(e.path, function(a, t) {\n                        var i;\n                        a ? n(a) : (i = t.size - (e.start ? e.start : 0), n(null, i));\n                    }) : e.hasOwnProperty(\"httpVersion\") ? n(null, +e.headers[\"content-length\"]) : e.hasOwnProperty(\"httpModule\") ? (e.on(\"response\", function(a) {\n                        e.pause(), n(null, +a.headers[\"content-length\"]);\n                    }), e.resume()) : n(\"Unknown stream\");\n                }, f.prototype._multiPartHeader = function(e, n, a) {\n                    if (\"string\" == typeof a.header) return a.header;\n                    var t, i = this._getContentDisposition(n, a), o = this._getContentType(n, a), s = \"\", r = {\n                        \"Content-Disposition\": [\n                            \"form-data\",\n                            'name=\"' + e + '\"'\n                        ].concat(i || []),\n                        \"Content-Type\": [].concat(o || [])\n                    };\n                    for(var c in \"object\" == typeof a.header && m(r, a.header), r)r.hasOwnProperty(c) && null != (t = r[c]) && (Array.isArray(t) || (t = [\n                        t\n                    ]), t.length && (s += c + \": \" + t.join(\"; \") + f.LINE_BREAK));\n                    return \"--\" + this.getBoundary() + f.LINE_BREAK + s + f.LINE_BREAK;\n                }, f.prototype._getContentDisposition = function(e, n) {\n                    var a, t;\n                    return \"string\" == typeof n.filepath ? a = o.normalize(n.filepath).replace(/\\\\/g, \"/\") : n.filename || e.name || e.path ? a = o.basename(n.filename || e.name || e.path) : e.readable && e.hasOwnProperty(\"httpVersion\") && (a = o.basename(e.client._httpMessage.path || \"\")), a && (t = 'filename=\"' + a + '\"'), t;\n                }, f.prototype._getContentType = function(e, n) {\n                    var a = n.contentType;\n                    return !a && e.name && (a = u.lookup(e.name)), !a && e.path && (a = u.lookup(e.path)), !a && e.readable && e.hasOwnProperty(\"httpVersion\") && (a = e.headers[\"content-type\"]), a || !n.filepath && !n.filename || (a = u.lookup(n.filepath || n.filename)), a || \"object\" != typeof e || (a = f.DEFAULT_CONTENT_TYPE), a;\n                }, f.prototype._multiPartFooter = function() {\n                    return (function(e) {\n                        var n = f.LINE_BREAK;\n                        0 === this._streams.length && (n += this._lastBoundary()), e(n);\n                    }).bind(this);\n                }, f.prototype._lastBoundary = function() {\n                    return \"--\" + this.getBoundary() + \"--\" + f.LINE_BREAK;\n                }, f.prototype.getHeaders = function(e) {\n                    var n, a = {\n                        \"content-type\": \"multipart/form-data; boundary=\" + this.getBoundary()\n                    };\n                    for(n in e)e.hasOwnProperty(n) && (a[n.toLowerCase()] = e[n]);\n                    return a;\n                }, f.prototype.setBoundary = function(e) {\n                    this._boundary = e;\n                }, f.prototype.getBoundary = function() {\n                    return this._boundary || this._generateBoundary(), this._boundary;\n                }, f.prototype.getBuffer = function() {\n                    for(var e = new Buffer.alloc(0), n = this.getBoundary(), a = 0, t = this._streams.length; a < t; a++)\"function\" != typeof this._streams[a] && (e = Buffer.isBuffer(this._streams[a]) ? Buffer.concat([\n                        e,\n                        this._streams[a]\n                    ]) : Buffer.concat([\n                        e,\n                        Buffer.from(this._streams[a])\n                    ]), \"string\" == typeof this._streams[a] && this._streams[a].substring(2, n.length + 2) === n || (e = Buffer.concat([\n                        e,\n                        Buffer.from(f.LINE_BREAK)\n                    ])));\n                    return Buffer.concat([\n                        e,\n                        Buffer.from(this._lastBoundary())\n                    ]);\n                }, f.prototype._generateBoundary = function() {\n                    for(var e = \"--------------------------\", n = 0; n < 24; n++)e += Math.floor(10 * Math.random()).toString(16);\n                    this._boundary = e;\n                }, f.prototype.getLengthSync = function() {\n                    var e = this._overheadLength + this._valueLength;\n                    return this._streams.length && (e += this._lastBoundary().length), this.hasKnownLength() || this._error(new Error(\"Cannot calculate proper length in synchronous way.\")), e;\n                }, f.prototype.hasKnownLength = function() {\n                    var e = !0;\n                    return this._valuesToMeasure.length && (e = !1), e;\n                }, f.prototype.getLength = function(e) {\n                    var n = this._overheadLength + this._valueLength;\n                    this._streams.length && (n += this._lastBoundary().length), this._valuesToMeasure.length ? d.parallel(this._valuesToMeasure, this._lengthRetriever, function(a, t) {\n                        a ? e(a) : (t.forEach(function(e) {\n                            n += e;\n                        }), e(null, n));\n                    }) : process.nextTick(e.bind(this, null, n));\n                }, f.prototype.submit = function(e, n) {\n                    var a, t, i = {\n                        method: \"post\"\n                    };\n                    return \"string\" == typeof e ? (e = c(e), t = m({\n                        port: e.port,\n                        path: e.pathname,\n                        host: e.hostname,\n                        protocol: e.protocol\n                    }, i)) : (t = m(e, i)).port || (t.port = \"https:\" == t.protocol ? 443 : 80), t.headers = this.getHeaders(e.headers), a = \"https:\" == t.protocol ? r.request(t) : s.request(t), this.getLength((function(e, t) {\n                        if (e && \"Unknown stream\" !== e) this._error(e);\n                        else if (t && a.setHeader(\"Content-Length\", t), this.pipe(a), n) {\n                            var i, o = function(e, t) {\n                                return a.removeListener(\"error\", o), a.removeListener(\"response\", i), n.call(this, e, t);\n                            };\n                            i = o.bind(this, null), a.on(\"error\", o), a.on(\"response\", i);\n                        }\n                    }).bind(this)), a;\n                }, f.prototype._error = function(e) {\n                    this.error || (this.error = e, this.pause(), this.emit(\"error\", e));\n                }, f.prototype.toString = function() {\n                    return \"[object FormData]\";\n                };\n            },\n            9259: (e)=>{\n                e.exports = function(e, n) {\n                    return Object.keys(n).forEach(function(a) {\n                        e[a] = e[a] || n[a];\n                    }), e;\n                };\n            },\n            2737: (e, n, a)=>{\n                \"use strict\";\n                var t = a(8750), i = a(4573), o = i(t(\"String.prototype.indexOf\"));\n                e.exports = function(e, n) {\n                    var a = t(e, !!n);\n                    return \"function\" == typeof a && o(e, \".prototype.\") > -1 ? i(a) : a;\n                };\n            },\n            4573: (e, n, a)=>{\n                \"use strict\";\n                var t = a(132), i = a(8750), o = a(504), s = i(\"%TypeError%\"), r = i(\"%Function.prototype.apply%\"), c = i(\"%Function.prototype.call%\"), p = i(\"%Reflect.apply%\", !0) || t.call(c, r), l = i(\"%Object.defineProperty%\", !0), u = i(\"%Math.max%\");\n                if (l) try {\n                    l({}, \"a\", {\n                        value: 1\n                    });\n                } catch (e) {\n                    l = null;\n                }\n                e.exports = function(e) {\n                    if (\"function\" != typeof e) throw new s(\"a function is required\");\n                    var n = p(t, c, arguments);\n                    return o(n, 1 + u(0, e.length - (arguments.length - 1)), !0);\n                };\n                var d = function() {\n                    return p(t, r, arguments);\n                };\n                l ? l(e.exports, \"apply\", {\n                    value: d\n                }) : e.exports.apply = d;\n            },\n            4464: (e, n, a)=>{\n                var t = a(3837), i = a(2781).Stream, o = a(9444);\n                function s() {\n                    this.writable = !1, this.readable = !0, this.dataSize = 0, this.maxDataSize = 2097152, this.pauseStreams = !0, this._released = !1, this._streams = [], this._currentStream = null, this._insideLoop = !1, this._pendingNext = !1;\n                }\n                e.exports = s, t.inherits(s, i), s.create = function(e) {\n                    var n = new this;\n                    for(var a in e = e || {})n[a] = e[a];\n                    return n;\n                }, s.isStreamLike = function(e) {\n                    return \"function\" != typeof e && \"string\" != typeof e && \"boolean\" != typeof e && \"number\" != typeof e && !Buffer.isBuffer(e);\n                }, s.prototype.append = function(e) {\n                    if (s.isStreamLike(e)) {\n                        if (!(e instanceof o)) {\n                            var n = o.create(e, {\n                                maxDataSize: 1 / 0,\n                                pauseStream: this.pauseStreams\n                            });\n                            e.on(\"data\", this._checkDataSize.bind(this)), e = n;\n                        }\n                        this._handleErrors(e), this.pauseStreams && e.pause();\n                    }\n                    return this._streams.push(e), this;\n                }, s.prototype.pipe = function(e, n) {\n                    return i.prototype.pipe.call(this, e, n), this.resume(), e;\n                }, s.prototype._getNext = function() {\n                    if (this._currentStream = null, this._insideLoop) this._pendingNext = !0;\n                    else {\n                        this._insideLoop = !0;\n                        try {\n                            do {\n                                this._pendingNext = !1, this._realGetNext();\n                            }while (this._pendingNext);\n                        } finally{\n                            this._insideLoop = !1;\n                        }\n                    }\n                }, s.prototype._realGetNext = function() {\n                    var e = this._streams.shift();\n                    void 0 !== e ? \"function\" == typeof e ? e((function(e) {\n                        s.isStreamLike(e) && (e.on(\"data\", this._checkDataSize.bind(this)), this._handleErrors(e)), this._pipeNext(e);\n                    }).bind(this)) : this._pipeNext(e) : this.end();\n                }, s.prototype._pipeNext = function(e) {\n                    if (this._currentStream = e, s.isStreamLike(e)) return e.on(\"end\", this._getNext.bind(this)), void e.pipe(this, {\n                        end: !1\n                    });\n                    var n = e;\n                    this.write(n), this._getNext();\n                }, s.prototype._handleErrors = function(e) {\n                    var n = this;\n                    e.on(\"error\", function(e) {\n                        n._emitError(e);\n                    });\n                }, s.prototype.write = function(e) {\n                    this.emit(\"data\", e);\n                }, s.prototype.pause = function() {\n                    this.pauseStreams && (this.pauseStreams && this._currentStream && \"function\" == typeof this._currentStream.pause && this._currentStream.pause(), this.emit(\"pause\"));\n                }, s.prototype.resume = function() {\n                    this._released || (this._released = !0, this.writable = !0, this._getNext()), this.pauseStreams && this._currentStream && \"function\" == typeof this._currentStream.resume && this._currentStream.resume(), this.emit(\"resume\");\n                }, s.prototype.end = function() {\n                    this._reset(), this.emit(\"end\");\n                }, s.prototype.destroy = function() {\n                    this._reset(), this.emit(\"close\");\n                }, s.prototype._reset = function() {\n                    this.writable = !1, this._streams = [], this._currentStream = null;\n                }, s.prototype._checkDataSize = function() {\n                    if (this._updateDataSize(), !(this.dataSize <= this.maxDataSize)) {\n                        var e = \"DelayedStream#maxDataSize of \" + this.maxDataSize + \" bytes exceeded.\";\n                        this._emitError(new Error(e));\n                    }\n                }, s.prototype._updateDataSize = function() {\n                    this.dataSize = 0;\n                    var e = this;\n                    this._streams.forEach(function(n) {\n                        n.dataSize && (e.dataSize += n.dataSize);\n                    }), this._currentStream && this._currentStream.dataSize && (this.dataSize += this._currentStream.dataSize);\n                }, s.prototype._emitError = function(e) {\n                    this._reset(), this.emit(\"error\", e);\n                };\n            },\n            137: (e)=>{\n                \"use strict\";\n                var n = String.prototype.replace, a = /%20/g, t = \"RFC3986\";\n                e.exports = {\n                    default: t,\n                    formatters: {\n                        RFC1738: function(e) {\n                            return n.call(e, a, \"+\");\n                        },\n                        RFC3986: function(e) {\n                            return String(e);\n                        }\n                    },\n                    RFC1738: \"RFC1738\",\n                    RFC3986: t\n                };\n            },\n            1122: (e, n, a)=>{\n                \"use strict\";\n                var t = a(892), i = a(5015), o = a(137);\n                e.exports = {\n                    formats: o,\n                    parse: i,\n                    stringify: t\n                };\n            },\n            5015: (e, n, a)=>{\n                \"use strict\";\n                var t = a(5634), i = Object.prototype.hasOwnProperty, o = Array.isArray, s = {\n                    allowDots: !1,\n                    allowPrototypes: !1,\n                    allowSparse: !1,\n                    arrayLimit: 20,\n                    charset: \"utf-8\",\n                    charsetSentinel: !1,\n                    comma: !1,\n                    decoder: t.decode,\n                    delimiter: \"&\",\n                    depth: 5,\n                    ignoreQueryPrefix: !1,\n                    interpretNumericEntities: !1,\n                    parameterLimit: 1e3,\n                    parseArrays: !0,\n                    plainObjects: !1,\n                    strictNullHandling: !1\n                }, r = function(e) {\n                    return e.replace(/&#(\\d+);/g, function(e, n) {\n                        return String.fromCharCode(parseInt(n, 10));\n                    });\n                }, c = function(e, n) {\n                    return e && \"string\" == typeof e && n.comma && e.indexOf(\",\") > -1 ? e.split(\",\") : e;\n                }, p = function(e, n, a, t) {\n                    if (e) {\n                        var o = a.allowDots ? e.replace(/\\.([^.[]+)/g, \"[$1]\") : e, s = /(\\[[^[\\]]*])/g, r = a.depth > 0 && /(\\[[^[\\]]*])/.exec(o), p = r ? o.slice(0, r.index) : o, l = [];\n                        if (p) {\n                            if (!a.plainObjects && i.call(Object.prototype, p) && !a.allowPrototypes) return;\n                            l.push(p);\n                        }\n                        for(var u = 0; a.depth > 0 && null !== (r = s.exec(o)) && u < a.depth;){\n                            if (u += 1, !a.plainObjects && i.call(Object.prototype, r[1].slice(1, -1)) && !a.allowPrototypes) return;\n                            l.push(r[1]);\n                        }\n                        return r && l.push(\"[\" + o.slice(r.index) + \"]\"), function(e, n, a, t) {\n                            for(var i = t ? n : c(n, a), o = e.length - 1; o >= 0; --o){\n                                var s, r = e[o];\n                                if (\"[]\" === r && a.parseArrays) s = [].concat(i);\n                                else {\n                                    s = a.plainObjects ? Object.create(null) : {};\n                                    var p = \"[\" === r.charAt(0) && \"]\" === r.charAt(r.length - 1) ? r.slice(1, -1) : r, l = parseInt(p, 10);\n                                    a.parseArrays || \"\" !== p ? !isNaN(l) && r !== p && String(l) === p && l >= 0 && a.parseArrays && l <= a.arrayLimit ? (s = [])[l] = i : \"__proto__\" !== p && (s[p] = i) : s = {\n                                        0: i\n                                    };\n                                }\n                                i = s;\n                            }\n                            return i;\n                        }(l, n, a, t);\n                    }\n                };\n                e.exports = function(e, n) {\n                    var a = function(e) {\n                        if (!e) return s;\n                        if (null !== e.decoder && void 0 !== e.decoder && \"function\" != typeof e.decoder) throw new TypeError(\"Decoder has to be a function.\");\n                        if (void 0 !== e.charset && \"utf-8\" !== e.charset && \"iso-8859-1\" !== e.charset) throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n                        var n = void 0 === e.charset ? s.charset : e.charset;\n                        return {\n                            allowDots: void 0 === e.allowDots ? s.allowDots : !!e.allowDots,\n                            allowPrototypes: \"boolean\" == typeof e.allowPrototypes ? e.allowPrototypes : s.allowPrototypes,\n                            allowSparse: \"boolean\" == typeof e.allowSparse ? e.allowSparse : s.allowSparse,\n                            arrayLimit: \"number\" == typeof e.arrayLimit ? e.arrayLimit : s.arrayLimit,\n                            charset: n,\n                            charsetSentinel: \"boolean\" == typeof e.charsetSentinel ? e.charsetSentinel : s.charsetSentinel,\n                            comma: \"boolean\" == typeof e.comma ? e.comma : s.comma,\n                            decoder: \"function\" == typeof e.decoder ? e.decoder : s.decoder,\n                            delimiter: \"string\" == typeof e.delimiter || t.isRegExp(e.delimiter) ? e.delimiter : s.delimiter,\n                            depth: \"number\" == typeof e.depth || !1 === e.depth ? +e.depth : s.depth,\n                            ignoreQueryPrefix: !0 === e.ignoreQueryPrefix,\n                            interpretNumericEntities: \"boolean\" == typeof e.interpretNumericEntities ? e.interpretNumericEntities : s.interpretNumericEntities,\n                            parameterLimit: \"number\" == typeof e.parameterLimit ? e.parameterLimit : s.parameterLimit,\n                            parseArrays: !1 !== e.parseArrays,\n                            plainObjects: \"boolean\" == typeof e.plainObjects ? e.plainObjects : s.plainObjects,\n                            strictNullHandling: \"boolean\" == typeof e.strictNullHandling ? e.strictNullHandling : s.strictNullHandling\n                        };\n                    }(n);\n                    if (\"\" === e || null == e) return a.plainObjects ? Object.create(null) : {};\n                    for(var l = \"string\" == typeof e ? function(e, n) {\n                        var a, p = {\n                            __proto__: null\n                        }, l = n.ignoreQueryPrefix ? e.replace(/^\\?/, \"\") : e, u = n.parameterLimit === 1 / 0 ? void 0 : n.parameterLimit, d = l.split(n.delimiter, u), m = -1, f = n.charset;\n                        if (n.charsetSentinel) for(a = 0; a < d.length; ++a)0 === d[a].indexOf(\"utf8=\") && (\"utf8=%E2%9C%93\" === d[a] ? f = \"utf-8\" : \"utf8=%26%2310003%3B\" === d[a] && (f = \"iso-8859-1\"), m = a, a = d.length);\n                        for(a = 0; a < d.length; ++a)if (a !== m) {\n                            var x, v, h = d[a], b = h.indexOf(\"]=\"), g = -1 === b ? h.indexOf(\"=\") : b + 1;\n                            -1 === g ? (x = n.decoder(h, s.decoder, f, \"key\"), v = n.strictNullHandling ? null : \"\") : (x = n.decoder(h.slice(0, g), s.decoder, f, \"key\"), v = t.maybeMap(c(h.slice(g + 1), n), function(e) {\n                                return n.decoder(e, s.decoder, f, \"value\");\n                            })), v && n.interpretNumericEntities && \"iso-8859-1\" === f && (v = r(v)), h.indexOf(\"[]=\") > -1 && (v = o(v) ? [\n                                v\n                            ] : v), i.call(p, x) ? p[x] = t.combine(p[x], v) : p[x] = v;\n                        }\n                        return p;\n                    }(e, a) : e, u = a.plainObjects ? Object.create(null) : {}, d = Object.keys(l), m = 0; m < d.length; ++m){\n                        var f = d[m], x = p(f, l[f], a, \"string\" == typeof e);\n                        u = t.merge(u, x, a);\n                    }\n                    return !0 === a.allowSparse ? u : t.compact(u);\n                };\n            },\n            892: (e, n, a)=>{\n                \"use strict\";\n                var t = a(5337), i = a(5634), o = a(137), s = Object.prototype.hasOwnProperty, r = {\n                    brackets: function(e) {\n                        return e + \"[]\";\n                    },\n                    comma: \"comma\",\n                    indices: function(e, n) {\n                        return e + \"[\" + n + \"]\";\n                    },\n                    repeat: function(e) {\n                        return e;\n                    }\n                }, c = Array.isArray, p = Array.prototype.push, l = function(e, n) {\n                    p.apply(e, c(n) ? n : [\n                        n\n                    ]);\n                }, u = Date.prototype.toISOString, d = o.default, m = {\n                    addQueryPrefix: !1,\n                    allowDots: !1,\n                    charset: \"utf-8\",\n                    charsetSentinel: !1,\n                    delimiter: \"&\",\n                    encode: !0,\n                    encoder: i.encode,\n                    encodeValuesOnly: !1,\n                    format: d,\n                    formatter: o.formatters[d],\n                    indices: !1,\n                    serializeDate: function(e) {\n                        return u.call(e);\n                    },\n                    skipNulls: !1,\n                    strictNullHandling: !1\n                }, f = {}, x = function e(n, a, o, s, r, p, u, d, x, v, h, b, g, y, w, j) {\n                    for(var k, S = n, O = j, _ = 0, E = !1; void 0 !== (O = O.get(f)) && !E;){\n                        var A = O.get(n);\n                        if (_ += 1, void 0 !== A) {\n                            if (A === _) throw new RangeError(\"Cyclic object value\");\n                            E = !0;\n                        }\n                        void 0 === O.get(f) && (_ = 0);\n                    }\n                    if (\"function\" == typeof d ? S = d(a, S) : S instanceof Date ? S = h(S) : \"comma\" === o && c(S) && (S = i.maybeMap(S, function(e) {\n                        return e instanceof Date ? h(e) : e;\n                    })), null === S) {\n                        if (r) return u && !y ? u(a, m.encoder, w, \"key\", b) : a;\n                        S = \"\";\n                    }\n                    if (\"string\" == typeof (k = S) || \"number\" == typeof k || \"boolean\" == typeof k || \"symbol\" == typeof k || \"bigint\" == typeof k || i.isBuffer(S)) return u ? [\n                        g(y ? a : u(a, m.encoder, w, \"key\", b)) + \"=\" + g(u(S, m.encoder, w, \"value\", b))\n                    ] : [\n                        g(a) + \"=\" + g(String(S))\n                    ];\n                    var R, T = [];\n                    if (void 0 === S) return T;\n                    if (\"comma\" === o && c(S)) y && u && (S = i.maybeMap(S, u)), R = [\n                        {\n                            value: S.length > 0 ? S.join(\",\") || null : void 0\n                        }\n                    ];\n                    else if (c(d)) R = d;\n                    else {\n                        var C = Object.keys(S);\n                        R = x ? C.sort(x) : C;\n                    }\n                    for(var L = s && c(S) && 1 === S.length ? a + \"[]\" : a, P = 0; P < R.length; ++P){\n                        var F = R[P], z = \"object\" == typeof F && void 0 !== F.value ? F.value : S[F];\n                        if (!p || null !== z) {\n                            var U = c(S) ? \"function\" == typeof o ? o(L, F) : L : L + (v ? \".\" + F : \"[\" + F + \"]\");\n                            j.set(n, _);\n                            var B = t();\n                            B.set(f, j), l(T, e(z, U, o, s, r, p, \"comma\" === o && y && c(S) ? null : u, d, x, v, h, b, g, y, w, B));\n                        }\n                    }\n                    return T;\n                };\n                e.exports = function(e, n) {\n                    var a, i = e, p = function(e) {\n                        if (!e) return m;\n                        if (null !== e.encoder && void 0 !== e.encoder && \"function\" != typeof e.encoder) throw new TypeError(\"Encoder has to be a function.\");\n                        var n = e.charset || m.charset;\n                        if (void 0 !== e.charset && \"utf-8\" !== e.charset && \"iso-8859-1\" !== e.charset) throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n                        var a = o.default;\n                        if (void 0 !== e.format) {\n                            if (!s.call(o.formatters, e.format)) throw new TypeError(\"Unknown format option provided.\");\n                            a = e.format;\n                        }\n                        var t = o.formatters[a], i = m.filter;\n                        return (\"function\" == typeof e.filter || c(e.filter)) && (i = e.filter), {\n                            addQueryPrefix: \"boolean\" == typeof e.addQueryPrefix ? e.addQueryPrefix : m.addQueryPrefix,\n                            allowDots: void 0 === e.allowDots ? m.allowDots : !!e.allowDots,\n                            charset: n,\n                            charsetSentinel: \"boolean\" == typeof e.charsetSentinel ? e.charsetSentinel : m.charsetSentinel,\n                            delimiter: void 0 === e.delimiter ? m.delimiter : e.delimiter,\n                            encode: \"boolean\" == typeof e.encode ? e.encode : m.encode,\n                            encoder: \"function\" == typeof e.encoder ? e.encoder : m.encoder,\n                            encodeValuesOnly: \"boolean\" == typeof e.encodeValuesOnly ? e.encodeValuesOnly : m.encodeValuesOnly,\n                            filter: i,\n                            format: a,\n                            formatter: t,\n                            serializeDate: \"function\" == typeof e.serializeDate ? e.serializeDate : m.serializeDate,\n                            skipNulls: \"boolean\" == typeof e.skipNulls ? e.skipNulls : m.skipNulls,\n                            sort: \"function\" == typeof e.sort ? e.sort : null,\n                            strictNullHandling: \"boolean\" == typeof e.strictNullHandling ? e.strictNullHandling : m.strictNullHandling\n                        };\n                    }(n);\n                    \"function\" == typeof p.filter ? i = (0, p.filter)(\"\", i) : c(p.filter) && (a = p.filter);\n                    var u, d = [];\n                    if (\"object\" != typeof i || null === i) return \"\";\n                    u = n && n.arrayFormat in r ? n.arrayFormat : n && \"indices\" in n ? n.indices ? \"indices\" : \"repeat\" : \"indices\";\n                    var f = r[u];\n                    if (n && \"commaRoundTrip\" in n && \"boolean\" != typeof n.commaRoundTrip) throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");\n                    var v = \"comma\" === f && n && n.commaRoundTrip;\n                    a || (a = Object.keys(i)), p.sort && a.sort(p.sort);\n                    for(var h = t(), b = 0; b < a.length; ++b){\n                        var g = a[b];\n                        p.skipNulls && null === i[g] || l(d, x(i[g], g, f, v, p.strictNullHandling, p.skipNulls, p.encode ? p.encoder : null, p.filter, p.sort, p.allowDots, p.serializeDate, p.format, p.formatter, p.encodeValuesOnly, p.charset, h));\n                    }\n                    var y = d.join(p.delimiter), w = !0 === p.addQueryPrefix ? \"?\" : \"\";\n                    return p.charsetSentinel && (\"iso-8859-1\" === p.charset ? w += \"utf8=%26%2310003%3B&\" : w += \"utf8=%E2%9C%93&\"), y.length > 0 ? w + y : \"\";\n                };\n            },\n            5634: (e, n, a)=>{\n                \"use strict\";\n                var t = a(137), i = Object.prototype.hasOwnProperty, o = Array.isArray, s = function() {\n                    for(var e = [], n = 0; n < 256; ++n)e.push(\"%\" + ((n < 16 ? \"0\" : \"\") + n.toString(16)).toUpperCase());\n                    return e;\n                }(), r = function(e, n) {\n                    for(var a = n && n.plainObjects ? Object.create(null) : {}, t = 0; t < e.length; ++t)void 0 !== e[t] && (a[t] = e[t]);\n                    return a;\n                };\n                e.exports = {\n                    arrayToObject: r,\n                    assign: function(e, n) {\n                        return Object.keys(n).reduce(function(e, a) {\n                            return e[a] = n[a], e;\n                        }, e);\n                    },\n                    combine: function(e, n) {\n                        return [].concat(e, n);\n                    },\n                    compact: function(e) {\n                        for(var n = [\n                            {\n                                obj: {\n                                    o: e\n                                },\n                                prop: \"o\"\n                            }\n                        ], a = [], t = 0; t < n.length; ++t)for(var i = n[t], s = i.obj[i.prop], r = Object.keys(s), c = 0; c < r.length; ++c){\n                            var p = r[c], l = s[p];\n                            \"object\" == typeof l && null !== l && -1 === a.indexOf(l) && (n.push({\n                                obj: s,\n                                prop: p\n                            }), a.push(l));\n                        }\n                        return function(e) {\n                            for(; e.length > 1;){\n                                var n = e.pop(), a = n.obj[n.prop];\n                                if (o(a)) {\n                                    for(var t = [], i = 0; i < a.length; ++i)void 0 !== a[i] && t.push(a[i]);\n                                    n.obj[n.prop] = t;\n                                }\n                            }\n                        }(n), e;\n                    },\n                    decode: function(e, n, a) {\n                        var t = e.replace(/\\+/g, \" \");\n                        if (\"iso-8859-1\" === a) return t.replace(/%[0-9a-f]{2}/gi, unescape);\n                        try {\n                            return decodeURIComponent(t);\n                        } catch (e) {\n                            return t;\n                        }\n                    },\n                    encode: function(e, n, a, i, o) {\n                        if (0 === e.length) return e;\n                        var r = e;\n                        if (\"symbol\" == typeof e ? r = Symbol.prototype.toString.call(e) : \"string\" != typeof e && (r = String(e)), \"iso-8859-1\" === a) return escape(r).replace(/%u[0-9a-f]{4}/gi, function(e) {\n                            return \"%26%23\" + parseInt(e.slice(2), 16) + \"%3B\";\n                        });\n                        for(var c = \"\", p = 0; p < r.length; ++p){\n                            var l = r.charCodeAt(p);\n                            45 === l || 46 === l || 95 === l || 126 === l || l >= 48 && l <= 57 || l >= 65 && l <= 90 || l >= 97 && l <= 122 || o === t.RFC1738 && (40 === l || 41 === l) ? c += r.charAt(p) : l < 128 ? c += s[l] : l < 2048 ? c += s[192 | l >> 6] + s[128 | 63 & l] : l < 55296 || l >= 57344 ? c += s[224 | l >> 12] + s[128 | l >> 6 & 63] + s[128 | 63 & l] : (p += 1, l = 65536 + ((1023 & l) << 10 | 1023 & r.charCodeAt(p)), c += s[240 | l >> 18] + s[128 | l >> 12 & 63] + s[128 | l >> 6 & 63] + s[128 | 63 & l]);\n                        }\n                        return c;\n                    },\n                    isBuffer: function(e) {\n                        return !(!e || \"object\" != typeof e || !(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e)));\n                    },\n                    isRegExp: function(e) {\n                        return \"[object RegExp]\" === Object.prototype.toString.call(e);\n                    },\n                    maybeMap: function(e, n) {\n                        if (o(e)) {\n                            for(var a = [], t = 0; t < e.length; t += 1)a.push(n(e[t]));\n                            return a;\n                        }\n                        return n(e);\n                    },\n                    merge: function e(n, a, t) {\n                        if (!a) return n;\n                        if (\"object\" != typeof a) {\n                            if (o(n)) n.push(a);\n                            else {\n                                if (!n || \"object\" != typeof n) return [\n                                    n,\n                                    a\n                                ];\n                                (t && (t.plainObjects || t.allowPrototypes) || !i.call(Object.prototype, a)) && (n[a] = !0);\n                            }\n                            return n;\n                        }\n                        if (!n || \"object\" != typeof n) return [\n                            n\n                        ].concat(a);\n                        var s = n;\n                        return o(n) && !o(a) && (s = r(n, t)), o(n) && o(a) ? (a.forEach(function(a, o) {\n                            if (i.call(n, o)) {\n                                var s = n[o];\n                                s && \"object\" == typeof s && a && \"object\" == typeof a ? n[o] = e(s, a, t) : n.push(a);\n                            } else n[o] = a;\n                        }), n) : Object.keys(a).reduce(function(n, o) {\n                            var s = a[o];\n                            return i.call(n, o) ? n[o] = e(n[o], s, t) : n[o] = s, n;\n                        }, s);\n                    }\n                };\n            },\n            6292: (e, n, a)=>{\n                n.formatArgs = function(n) {\n                    if (n[0] = (this.useColors ? \"%c\" : \"\") + this.namespace + (this.useColors ? \" %c\" : \" \") + n[0] + (this.useColors ? \"%c \" : \" \") + \"+\" + e.exports.humanize(this.diff), !this.useColors) return;\n                    const a = \"color: \" + this.color;\n                    n.splice(1, 0, a, \"color: inherit\");\n                    let t = 0, i = 0;\n                    n[0].replace(/%[a-zA-Z%]/g, (e)=>{\n                        \"%%\" !== e && (t++, \"%c\" === e && (i = t));\n                    }), n.splice(i, 0, a);\n                }, n.save = function(e) {\n                    try {\n                        e ? n.storage.setItem(\"debug\", e) : n.storage.removeItem(\"debug\");\n                    } catch (e) {}\n                }, n.load = function() {\n                    let e;\n                    try {\n                        e = n.storage.getItem(\"debug\");\n                    } catch (e) {}\n                    return !e && \"undefined\" != typeof process && \"env\" in process && (e = process.env.DEBUG), e;\n                }, n.useColors = function() {\n                    return  false || (\"undefined\" == typeof navigator || !navigator.userAgent || !navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) && (\"undefined\" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||  false && (0) || \"undefined\" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || \"undefined\" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n                }, n.storage = function() {\n                    try {\n                        return localStorage;\n                    } catch (e) {}\n                }(), n.destroy = (()=>{\n                    let e = !1;\n                    return ()=>{\n                        e || (e = !0, console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"));\n                    };\n                })(), n.colors = [\n                    \"#0000CC\",\n                    \"#0000FF\",\n                    \"#0033CC\",\n                    \"#0033FF\",\n                    \"#0066CC\",\n                    \"#0066FF\",\n                    \"#0099CC\",\n                    \"#0099FF\",\n                    \"#00CC00\",\n                    \"#00CC33\",\n                    \"#00CC66\",\n                    \"#00CC99\",\n                    \"#00CCCC\",\n                    \"#00CCFF\",\n                    \"#3300CC\",\n                    \"#3300FF\",\n                    \"#3333CC\",\n                    \"#3333FF\",\n                    \"#3366CC\",\n                    \"#3366FF\",\n                    \"#3399CC\",\n                    \"#3399FF\",\n                    \"#33CC00\",\n                    \"#33CC33\",\n                    \"#33CC66\",\n                    \"#33CC99\",\n                    \"#33CCCC\",\n                    \"#33CCFF\",\n                    \"#6600CC\",\n                    \"#6600FF\",\n                    \"#6633CC\",\n                    \"#6633FF\",\n                    \"#66CC00\",\n                    \"#66CC33\",\n                    \"#9900CC\",\n                    \"#9900FF\",\n                    \"#9933CC\",\n                    \"#9933FF\",\n                    \"#99CC00\",\n                    \"#99CC33\",\n                    \"#CC0000\",\n                    \"#CC0033\",\n                    \"#CC0066\",\n                    \"#CC0099\",\n                    \"#CC00CC\",\n                    \"#CC00FF\",\n                    \"#CC3300\",\n                    \"#CC3333\",\n                    \"#CC3366\",\n                    \"#CC3399\",\n                    \"#CC33CC\",\n                    \"#CC33FF\",\n                    \"#CC6600\",\n                    \"#CC6633\",\n                    \"#CC9900\",\n                    \"#CC9933\",\n                    \"#CCCC00\",\n                    \"#CCCC33\",\n                    \"#FF0000\",\n                    \"#FF0033\",\n                    \"#FF0066\",\n                    \"#FF0099\",\n                    \"#FF00CC\",\n                    \"#FF00FF\",\n                    \"#FF3300\",\n                    \"#FF3333\",\n                    \"#FF3366\",\n                    \"#FF3399\",\n                    \"#FF33CC\",\n                    \"#FF33FF\",\n                    \"#FF6600\",\n                    \"#FF6633\",\n                    \"#FF9900\",\n                    \"#FF9933\",\n                    \"#FFCC00\",\n                    \"#FFCC33\"\n                ], n.log = console.debug || console.log || (()=>{}), e.exports = a(9374)(n);\n                const { formatters: t } = e.exports;\n                t.j = function(e) {\n                    try {\n                        return JSON.stringify(e);\n                    } catch (e) {\n                        return \"[UnexpectedJSONParseError]: \" + e.message;\n                    }\n                };\n            },\n            9374: (e, n, a)=>{\n                e.exports = function(e) {\n                    function n(e) {\n                        let a, i, o, s = null;\n                        function r(...e) {\n                            if (!r.enabled) return;\n                            const t = r, i = Number(new Date), o = i - (a || i);\n                            t.diff = o, t.prev = a, t.curr = i, a = i, e[0] = n.coerce(e[0]), \"string\" != typeof e[0] && e.unshift(\"%O\");\n                            let s = 0;\n                            e[0] = e[0].replace(/%([a-zA-Z%])/g, (a, i)=>{\n                                if (\"%%\" === a) return \"%\";\n                                s++;\n                                const o = n.formatters[i];\n                                if (\"function\" == typeof o) {\n                                    const n = e[s];\n                                    a = o.call(t, n), e.splice(s, 1), s--;\n                                }\n                                return a;\n                            }), n.formatArgs.call(t, e), (t.log || n.log).apply(t, e);\n                        }\n                        return r.namespace = e, r.useColors = n.useColors(), r.color = n.selectColor(e), r.extend = t, r.destroy = n.destroy, Object.defineProperty(r, \"enabled\", {\n                            enumerable: !0,\n                            configurable: !1,\n                            get: ()=>null !== s ? s : (i !== n.namespaces && (i = n.namespaces, o = n.enabled(e)), o),\n                            set: (e)=>{\n                                s = e;\n                            }\n                        }), \"function\" == typeof n.init && n.init(r), r;\n                    }\n                    function t(e, a) {\n                        const t = n(this.namespace + (void 0 === a ? \":\" : a) + e);\n                        return t.log = this.log, t;\n                    }\n                    function i(e) {\n                        return e.toString().substring(2, e.toString().length - 2).replace(/\\.\\*\\?$/, \"*\");\n                    }\n                    return n.debug = n, n.default = n, n.coerce = function(e) {\n                        return e instanceof Error ? e.stack || e.message : e;\n                    }, n.disable = function() {\n                        const e = [\n                            ...n.names.map(i),\n                            ...n.skips.map(i).map((e)=>\"-\" + e)\n                        ].join(\",\");\n                        return n.enable(\"\"), e;\n                    }, n.enable = function(e) {\n                        let a;\n                        n.save(e), n.namespaces = e, n.names = [], n.skips = [];\n                        const t = (\"string\" == typeof e ? e : \"\").split(/[\\s,]+/), i = t.length;\n                        for(a = 0; a < i; a++)t[a] && (\"-\" === (e = t[a].replace(/\\*/g, \".*?\"))[0] ? n.skips.push(new RegExp(\"^\" + e.slice(1) + \"$\")) : n.names.push(new RegExp(\"^\" + e + \"$\")));\n                    }, n.enabled = function(e) {\n                        if (\"*\" === e[e.length - 1]) return !0;\n                        let a, t;\n                        for(a = 0, t = n.skips.length; a < t; a++)if (n.skips[a].test(e)) return !1;\n                        for(a = 0, t = n.names.length; a < t; a++)if (n.names[a].test(e)) return !0;\n                        return !1;\n                    }, n.humanize = a(8628), n.destroy = function() {\n                        console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n                    }, Object.keys(e).forEach((a)=>{\n                        n[a] = e[a];\n                    }), n.names = [], n.skips = [], n.formatters = {}, n.selectColor = function(e) {\n                        let a = 0;\n                        for(let n = 0; n < e.length; n++)a = (a << 5) - a + e.charCodeAt(n), a |= 0;\n                        return n.colors[Math.abs(a) % n.colors.length];\n                    }, n.enable(n.load()), n;\n                };\n            },\n            1241: (e, n, a)=>{\n                \"undefined\" == typeof process || \"renderer\" === process.type || !0 === false || process.__nwjs ? e.exports = a(6292) : e.exports = a(4428);\n            },\n            4428: (e, n, a)=>{\n                const t = a(6224), i = a(3837);\n                n.init = function(e) {\n                    e.inspectOpts = {};\n                    const a = Object.keys(n.inspectOpts);\n                    for(let t = 0; t < a.length; t++)e.inspectOpts[a[t]] = n.inspectOpts[a[t]];\n                }, n.log = function(...e) {\n                    return process.stderr.write(i.format(...e) + \"\\n\");\n                }, n.formatArgs = function(a) {\n                    const { namespace: t, useColors: i } = this;\n                    if (i) {\n                        const n = this.color, i = \"\\x1b[3\" + (n < 8 ? n : \"8;5;\" + n), o = `  ${i};1m${t} \u001b[0m`;\n                        a[0] = o + a[0].split(\"\\n\").join(\"\\n\" + o), a.push(i + \"m+\" + e.exports.humanize(this.diff) + \"\\x1b[0m\");\n                    } else a[0] = (n.inspectOpts.hideDate ? \"\" : (new Date).toISOString() + \" \") + t + \" \" + a[0];\n                }, n.save = function(e) {\n                    e ? process.env.DEBUG = e : delete process.env.DEBUG;\n                }, n.load = function() {\n                    return process.env.DEBUG;\n                }, n.useColors = function() {\n                    return \"colors\" in n.inspectOpts ? Boolean(n.inspectOpts.colors) : t.isatty(process.stderr.fd);\n                }, n.destroy = i.deprecate(()=>{}, \"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"), n.colors = [\n                    6,\n                    2,\n                    3,\n                    4,\n                    5,\n                    1\n                ];\n                try {\n                    const e = a(6974);\n                    e && (e.stderr || e).level >= 2 && (n.colors = [\n                        20,\n                        21,\n                        26,\n                        27,\n                        32,\n                        33,\n                        38,\n                        39,\n                        40,\n                        41,\n                        42,\n                        43,\n                        44,\n                        45,\n                        56,\n                        57,\n                        62,\n                        63,\n                        68,\n                        69,\n                        74,\n                        75,\n                        76,\n                        77,\n                        78,\n                        79,\n                        80,\n                        81,\n                        92,\n                        93,\n                        98,\n                        99,\n                        112,\n                        113,\n                        128,\n                        129,\n                        134,\n                        135,\n                        148,\n                        149,\n                        160,\n                        161,\n                        162,\n                        163,\n                        164,\n                        165,\n                        166,\n                        167,\n                        168,\n                        169,\n                        170,\n                        171,\n                        172,\n                        173,\n                        178,\n                        179,\n                        184,\n                        185,\n                        196,\n                        197,\n                        198,\n                        199,\n                        200,\n                        201,\n                        202,\n                        203,\n                        204,\n                        205,\n                        206,\n                        207,\n                        208,\n                        209,\n                        214,\n                        215,\n                        220,\n                        221\n                    ]);\n                } catch (e) {}\n                n.inspectOpts = Object.keys(process.env).filter((e)=>/^debug_/i.test(e)).reduce((e, n)=>{\n                    const a = n.substring(6).toLowerCase().replace(/_([a-z])/g, (e, n)=>n.toUpperCase());\n                    let t = process.env[n];\n                    return t = !!/^(yes|on|true|enabled)$/i.test(t) || !/^(no|off|false|disabled)$/i.test(t) && (\"null\" === t ? null : Number(t)), e[a] = t, e;\n                }, {}), e.exports = a(9374)(n);\n                const { formatters: o } = e.exports;\n                o.o = function(e) {\n                    return this.inspectOpts.colors = this.useColors, i.inspect(e, this.inspectOpts).split(\"\\n\").map((e)=>e.trim()).join(\" \");\n                }, o.O = function(e) {\n                    return this.inspectOpts.colors = this.useColors, i.inspect(e, this.inspectOpts);\n                };\n            },\n            6300: (e, n, a)=>{\n                \"use strict\";\n                var t = a(1365)(), i = a(8750), o = t && i(\"%Object.defineProperty%\", !0);\n                if (o) try {\n                    o({}, \"a\", {\n                        value: 1\n                    });\n                } catch (e) {\n                    o = !1;\n                }\n                var s = i(\"%SyntaxError%\"), r = i(\"%TypeError%\"), c = a(7502);\n                e.exports = function(e, n, a) {\n                    if (!e || \"object\" != typeof e && \"function\" != typeof e) throw new r(\"`obj` must be an object or a function`\");\n                    if (\"string\" != typeof n && \"symbol\" != typeof n) throw new r(\"`property` must be a string or a symbol`\");\n                    if (arguments.length > 3 && \"boolean\" != typeof arguments[3] && null !== arguments[3]) throw new r(\"`nonEnumerable`, if provided, must be a boolean or null\");\n                    if (arguments.length > 4 && \"boolean\" != typeof arguments[4] && null !== arguments[4]) throw new r(\"`nonWritable`, if provided, must be a boolean or null\");\n                    if (arguments.length > 5 && \"boolean\" != typeof arguments[5] && null !== arguments[5]) throw new r(\"`nonConfigurable`, if provided, must be a boolean or null\");\n                    if (arguments.length > 6 && \"boolean\" != typeof arguments[6]) throw new r(\"`loose`, if provided, must be a boolean\");\n                    var t = arguments.length > 3 ? arguments[3] : null, i = arguments.length > 4 ? arguments[4] : null, p = arguments.length > 5 ? arguments[5] : null, l = arguments.length > 6 && arguments[6], u = !!c && c(e, n);\n                    if (o) o(e, n, {\n                        configurable: null === p && u ? u.configurable : !p,\n                        enumerable: null === t && u ? u.enumerable : !t,\n                        value: a,\n                        writable: null === i && u ? u.writable : !i\n                    });\n                    else {\n                        if (!l && (t || i || p)) throw new s(\"This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.\");\n                        e[n] = a;\n                    }\n                };\n            },\n            9444: (e, n, a)=>{\n                var t = a(2781).Stream, i = a(3837);\n                function o() {\n                    this.source = null, this.dataSize = 0, this.maxDataSize = 1048576, this.pauseStream = !0, this._maxDataSizeExceeded = !1, this._released = !1, this._bufferedEvents = [];\n                }\n                e.exports = o, i.inherits(o, t), o.create = function(e, n) {\n                    var a = new this;\n                    for(var t in n = n || {})a[t] = n[t];\n                    a.source = e;\n                    var i = e.emit;\n                    return e.emit = function() {\n                        return a._handleEmit(arguments), i.apply(e, arguments);\n                    }, e.on(\"error\", function() {}), a.pauseStream && e.pause(), a;\n                }, Object.defineProperty(o.prototype, \"readable\", {\n                    configurable: !0,\n                    enumerable: !0,\n                    get: function() {\n                        return this.source.readable;\n                    }\n                }), o.prototype.setEncoding = function() {\n                    return this.source.setEncoding.apply(this.source, arguments);\n                }, o.prototype.resume = function() {\n                    this._released || this.release(), this.source.resume();\n                }, o.prototype.pause = function() {\n                    this.source.pause();\n                }, o.prototype.release = function() {\n                    this._released = !0, this._bufferedEvents.forEach((function(e) {\n                        this.emit.apply(this, e);\n                    }).bind(this)), this._bufferedEvents = [];\n                }, o.prototype.pipe = function() {\n                    var e = t.prototype.pipe.apply(this, arguments);\n                    return this.resume(), e;\n                }, o.prototype._handleEmit = function(e) {\n                    this._released ? this.emit.apply(this, e) : (\"data\" === e[0] && (this.dataSize += e[1].length, this._checkIfMaxDataSizeExceeded()), this._bufferedEvents.push(e));\n                }, o.prototype._checkIfMaxDataSizeExceeded = function() {\n                    if (!(this._maxDataSizeExceeded || this.dataSize <= this.maxDataSize)) {\n                        this._maxDataSizeExceeded = !0;\n                        var e = \"DelayedStream#maxDataSize of \" + this.maxDataSize + \" bytes exceeded.\";\n                        this.emit(\"error\", new Error(e));\n                    }\n                };\n            },\n            6276: (e, n, a)=>{\n                var t;\n                e.exports = function() {\n                    if (!t) {\n                        try {\n                            t = a(1241)(\"follow-redirects\");\n                        } catch (e) {}\n                        \"function\" != typeof t && (t = function() {});\n                    }\n                    t.apply(null, arguments);\n                };\n            },\n            4095: (e, n, a)=>{\n                var t = a(7310), i = t.URL, o = a(3685), s = a(5687), r = a(2781).Writable, c = a(9491), p = a(6276), l = !1;\n                try {\n                    c(new i);\n                } catch (e) {\n                    l = \"ERR_INVALID_URL\" === e.code;\n                }\n                var u = [\n                    \"auth\",\n                    \"host\",\n                    \"hostname\",\n                    \"href\",\n                    \"path\",\n                    \"pathname\",\n                    \"port\",\n                    \"protocol\",\n                    \"query\",\n                    \"search\"\n                ], d = [\n                    \"abort\",\n                    \"aborted\",\n                    \"connect\",\n                    \"error\",\n                    \"socket\",\n                    \"timeout\"\n                ], m = Object.create(null);\n                d.forEach(function(e) {\n                    m[e] = function(n, a, t) {\n                        this._redirectable.emit(e, n, a, t);\n                    };\n                });\n                var f = E(\"ERR_INVALID_URL\", \"Invalid URL\", TypeError), x = E(\"ERR_FR_REDIRECTION_FAILURE\", \"Redirected request failed\"), v = E(\"ERR_FR_TOO_MANY_REDIRECTS\", \"Maximum number of redirects exceeded\", x), h = E(\"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\", \"Request body larger than maxBodyLength limit\"), b = E(\"ERR_STREAM_WRITE_AFTER_END\", \"write after end\"), g = r.prototype.destroy || j;\n                function y(e, n) {\n                    r.call(this), this._sanitizeOptions(e), this._options = e, this._ended = !1, this._ending = !1, this._redirectCount = 0, this._redirects = [], this._requestBodyLength = 0, this._requestBodyBuffers = [], n && this.on(\"response\", n);\n                    var a = this;\n                    this._onNativeResponse = function(e) {\n                        try {\n                            a._processResponse(e);\n                        } catch (e) {\n                            a.emit(\"error\", e instanceof x ? e : new x({\n                                cause: e\n                            }));\n                        }\n                    }, this._performRequest();\n                }\n                function w(e) {\n                    var n = {\n                        maxRedirects: 21,\n                        maxBodyLength: 10485760\n                    }, a = {};\n                    return Object.keys(e).forEach(function(t) {\n                        var o = t + \":\", s = a[o] = e[t], r = n[t] = Object.create(s);\n                        Object.defineProperties(r, {\n                            request: {\n                                value: function(e, t, s) {\n                                    return i && e instanceof i ? e = O(e) : R(e) ? e = O(k(e)) : (s = t, t = S(e), e = {\n                                        protocol: o\n                                    }), T(t) && (s = t, t = null), (t = Object.assign({\n                                        maxRedirects: n.maxRedirects,\n                                        maxBodyLength: n.maxBodyLength\n                                    }, e, t)).nativeProtocols = a, R(t.host) || R(t.hostname) || (t.hostname = \"::1\"), c.equal(t.protocol, o, \"protocol mismatch\"), p(\"options\", t), new y(t, s);\n                                },\n                                configurable: !0,\n                                enumerable: !0,\n                                writable: !0\n                            },\n                            get: {\n                                value: function(e, n, a) {\n                                    var t = r.request(e, n, a);\n                                    return t.end(), t;\n                                },\n                                configurable: !0,\n                                enumerable: !0,\n                                writable: !0\n                            }\n                        });\n                    }), n;\n                }\n                function j() {}\n                function k(e) {\n                    var n;\n                    if (l) n = new i(e);\n                    else if (!R((n = S(t.parse(e))).protocol)) throw new f({\n                        input: e\n                    });\n                    return n;\n                }\n                function S(e) {\n                    if (/^\\[/.test(e.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(e.hostname)) throw new f({\n                        input: e.href || e\n                    });\n                    if (/^\\[/.test(e.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(e.host)) throw new f({\n                        input: e.href || e\n                    });\n                    return e;\n                }\n                function O(e, n) {\n                    var a = n || {};\n                    for (var t of u)a[t] = e[t];\n                    return a.hostname.startsWith(\"[\") && (a.hostname = a.hostname.slice(1, -1)), \"\" !== a.port && (a.port = Number(a.port)), a.path = a.search ? a.pathname + a.search : a.pathname, a;\n                }\n                function _(e, n) {\n                    var a;\n                    for(var t in n)e.test(t) && (a = n[t], delete n[t]);\n                    return null == a ? void 0 : String(a).trim();\n                }\n                function E(e, n, a) {\n                    function t(a) {\n                        Error.captureStackTrace(this, this.constructor), Object.assign(this, a || {}), this.code = e, this.message = this.cause ? n + \": \" + this.cause.message : n;\n                    }\n                    return t.prototype = new (a || Error), Object.defineProperties(t.prototype, {\n                        constructor: {\n                            value: t,\n                            enumerable: !1\n                        },\n                        name: {\n                            value: \"Error [\" + e + \"]\",\n                            enumerable: !1\n                        }\n                    }), t;\n                }\n                function A(e, n) {\n                    for (var a of d)e.removeListener(a, m[a]);\n                    e.on(\"error\", j), e.destroy(n);\n                }\n                function R(e) {\n                    return \"string\" == typeof e || e instanceof String;\n                }\n                function T(e) {\n                    return \"function\" == typeof e;\n                }\n                y.prototype = Object.create(r.prototype), y.prototype.abort = function() {\n                    A(this._currentRequest), this._currentRequest.abort(), this.emit(\"abort\");\n                }, y.prototype.destroy = function(e) {\n                    return A(this._currentRequest, e), g.call(this, e), this;\n                }, y.prototype.write = function(e, n, a) {\n                    if (this._ending) throw new b;\n                    if (!(R(e) || \"object\" == typeof (t = e) && \"length\" in t)) throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n                    var t;\n                    T(n) && (a = n, n = null), 0 !== e.length ? this._requestBodyLength + e.length <= this._options.maxBodyLength ? (this._requestBodyLength += e.length, this._requestBodyBuffers.push({\n                        data: e,\n                        encoding: n\n                    }), this._currentRequest.write(e, n, a)) : (this.emit(\"error\", new h), this.abort()) : a && a();\n                }, y.prototype.end = function(e, n, a) {\n                    if (T(e) ? (a = e, e = n = null) : T(n) && (a = n, n = null), e) {\n                        var t = this, i = this._currentRequest;\n                        this.write(e, n, function() {\n                            t._ended = !0, i.end(null, null, a);\n                        }), this._ending = !0;\n                    } else this._ended = this._ending = !0, this._currentRequest.end(null, null, a);\n                }, y.prototype.setHeader = function(e, n) {\n                    this._options.headers[e] = n, this._currentRequest.setHeader(e, n);\n                }, y.prototype.removeHeader = function(e) {\n                    delete this._options.headers[e], this._currentRequest.removeHeader(e);\n                }, y.prototype.setTimeout = function(e, n) {\n                    var a = this;\n                    function t(n) {\n                        n.setTimeout(e), n.removeListener(\"timeout\", n.destroy), n.addListener(\"timeout\", n.destroy);\n                    }\n                    function i(n) {\n                        a._timeout && clearTimeout(a._timeout), a._timeout = setTimeout(function() {\n                            a.emit(\"timeout\"), o();\n                        }, e), t(n);\n                    }\n                    function o() {\n                        a._timeout && (clearTimeout(a._timeout), a._timeout = null), a.removeListener(\"abort\", o), a.removeListener(\"error\", o), a.removeListener(\"response\", o), a.removeListener(\"close\", o), n && a.removeListener(\"timeout\", n), a.socket || a._currentRequest.removeListener(\"socket\", i);\n                    }\n                    return n && this.on(\"timeout\", n), this.socket ? i(this.socket) : this._currentRequest.once(\"socket\", i), this.on(\"socket\", t), this.on(\"abort\", o), this.on(\"error\", o), this.on(\"response\", o), this.on(\"close\", o), this;\n                }, [\n                    \"flushHeaders\",\n                    \"getHeader\",\n                    \"setNoDelay\",\n                    \"setSocketKeepAlive\"\n                ].forEach(function(e) {\n                    y.prototype[e] = function(n, a) {\n                        return this._currentRequest[e](n, a);\n                    };\n                }), [\n                    \"aborted\",\n                    \"connection\",\n                    \"socket\"\n                ].forEach(function(e) {\n                    Object.defineProperty(y.prototype, e, {\n                        get: function() {\n                            return this._currentRequest[e];\n                        }\n                    });\n                }), y.prototype._sanitizeOptions = function(e) {\n                    if (e.headers || (e.headers = {}), e.host && (e.hostname || (e.hostname = e.host), delete e.host), !e.pathname && e.path) {\n                        var n = e.path.indexOf(\"?\");\n                        n < 0 ? e.pathname = e.path : (e.pathname = e.path.substring(0, n), e.search = e.path.substring(n));\n                    }\n                }, y.prototype._performRequest = function() {\n                    var e = this._options.protocol, n = this._options.nativeProtocols[e];\n                    if (!n) throw new TypeError(\"Unsupported protocol \" + e);\n                    if (this._options.agents) {\n                        var a = e.slice(0, -1);\n                        this._options.agent = this._options.agents[a];\n                    }\n                    var i = this._currentRequest = n.request(this._options, this._onNativeResponse);\n                    for (var o of (i._redirectable = this, d))i.on(o, m[o]);\n                    if (this._currentUrl = /^\\//.test(this._options.path) ? t.format(this._options) : this._options.path, this._isRedirect) {\n                        var s = 0, r = this, c = this._requestBodyBuffers;\n                        !function e(n) {\n                            if (i === r._currentRequest) if (n) r.emit(\"error\", n);\n                            else if (s < c.length) {\n                                var a = c[s++];\n                                i.finished || i.write(a.data, a.encoding, e);\n                            } else r._ended && i.end();\n                        }();\n                    }\n                }, y.prototype._processResponse = function(e) {\n                    var n = e.statusCode;\n                    this._options.trackRedirects && this._redirects.push({\n                        url: this._currentUrl,\n                        headers: e.headers,\n                        statusCode: n\n                    });\n                    var a, o = e.headers.location;\n                    if (!o || !1 === this._options.followRedirects || n < 300 || n >= 400) return e.responseUrl = this._currentUrl, e.redirects = this._redirects, this.emit(\"response\", e), void (this._requestBodyBuffers = []);\n                    if (A(this._currentRequest), e.destroy(), ++this._redirectCount > this._options.maxRedirects) throw new v;\n                    var s = this._options.beforeRedirect;\n                    s && (a = Object.assign({\n                        Host: e.req.getHeader(\"host\")\n                    }, this._options.headers));\n                    var r = this._options.method;\n                    ((301 === n || 302 === n) && \"POST\" === this._options.method || 303 === n && !/^(?:GET|HEAD)$/.test(this._options.method)) && (this._options.method = \"GET\", this._requestBodyBuffers = [], _(/^content-/i, this._options.headers));\n                    var u, d, m = _(/^host$/i, this._options.headers), f = k(this._currentUrl), x = m || f.host, h = /^\\w+:/.test(o) ? this._currentUrl : t.format(Object.assign(f, {\n                        host: x\n                    })), b = (u = o, d = h, l ? new i(u, d) : k(t.resolve(d, u)));\n                    if (p(\"redirecting to\", b.href), this._isRedirect = !0, O(b, this._options), (b.protocol !== f.protocol && \"https:\" !== b.protocol || b.host !== x && !function(e, n) {\n                        c(R(e) && R(n));\n                        var a = e.length - n.length - 1;\n                        return a > 0 && \".\" === e[a] && e.endsWith(n);\n                    }(b.host, x)) && _(/^(?:authorization|cookie)$/i, this._options.headers), T(s)) {\n                        var g = {\n                            headers: e.headers,\n                            statusCode: n\n                        }, y = {\n                            url: h,\n                            method: r,\n                            headers: a\n                        };\n                        s(this._options, g, y), this._sanitizeOptions(this._options);\n                    }\n                    this._performRequest();\n                }, e.exports = w({\n                    http: o,\n                    https: s\n                }), e.exports.wrap = w;\n            },\n            8458: (e)=>{\n                \"use strict\";\n                var n = Object.prototype.toString, a = Math.max, t = function(e, n) {\n                    for(var a = [], t = 0; t < e.length; t += 1)a[t] = e[t];\n                    for(var i = 0; i < n.length; i += 1)a[i + e.length] = n[i];\n                    return a;\n                };\n                e.exports = function(e) {\n                    var i = this;\n                    if (\"function\" != typeof i || \"[object Function]\" !== n.apply(i)) throw new TypeError(\"Function.prototype.bind called on incompatible \" + i);\n                    for(var o, s = function(e, n) {\n                        for(var a = [], t = 1, i = 0; t < e.length; t += 1, i += 1)a[i] = e[t];\n                        return a;\n                    }(arguments), r = a(0, i.length - s.length), c = [], p = 0; p < r; p++)c[p] = \"$\" + p;\n                    if (o = Function(\"binder\", \"return function (\" + function(e, n) {\n                        for(var a = \"\", t = 0; t < e.length; t += 1)a += e[t], t + 1 < e.length && (a += \",\");\n                        return a;\n                    }(c) + \"){ return binder.apply(this,arguments); }\")(function() {\n                        if (this instanceof o) {\n                            var n = i.apply(this, t(s, arguments));\n                            return Object(n) === n ? n : this;\n                        }\n                        return i.apply(e, t(s, arguments));\n                    }), i.prototype) {\n                        var l = function() {};\n                        l.prototype = i.prototype, o.prototype = new l, l.prototype = null;\n                    }\n                    return o;\n                };\n            },\n            132: (e, n, a)=>{\n                \"use strict\";\n                var t = a(8458);\n                e.exports = Function.prototype.bind || t;\n            },\n            8750: (e, n, a)=>{\n                \"use strict\";\n                var t, i = SyntaxError, o = Function, s = TypeError, r = function(e) {\n                    try {\n                        return o('\"use strict\"; return (' + e + \").constructor;\")();\n                    } catch (e) {}\n                }, c = Object.getOwnPropertyDescriptor;\n                if (c) try {\n                    c({}, \"\");\n                } catch (e) {\n                    c = null;\n                }\n                var p = function() {\n                    throw new s;\n                }, l = c ? function() {\n                    try {\n                        return p;\n                    } catch (e) {\n                        try {\n                            return c(arguments, \"callee\").get;\n                        } catch (e) {\n                            return p;\n                        }\n                    }\n                }() : p, u = a(679)(), d = a(2574)(), m = Object.getPrototypeOf || (d ? function(e) {\n                    return e.__proto__;\n                } : null), f = {}, x = \"undefined\" != typeof Uint8Array && m ? m(Uint8Array) : t, v = {\n                    \"%AggregateError%\": \"undefined\" == typeof AggregateError ? t : AggregateError,\n                    \"%Array%\": Array,\n                    \"%ArrayBuffer%\": \"undefined\" == typeof ArrayBuffer ? t : ArrayBuffer,\n                    \"%ArrayIteratorPrototype%\": u && m ? m([][Symbol.iterator]()) : t,\n                    \"%AsyncFromSyncIteratorPrototype%\": t,\n                    \"%AsyncFunction%\": f,\n                    \"%AsyncGenerator%\": f,\n                    \"%AsyncGeneratorFunction%\": f,\n                    \"%AsyncIteratorPrototype%\": f,\n                    \"%Atomics%\": \"undefined\" == typeof Atomics ? t : Atomics,\n                    \"%BigInt%\": \"undefined\" == typeof BigInt ? t : BigInt,\n                    \"%BigInt64Array%\": \"undefined\" == typeof BigInt64Array ? t : BigInt64Array,\n                    \"%BigUint64Array%\": \"undefined\" == typeof BigUint64Array ? t : BigUint64Array,\n                    \"%Boolean%\": Boolean,\n                    \"%DataView%\": \"undefined\" == typeof DataView ? t : DataView,\n                    \"%Date%\": Date,\n                    \"%decodeURI%\": decodeURI,\n                    \"%decodeURIComponent%\": decodeURIComponent,\n                    \"%encodeURI%\": encodeURI,\n                    \"%encodeURIComponent%\": encodeURIComponent,\n                    \"%Error%\": Error,\n                    \"%eval%\": eval,\n                    \"%EvalError%\": EvalError,\n                    \"%Float32Array%\": \"undefined\" == typeof Float32Array ? t : Float32Array,\n                    \"%Float64Array%\": \"undefined\" == typeof Float64Array ? t : Float64Array,\n                    \"%FinalizationRegistry%\": \"undefined\" == typeof FinalizationRegistry ? t : FinalizationRegistry,\n                    \"%Function%\": o,\n                    \"%GeneratorFunction%\": f,\n                    \"%Int8Array%\": \"undefined\" == typeof Int8Array ? t : Int8Array,\n                    \"%Int16Array%\": \"undefined\" == typeof Int16Array ? t : Int16Array,\n                    \"%Int32Array%\": \"undefined\" == typeof Int32Array ? t : Int32Array,\n                    \"%isFinite%\": isFinite,\n                    \"%isNaN%\": isNaN,\n                    \"%IteratorPrototype%\": u && m ? m(m([][Symbol.iterator]())) : t,\n                    \"%JSON%\": \"object\" == typeof JSON ? JSON : t,\n                    \"%Map%\": \"undefined\" == typeof Map ? t : Map,\n                    \"%MapIteratorPrototype%\": \"undefined\" != typeof Map && u && m ? m((new Map)[Symbol.iterator]()) : t,\n                    \"%Math%\": Math,\n                    \"%Number%\": Number,\n                    \"%Object%\": Object,\n                    \"%parseFloat%\": parseFloat,\n                    \"%parseInt%\": parseInt,\n                    \"%Promise%\": \"undefined\" == typeof Promise ? t : Promise,\n                    \"%Proxy%\": \"undefined\" == typeof Proxy ? t : Proxy,\n                    \"%RangeError%\": RangeError,\n                    \"%ReferenceError%\": ReferenceError,\n                    \"%Reflect%\": \"undefined\" == typeof Reflect ? t : Reflect,\n                    \"%RegExp%\": RegExp,\n                    \"%Set%\": \"undefined\" == typeof Set ? t : Set,\n                    \"%SetIteratorPrototype%\": \"undefined\" != typeof Set && u && m ? m((new Set)[Symbol.iterator]()) : t,\n                    \"%SharedArrayBuffer%\": \"undefined\" == typeof SharedArrayBuffer ? t : SharedArrayBuffer,\n                    \"%String%\": String,\n                    \"%StringIteratorPrototype%\": u && m ? m(\"\"[Symbol.iterator]()) : t,\n                    \"%Symbol%\": u ? Symbol : t,\n                    \"%SyntaxError%\": i,\n                    \"%ThrowTypeError%\": l,\n                    \"%TypedArray%\": x,\n                    \"%TypeError%\": s,\n                    \"%Uint8Array%\": \"undefined\" == typeof Uint8Array ? t : Uint8Array,\n                    \"%Uint8ClampedArray%\": \"undefined\" == typeof Uint8ClampedArray ? t : Uint8ClampedArray,\n                    \"%Uint16Array%\": \"undefined\" == typeof Uint16Array ? t : Uint16Array,\n                    \"%Uint32Array%\": \"undefined\" == typeof Uint32Array ? t : Uint32Array,\n                    \"%URIError%\": URIError,\n                    \"%WeakMap%\": \"undefined\" == typeof WeakMap ? t : WeakMap,\n                    \"%WeakRef%\": \"undefined\" == typeof WeakRef ? t : WeakRef,\n                    \"%WeakSet%\": \"undefined\" == typeof WeakSet ? t : WeakSet\n                };\n                if (m) try {\n                    null.error;\n                } catch (e) {\n                    var h = m(m(e));\n                    v[\"%Error.prototype%\"] = h;\n                }\n                var b = function e(n) {\n                    var a;\n                    if (\"%AsyncFunction%\" === n) a = r(\"async function () {}\");\n                    else if (\"%GeneratorFunction%\" === n) a = r(\"function* () {}\");\n                    else if (\"%AsyncGeneratorFunction%\" === n) a = r(\"async function* () {}\");\n                    else if (\"%AsyncGenerator%\" === n) {\n                        var t = e(\"%AsyncGeneratorFunction%\");\n                        t && (a = t.prototype);\n                    } else if (\"%AsyncIteratorPrototype%\" === n) {\n                        var i = e(\"%AsyncGenerator%\");\n                        i && m && (a = m(i.prototype));\n                    }\n                    return v[n] = a, a;\n                }, g = {\n                    \"%ArrayBufferPrototype%\": [\n                        \"ArrayBuffer\",\n                        \"prototype\"\n                    ],\n                    \"%ArrayPrototype%\": [\n                        \"Array\",\n                        \"prototype\"\n                    ],\n                    \"%ArrayProto_entries%\": [\n                        \"Array\",\n                        \"prototype\",\n                        \"entries\"\n                    ],\n                    \"%ArrayProto_forEach%\": [\n                        \"Array\",\n                        \"prototype\",\n                        \"forEach\"\n                    ],\n                    \"%ArrayProto_keys%\": [\n                        \"Array\",\n                        \"prototype\",\n                        \"keys\"\n                    ],\n                    \"%ArrayProto_values%\": [\n                        \"Array\",\n                        \"prototype\",\n                        \"values\"\n                    ],\n                    \"%AsyncFunctionPrototype%\": [\n                        \"AsyncFunction\",\n                        \"prototype\"\n                    ],\n                    \"%AsyncGenerator%\": [\n                        \"AsyncGeneratorFunction\",\n                        \"prototype\"\n                    ],\n                    \"%AsyncGeneratorPrototype%\": [\n                        \"AsyncGeneratorFunction\",\n                        \"prototype\",\n                        \"prototype\"\n                    ],\n                    \"%BooleanPrototype%\": [\n                        \"Boolean\",\n                        \"prototype\"\n                    ],\n                    \"%DataViewPrototype%\": [\n                        \"DataView\",\n                        \"prototype\"\n                    ],\n                    \"%DatePrototype%\": [\n                        \"Date\",\n                        \"prototype\"\n                    ],\n                    \"%ErrorPrototype%\": [\n                        \"Error\",\n                        \"prototype\"\n                    ],\n                    \"%EvalErrorPrototype%\": [\n                        \"EvalError\",\n                        \"prototype\"\n                    ],\n                    \"%Float32ArrayPrototype%\": [\n                        \"Float32Array\",\n                        \"prototype\"\n                    ],\n                    \"%Float64ArrayPrototype%\": [\n                        \"Float64Array\",\n                        \"prototype\"\n                    ],\n                    \"%FunctionPrototype%\": [\n                        \"Function\",\n                        \"prototype\"\n                    ],\n                    \"%Generator%\": [\n                        \"GeneratorFunction\",\n                        \"prototype\"\n                    ],\n                    \"%GeneratorPrototype%\": [\n                        \"GeneratorFunction\",\n                        \"prototype\",\n                        \"prototype\"\n                    ],\n                    \"%Int8ArrayPrototype%\": [\n                        \"Int8Array\",\n                        \"prototype\"\n                    ],\n                    \"%Int16ArrayPrototype%\": [\n                        \"Int16Array\",\n                        \"prototype\"\n                    ],\n                    \"%Int32ArrayPrototype%\": [\n                        \"Int32Array\",\n                        \"prototype\"\n                    ],\n                    \"%JSONParse%\": [\n                        \"JSON\",\n                        \"parse\"\n                    ],\n                    \"%JSONStringify%\": [\n                        \"JSON\",\n                        \"stringify\"\n                    ],\n                    \"%MapPrototype%\": [\n                        \"Map\",\n                        \"prototype\"\n                    ],\n                    \"%NumberPrototype%\": [\n                        \"Number\",\n                        \"prototype\"\n                    ],\n                    \"%ObjectPrototype%\": [\n                        \"Object\",\n                        \"prototype\"\n                    ],\n                    \"%ObjProto_toString%\": [\n                        \"Object\",\n                        \"prototype\",\n                        \"toString\"\n                    ],\n                    \"%ObjProto_valueOf%\": [\n                        \"Object\",\n                        \"prototype\",\n                        \"valueOf\"\n                    ],\n                    \"%PromisePrototype%\": [\n                        \"Promise\",\n                        \"prototype\"\n                    ],\n                    \"%PromiseProto_then%\": [\n                        \"Promise\",\n                        \"prototype\",\n                        \"then\"\n                    ],\n                    \"%Promise_all%\": [\n                        \"Promise\",\n                        \"all\"\n                    ],\n                    \"%Promise_reject%\": [\n                        \"Promise\",\n                        \"reject\"\n                    ],\n                    \"%Promise_resolve%\": [\n                        \"Promise\",\n                        \"resolve\"\n                    ],\n                    \"%RangeErrorPrototype%\": [\n                        \"RangeError\",\n                        \"prototype\"\n                    ],\n                    \"%ReferenceErrorPrototype%\": [\n                        \"ReferenceError\",\n                        \"prototype\"\n                    ],\n                    \"%RegExpPrototype%\": [\n                        \"RegExp\",\n                        \"prototype\"\n                    ],\n                    \"%SetPrototype%\": [\n                        \"Set\",\n                        \"prototype\"\n                    ],\n                    \"%SharedArrayBufferPrototype%\": [\n                        \"SharedArrayBuffer\",\n                        \"prototype\"\n                    ],\n                    \"%StringPrototype%\": [\n                        \"String\",\n                        \"prototype\"\n                    ],\n                    \"%SymbolPrototype%\": [\n                        \"Symbol\",\n                        \"prototype\"\n                    ],\n                    \"%SyntaxErrorPrototype%\": [\n                        \"SyntaxError\",\n                        \"prototype\"\n                    ],\n                    \"%TypedArrayPrototype%\": [\n                        \"TypedArray\",\n                        \"prototype\"\n                    ],\n                    \"%TypeErrorPrototype%\": [\n                        \"TypeError\",\n                        \"prototype\"\n                    ],\n                    \"%Uint8ArrayPrototype%\": [\n                        \"Uint8Array\",\n                        \"prototype\"\n                    ],\n                    \"%Uint8ClampedArrayPrototype%\": [\n                        \"Uint8ClampedArray\",\n                        \"prototype\"\n                    ],\n                    \"%Uint16ArrayPrototype%\": [\n                        \"Uint16Array\",\n                        \"prototype\"\n                    ],\n                    \"%Uint32ArrayPrototype%\": [\n                        \"Uint32Array\",\n                        \"prototype\"\n                    ],\n                    \"%URIErrorPrototype%\": [\n                        \"URIError\",\n                        \"prototype\"\n                    ],\n                    \"%WeakMapPrototype%\": [\n                        \"WeakMap\",\n                        \"prototype\"\n                    ],\n                    \"%WeakSetPrototype%\": [\n                        \"WeakSet\",\n                        \"prototype\"\n                    ]\n                }, y = a(132), w = a(1712), j = y.call(Function.call, Array.prototype.concat), k = y.call(Function.apply, Array.prototype.splice), S = y.call(Function.call, String.prototype.replace), O = y.call(Function.call, String.prototype.slice), _ = y.call(Function.call, RegExp.prototype.exec), E = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g, A = /\\\\(\\\\)?/g, R = function(e, n) {\n                    var a, t = e;\n                    if (w(g, t) && (t = \"%\" + (a = g[t])[0] + \"%\"), w(v, t)) {\n                        var o = v[t];\n                        if (o === f && (o = b(t)), void 0 === o && !n) throw new s(\"intrinsic \" + e + \" exists, but is not available. Please file an issue!\");\n                        return {\n                            alias: a,\n                            name: t,\n                            value: o\n                        };\n                    }\n                    throw new i(\"intrinsic \" + e + \" does not exist!\");\n                };\n                e.exports = function(e, n) {\n                    if (\"string\" != typeof e || 0 === e.length) throw new s(\"intrinsic name must be a non-empty string\");\n                    if (arguments.length > 1 && \"boolean\" != typeof n) throw new s('\"allowMissing\" argument must be a boolean');\n                    if (null === _(/^%?[^%]*%?$/, e)) throw new i(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\");\n                    var a = function(e) {\n                        var n = O(e, 0, 1), a = O(e, -1);\n                        if (\"%\" === n && \"%\" !== a) throw new i(\"invalid intrinsic syntax, expected closing `%`\");\n                        if (\"%\" === a && \"%\" !== n) throw new i(\"invalid intrinsic syntax, expected opening `%`\");\n                        var t = [];\n                        return S(e, E, function(e, n, a, i) {\n                            t[t.length] = a ? S(i, A, \"$1\") : n || e;\n                        }), t;\n                    }(e), t = a.length > 0 ? a[0] : \"\", o = R(\"%\" + t + \"%\", n), r = o.name, p = o.value, l = !1, u = o.alias;\n                    u && (t = u[0], k(a, j([\n                        0,\n                        1\n                    ], u)));\n                    for(var d = 1, m = !0; d < a.length; d += 1){\n                        var f = a[d], x = O(f, 0, 1), h = O(f, -1);\n                        if (('\"' === x || \"'\" === x || \"`\" === x || '\"' === h || \"'\" === h || \"`\" === h) && x !== h) throw new i(\"property names with quotes must have matching quotes\");\n                        if (\"constructor\" !== f && m || (l = !0), w(v, r = \"%\" + (t += \".\" + f) + \"%\")) p = v[r];\n                        else if (null != p) {\n                            if (!(f in p)) {\n                                if (!n) throw new s(\"base intrinsic for \" + e + \" exists, but the property is not available.\");\n                                return;\n                            }\n                            if (c && d + 1 >= a.length) {\n                                var b = c(p, f);\n                                p = (m = !!b) && \"get\" in b && !(\"originalValue\" in b.get) ? b.get : p[f];\n                            } else m = w(p, f), p = p[f];\n                            m && !l && (v[r] = p);\n                        }\n                    }\n                    return p;\n                };\n            },\n            7502: (e, n, a)=>{\n                \"use strict\";\n                var t = a(8750)(\"%Object.getOwnPropertyDescriptor%\", !0);\n                if (t) try {\n                    t([], \"length\");\n                } catch (e) {\n                    t = null;\n                }\n                e.exports = t;\n            },\n            1875: (e)=>{\n                \"use strict\";\n                e.exports = (e, n)=>{\n                    n = n || process.argv;\n                    const a = e.startsWith(\"-\") ? \"\" : 1 === e.length ? \"-\" : \"--\", t = n.indexOf(a + e), i = n.indexOf(\"--\");\n                    return -1 !== t && (-1 === i || t < i);\n                };\n            },\n            1365: (e, n, a)=>{\n                \"use strict\";\n                var t = a(8750)(\"%Object.defineProperty%\", !0), i = function() {\n                    if (t) try {\n                        return t({}, \"a\", {\n                            value: 1\n                        }), !0;\n                    } catch (e) {\n                        return !1;\n                    }\n                    return !1;\n                };\n                i.hasArrayLengthDefineBug = function() {\n                    if (!i()) return null;\n                    try {\n                        return 1 !== t([], \"length\", {\n                            value: 1\n                        }).length;\n                    } catch (e) {\n                        return !0;\n                    }\n                }, e.exports = i;\n            },\n            2574: (e)=>{\n                \"use strict\";\n                var n = {\n                    foo: {}\n                }, a = Object;\n                e.exports = function() {\n                    return ({\n                        __proto__: n\n                    }).foo === n.foo && !(({\n                        __proto__: null\n                    }) instanceof a);\n                };\n            },\n            679: (e, n, a)=>{\n                \"use strict\";\n                var t = \"undefined\" != typeof Symbol && Symbol, i = a(8186);\n                e.exports = function() {\n                    return \"function\" == typeof t && \"function\" == typeof Symbol && \"symbol\" == typeof t(\"foo\") && \"symbol\" == typeof Symbol(\"bar\") && i();\n                };\n            },\n            8186: (e)=>{\n                \"use strict\";\n                e.exports = function() {\n                    if (\"function\" != typeof Symbol || \"function\" != typeof Object.getOwnPropertySymbols) return !1;\n                    if (\"symbol\" == typeof Symbol.iterator) return !0;\n                    var e = {}, n = Symbol(\"test\"), a = Object(n);\n                    if (\"string\" == typeof n) return !1;\n                    if (\"[object Symbol]\" !== Object.prototype.toString.call(n)) return !1;\n                    if (\"[object Symbol]\" !== Object.prototype.toString.call(a)) return !1;\n                    for(n in e[n] = 42, e)return !1;\n                    if (\"function\" == typeof Object.keys && 0 !== Object.keys(e).length) return !1;\n                    if (\"function\" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(e).length) return !1;\n                    var t = Object.getOwnPropertySymbols(e);\n                    if (1 !== t.length || t[0] !== n) return !1;\n                    if (!Object.prototype.propertyIsEnumerable.call(e, n)) return !1;\n                    if (\"function\" == typeof Object.getOwnPropertyDescriptor) {\n                        var i = Object.getOwnPropertyDescriptor(e, n);\n                        if (42 !== i.value || !0 !== i.enumerable) return !1;\n                    }\n                    return !0;\n                };\n            },\n            1712: (e, n, a)=>{\n                \"use strict\";\n                var t = Function.prototype.call, i = Object.prototype.hasOwnProperty, o = a(132);\n                e.exports = o.call(t, i);\n            },\n            3784: (e, n)=>{\n                function a(e, n) {\n                    var a = [], t = [];\n                    return null == n && (n = function(e, n) {\n                        return a[0] === n ? \"[Circular ~]\" : \"[Circular ~.\" + t.slice(0, a.indexOf(n)).join(\".\") + \"]\";\n                    }), function(i, o) {\n                        if (a.length > 0) {\n                            var s = a.indexOf(this);\n                            ~s ? a.splice(s + 1) : a.push(this), ~s ? t.splice(s, 1 / 0, i) : t.push(i), ~a.indexOf(o) && (o = n.call(this, i, o));\n                        } else a.push(o);\n                        return null == e ? o : e.call(this, i, o);\n                    };\n                }\n                (e.exports = function(e, n, t, i) {\n                    return JSON.stringify(e, a(n, i), t);\n                }).getSerialize = a;\n            },\n            3261: (e)=>{\n                var n, a, t = Function.prototype, i = Object.prototype, o = t.toString, s = i.hasOwnProperty, r = o.call(Object), c = i.toString, p = (n = Object.getPrototypeOf, a = Object, function(e) {\n                    return n(a(e));\n                });\n                e.exports = function(e) {\n                    if (!function(e) {\n                        return !!e && \"object\" == typeof e;\n                    }(e) || \"[object Object]\" != c.call(e) || function(e) {\n                        var n = !1;\n                        if (null != e && \"function\" != typeof e.toString) try {\n                            n = !!(e + \"\");\n                        } catch (e) {}\n                        return n;\n                    }(e)) return !1;\n                    var n = p(e);\n                    if (null === n) return !0;\n                    var a = s.call(n, \"constructor\") && n.constructor;\n                    return \"function\" == typeof a && a instanceof a && o.call(a) == r;\n                };\n            },\n            1451: (e)=>{\n                var n = Object.prototype.toString, a = Array.isArray;\n                e.exports = function(e) {\n                    return \"string\" == typeof e || !a(e) && function(e) {\n                        return !!e && \"object\" == typeof e;\n                    }(e) && \"[object String]\" == n.call(e);\n                };\n            },\n            5955: (e, n, a)=>{\n                e.exports = a(7392);\n            },\n            2839: (e, n, a)=>{\n                \"use strict\";\n                var t, i, o, s = a(5955), r = a(1017).extname, c = /^\\s*([^;\\s]*)(?:;|\\s|$)/, p = /^text\\//i;\n                function l(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var n = c.exec(e), a = n && s[n[1].toLowerCase()];\n                    return a && a.charset ? a.charset : !(!n || !p.test(n[1])) && \"UTF-8\";\n                }\n                n.charset = l, n.charsets = {\n                    lookup: l\n                }, n.contentType = function(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var a = -1 === e.indexOf(\"/\") ? n.lookup(e) : e;\n                    if (!a) return !1;\n                    if (-1 === a.indexOf(\"charset\")) {\n                        var t = n.charset(a);\n                        t && (a += \"; charset=\" + t.toLowerCase());\n                    }\n                    return a;\n                }, n.extension = function(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var a = c.exec(e), t = a && n.extensions[a[1].toLowerCase()];\n                    return !(!t || !t.length) && t[0];\n                }, n.extensions = Object.create(null), n.lookup = function(e) {\n                    if (!e || \"string\" != typeof e) return !1;\n                    var a = r(\"x.\" + e).toLowerCase().substr(1);\n                    return a && n.types[a] || !1;\n                }, n.types = Object.create(null), t = n.extensions, i = n.types, o = [\n                    \"nginx\",\n                    \"apache\",\n                    void 0,\n                    \"iana\"\n                ], Object.keys(s).forEach(function(e) {\n                    var n = s[e], a = n.extensions;\n                    if (a && a.length) {\n                        t[e] = a;\n                        for(var r = 0; r < a.length; r++){\n                            var c = a[r];\n                            if (i[c]) {\n                                var p = o.indexOf(s[i[c]].source), l = o.indexOf(n.source);\n                                if (\"application/octet-stream\" !== i[c] && (p > l || p === l && \"application/\" === i[c].substr(0, 12))) continue;\n                            }\n                            i[c] = e;\n                        }\n                    }\n                });\n            },\n            8628: (e)=>{\n                var n = 1e3, a = 60 * n, t = 60 * a, i = 24 * t;\n                function o(e, n, a, t) {\n                    var i = n >= 1.5 * a;\n                    return Math.round(e / a) + \" \" + t + (i ? \"s\" : \"\");\n                }\n                e.exports = function(e, s) {\n                    s = s || {};\n                    var r, c, p = typeof e;\n                    if (\"string\" === p && e.length > 0) return function(e) {\n                        if (!((e = String(e)).length > 100)) {\n                            var o = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);\n                            if (o) {\n                                var s = parseFloat(o[1]);\n                                switch((o[2] || \"ms\").toLowerCase()){\n                                    case \"years\":\n                                    case \"year\":\n                                    case \"yrs\":\n                                    case \"yr\":\n                                    case \"y\":\n                                        return 315576e5 * s;\n                                    case \"weeks\":\n                                    case \"week\":\n                                    case \"w\":\n                                        return 6048e5 * s;\n                                    case \"days\":\n                                    case \"day\":\n                                    case \"d\":\n                                        return s * i;\n                                    case \"hours\":\n                                    case \"hour\":\n                                    case \"hrs\":\n                                    case \"hr\":\n                                    case \"h\":\n                                        return s * t;\n                                    case \"minutes\":\n                                    case \"minute\":\n                                    case \"mins\":\n                                    case \"min\":\n                                    case \"m\":\n                                        return s * a;\n                                    case \"seconds\":\n                                    case \"second\":\n                                    case \"secs\":\n                                    case \"sec\":\n                                    case \"s\":\n                                        return s * n;\n                                    case \"milliseconds\":\n                                    case \"millisecond\":\n                                    case \"msecs\":\n                                    case \"msec\":\n                                    case \"ms\":\n                                        return s;\n                                    default:\n                                        return;\n                                }\n                            }\n                        }\n                    }(e);\n                    if (\"number\" === p && isFinite(e)) return s.long ? (r = e, (c = Math.abs(r)) >= i ? o(r, c, i, \"day\") : c >= t ? o(r, c, t, \"hour\") : c >= a ? o(r, c, a, \"minute\") : c >= n ? o(r, c, n, \"second\") : r + \" ms\") : function(e) {\n                        var o = Math.abs(e);\n                        return o >= i ? Math.round(e / i) + \"d\" : o >= t ? Math.round(e / t) + \"h\" : o >= a ? Math.round(e / a) + \"m\" : o >= n ? Math.round(e / n) + \"s\" : e + \"ms\";\n                    }(e);\n                    throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(e));\n                };\n            },\n            6524: (e, n, a)=>{\n                var t = \"function\" == typeof Map && Map.prototype, i = Object.getOwnPropertyDescriptor && t ? Object.getOwnPropertyDescriptor(Map.prototype, \"size\") : null, o = t && i && \"function\" == typeof i.get ? i.get : null, s = t && Map.prototype.forEach, r = \"function\" == typeof Set && Set.prototype, c = Object.getOwnPropertyDescriptor && r ? Object.getOwnPropertyDescriptor(Set.prototype, \"size\") : null, p = r && c && \"function\" == typeof c.get ? c.get : null, l = r && Set.prototype.forEach, u = \"function\" == typeof WeakMap && WeakMap.prototype ? WeakMap.prototype.has : null, d = \"function\" == typeof WeakSet && WeakSet.prototype ? WeakSet.prototype.has : null, m = \"function\" == typeof WeakRef && WeakRef.prototype ? WeakRef.prototype.deref : null, f = Boolean.prototype.valueOf, x = Object.prototype.toString, v = Function.prototype.toString, h = String.prototype.match, b = String.prototype.slice, g = String.prototype.replace, y = String.prototype.toUpperCase, w = String.prototype.toLowerCase, j = RegExp.prototype.test, k = Array.prototype.concat, S = Array.prototype.join, O = Array.prototype.slice, _ = Math.floor, E = \"function\" == typeof BigInt ? BigInt.prototype.valueOf : null, A = Object.getOwnPropertySymbols, R = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? Symbol.prototype.toString : null, T = \"function\" == typeof Symbol && \"object\" == typeof Symbol.iterator, C = \"function\" == typeof Symbol && Symbol.toStringTag && (Symbol.toStringTag, 1) ? Symbol.toStringTag : null, L = Object.prototype.propertyIsEnumerable, P = (\"function\" == typeof Reflect ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(e) {\n                    return e.__proto__;\n                } : null);\n                function F(e, n) {\n                    if (e === 1 / 0 || e === -1 / 0 || e != e || e && e > -1e3 && e < 1e3 || j.call(/e/, n)) return n;\n                    var a = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n                    if (\"number\" == typeof e) {\n                        var t = e < 0 ? -_(-e) : _(e);\n                        if (t !== e) {\n                            var i = String(t), o = b.call(n, i.length + 1);\n                            return g.call(i, a, \"$&_\") + \".\" + g.call(g.call(o, /([0-9]{3})/g, \"$&_\"), /_$/, \"\");\n                        }\n                    }\n                    return g.call(n, a, \"$&_\");\n                }\n                var z = a(5307), U = z.custom, B = M(U) ? U : null;\n                function N(e, n, a) {\n                    var t = \"double\" === (a.quoteStyle || n) ? '\"' : \"'\";\n                    return t + e + t;\n                }\n                function q(e) {\n                    return g.call(String(e), /\"/g, \"&quot;\");\n                }\n                function I(e) {\n                    return !(\"[object Array]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                }\n                function D(e) {\n                    return !(\"[object RegExp]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                }\n                function M(e) {\n                    if (T) return e && \"object\" == typeof e && e instanceof Symbol;\n                    if (\"symbol\" == typeof e) return !0;\n                    if (!e || \"object\" != typeof e || !R) return !1;\n                    try {\n                        return R.call(e), !0;\n                    } catch (e) {}\n                    return !1;\n                }\n                e.exports = function e(n, a, t, i) {\n                    var r = a || {};\n                    if (H(r, \"quoteStyle\") && \"single\" !== r.quoteStyle && \"double\" !== r.quoteStyle) throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n                    if (H(r, \"maxStringLength\") && (\"number\" == typeof r.maxStringLength ? r.maxStringLength < 0 && r.maxStringLength !== 1 / 0 : null !== r.maxStringLength)) throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n                    var c = !H(r, \"customInspect\") || r.customInspect;\n                    if (\"boolean\" != typeof c && \"symbol\" !== c) throw new TypeError(\"option \\\"customInspect\\\", if provided, must be `true`, `false`, or `'symbol'`\");\n                    if (H(r, \"indent\") && null !== r.indent && \"\t\" !== r.indent && !(parseInt(r.indent, 10) === r.indent && r.indent > 0)) throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n                    if (H(r, \"numericSeparator\") && \"boolean\" != typeof r.numericSeparator) throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n                    var x = r.numericSeparator;\n                    if (void 0 === n) return \"undefined\";\n                    if (null === n) return \"null\";\n                    if (\"boolean\" == typeof n) return n ? \"true\" : \"false\";\n                    if (\"string\" == typeof n) return V(n, r);\n                    if (\"number\" == typeof n) {\n                        if (0 === n) return 1 / 0 / n > 0 ? \"0\" : \"-0\";\n                        var y = String(n);\n                        return x ? F(n, y) : y;\n                    }\n                    if (\"bigint\" == typeof n) {\n                        var j = String(n) + \"n\";\n                        return x ? F(n, j) : j;\n                    }\n                    var _ = void 0 === r.depth ? 5 : r.depth;\n                    if (void 0 === t && (t = 0), t >= _ && _ > 0 && \"object\" == typeof n) return I(n) ? \"[Array]\" : \"[Object]\";\n                    var A, U = function(e, n) {\n                        var a;\n                        if (\"\t\" === e.indent) a = \"\t\";\n                        else {\n                            if (!(\"number\" == typeof e.indent && e.indent > 0)) return null;\n                            a = S.call(Array(e.indent + 1), \" \");\n                        }\n                        return {\n                            base: a,\n                            prev: S.call(Array(n + 1), a)\n                        };\n                    }(r, t);\n                    if (void 0 === i) i = [];\n                    else if (G(i, n) >= 0) return \"[Circular]\";\n                    function W(n, a, o) {\n                        if (a && (i = O.call(i)).push(a), o) {\n                            var s = {\n                                depth: r.depth\n                            };\n                            return H(r, \"quoteStyle\") && (s.quoteStyle = r.quoteStyle), e(n, s, t + 1, i);\n                        }\n                        return e(n, r, t + 1, i);\n                    }\n                    if (\"function\" == typeof n && !D(n)) {\n                        var J = function(e) {\n                            if (e.name) return e.name;\n                            var n = h.call(v.call(e), /^function\\s*([\\w$]+)/);\n                            return n ? n[1] : null;\n                        }(n), ee = Z(n, W);\n                        return \"[Function\" + (J ? \": \" + J : \" (anonymous)\") + \"]\" + (ee.length > 0 ? \" { \" + S.call(ee, \", \") + \" }\" : \"\");\n                    }\n                    if (M(n)) {\n                        var ne = T ? g.call(String(n), /^(Symbol\\(.*\\))_[^)]*$/, \"$1\") : R.call(n);\n                        return \"object\" != typeof n || T ? ne : K(ne);\n                    }\n                    if ((A = n) && \"object\" == typeof A && (\"undefined\" != typeof HTMLElement && A instanceof HTMLElement || \"string\" == typeof A.nodeName && \"function\" == typeof A.getAttribute)) {\n                        for(var ae = \"<\" + w.call(String(n.nodeName)), te = n.attributes || [], ie = 0; ie < te.length; ie++)ae += \" \" + te[ie].name + \"=\" + N(q(te[ie].value), \"double\", r);\n                        return ae += \">\", n.childNodes && n.childNodes.length && (ae += \"...\"), ae + \"</\" + w.call(String(n.nodeName)) + \">\";\n                    }\n                    if (I(n)) {\n                        if (0 === n.length) return \"[]\";\n                        var oe = Z(n, W);\n                        return U && !function(e) {\n                            for(var n = 0; n < e.length; n++)if (G(e[n], \"\\n\") >= 0) return !1;\n                            return !0;\n                        }(oe) ? \"[\" + X(oe, U) + \"]\" : \"[ \" + S.call(oe, \", \") + \" ]\";\n                    }\n                    if (function(e) {\n                        return !(\"[object Error]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                    }(n)) {\n                        var se = Z(n, W);\n                        return \"cause\" in Error.prototype || !(\"cause\" in n) || L.call(n, \"cause\") ? 0 === se.length ? \"[\" + String(n) + \"]\" : \"{ [\" + String(n) + \"] \" + S.call(se, \", \") + \" }\" : \"{ [\" + String(n) + \"] \" + S.call(k.call(\"[cause]: \" + W(n.cause), se), \", \") + \" }\";\n                    }\n                    if (\"object\" == typeof n && c) {\n                        if (B && \"function\" == typeof n[B] && z) return z(n, {\n                            depth: _ - t\n                        });\n                        if (\"symbol\" !== c && \"function\" == typeof n.inspect) return n.inspect();\n                    }\n                    if (function(e) {\n                        if (!o || !e || \"object\" != typeof e) return !1;\n                        try {\n                            o.call(e);\n                            try {\n                                p.call(e);\n                            } catch (e) {\n                                return !0;\n                            }\n                            return e instanceof Map;\n                        } catch (e) {}\n                        return !1;\n                    }(n)) {\n                        var re = [];\n                        return s && s.call(n, function(e, a) {\n                            re.push(W(a, n, !0) + \" => \" + W(e, n));\n                        }), Y(\"Map\", o.call(n), re, U);\n                    }\n                    if (function(e) {\n                        if (!p || !e || \"object\" != typeof e) return !1;\n                        try {\n                            p.call(e);\n                            try {\n                                o.call(e);\n                            } catch (e) {\n                                return !0;\n                            }\n                            return e instanceof Set;\n                        } catch (e) {}\n                        return !1;\n                    }(n)) {\n                        var ce = [];\n                        return l && l.call(n, function(e) {\n                            ce.push(W(e, n));\n                        }), Y(\"Set\", p.call(n), ce, U);\n                    }\n                    if (function(e) {\n                        if (!u || !e || \"object\" != typeof e) return !1;\n                        try {\n                            u.call(e, u);\n                            try {\n                                d.call(e, d);\n                            } catch (e) {\n                                return !0;\n                            }\n                            return e instanceof WeakMap;\n                        } catch (e) {}\n                        return !1;\n                    }(n)) return Q(\"WeakMap\");\n                    if (function(e) {\n                        if (!d || !e || \"object\" != typeof e) return !1;\n                        try {\n                            d.call(e, d);\n                            try {\n                                u.call(e, u);\n                            } catch (e) {\n                                return !0;\n                            }\n                            return e instanceof WeakSet;\n                        } catch (e) {}\n                        return !1;\n                    }(n)) return Q(\"WeakSet\");\n                    if (function(e) {\n                        if (!m || !e || \"object\" != typeof e) return !1;\n                        try {\n                            return m.call(e), !0;\n                        } catch (e) {}\n                        return !1;\n                    }(n)) return Q(\"WeakRef\");\n                    if (function(e) {\n                        return !(\"[object Number]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                    }(n)) return K(W(Number(n)));\n                    if (function(e) {\n                        if (!e || \"object\" != typeof e || !E) return !1;\n                        try {\n                            return E.call(e), !0;\n                        } catch (e) {}\n                        return !1;\n                    }(n)) return K(W(E.call(n)));\n                    if (function(e) {\n                        return !(\"[object Boolean]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                    }(n)) return K(f.call(n));\n                    if (function(e) {\n                        return !(\"[object String]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                    }(n)) return K(W(String(n)));\n                    if (false) {}\n                    if (n === global) return \"{ [object globalThis] }\";\n                    if (!function(e) {\n                        return !(\"[object Date]\" !== $(e) || C && \"object\" == typeof e && C in e);\n                    }(n) && !D(n)) {\n                        var pe = Z(n, W), le = P ? P(n) === Object.prototype : n instanceof Object || n.constructor === Object, ue = n instanceof Object ? \"\" : \"null prototype\", de = !le && C && Object(n) === n && C in n ? b.call($(n), 8, -1) : ue ? \"Object\" : \"\", me = (le || \"function\" != typeof n.constructor ? \"\" : n.constructor.name ? n.constructor.name + \" \" : \"\") + (de || ue ? \"[\" + S.call(k.call([], de || [], ue || []), \": \") + \"] \" : \"\");\n                        return 0 === pe.length ? me + \"{}\" : U ? me + \"{\" + X(pe, U) + \"}\" : me + \"{ \" + S.call(pe, \", \") + \" }\";\n                    }\n                    return String(n);\n                };\n                var W = Object.prototype.hasOwnProperty || function(e) {\n                    return e in this;\n                };\n                function H(e, n) {\n                    return W.call(e, n);\n                }\n                function $(e) {\n                    return x.call(e);\n                }\n                function G(e, n) {\n                    if (e.indexOf) return e.indexOf(n);\n                    for(var a = 0, t = e.length; a < t; a++)if (e[a] === n) return a;\n                    return -1;\n                }\n                function V(e, n) {\n                    if (e.length > n.maxStringLength) {\n                        var a = e.length - n.maxStringLength, t = \"... \" + a + \" more character\" + (a > 1 ? \"s\" : \"\");\n                        return V(b.call(e, 0, n.maxStringLength), n) + t;\n                    }\n                    return N(g.call(g.call(e, /(['\\\\])/g, \"\\\\$1\"), /[\\x00-\\x1f]/g, J), \"single\", n);\n                }\n                function J(e) {\n                    var n = e.charCodeAt(0), a = {\n                        8: \"b\",\n                        9: \"t\",\n                        10: \"n\",\n                        12: \"f\",\n                        13: \"r\"\n                    }[n];\n                    return a ? \"\\\\\" + a : \"\\\\x\" + (n < 16 ? \"0\" : \"\") + y.call(n.toString(16));\n                }\n                function K(e) {\n                    return \"Object(\" + e + \")\";\n                }\n                function Q(e) {\n                    return e + \" { ? }\";\n                }\n                function Y(e, n, a, t) {\n                    return e + \" (\" + n + \") {\" + (t ? X(a, t) : S.call(a, \", \")) + \"}\";\n                }\n                function X(e, n) {\n                    if (0 === e.length) return \"\";\n                    var a = \"\\n\" + n.prev + n.base;\n                    return a + S.call(e, \",\" + a) + \"\\n\" + n.prev;\n                }\n                function Z(e, n) {\n                    var a = I(e), t = [];\n                    if (a) {\n                        t.length = e.length;\n                        for(var i = 0; i < e.length; i++)t[i] = H(e, i) ? n(e[i], e) : \"\";\n                    }\n                    var o, s = \"function\" == typeof A ? A(e) : [];\n                    if (T) {\n                        o = {};\n                        for(var r = 0; r < s.length; r++)o[\"$\" + s[r]] = s[r];\n                    }\n                    for(var c in e)H(e, c) && (a && String(Number(c)) === c && c < e.length || T && o[\"$\" + c] instanceof Symbol || (j.call(/[^\\w$]/, c) ? t.push(n(c, e) + \": \" + n(e[c], e)) : t.push(c + \": \" + n(e[c], e))));\n                    if (\"function\" == typeof A) for(var p = 0; p < s.length; p++)L.call(e, s[p]) && t.push(\"[\" + n(s[p]) + \"]: \" + n(e[s[p]], e));\n                    return t;\n                }\n            },\n            5307: (e, n, a)=>{\n                e.exports = a(3837).inspect;\n            },\n            3930: (e)=>{\n                \"use strict\";\n                class n extends Error {\n                    constructor(){\n                        super(\"Throttled function aborted\"), this.name = \"AbortError\";\n                    }\n                }\n                e.exports = ({ limit: e, interval: a, strict: t })=>{\n                    if (!Number.isFinite(e)) throw new TypeError(\"Expected `limit` to be a finite number\");\n                    if (!Number.isFinite(a)) throw new TypeError(\"Expected `interval` to be a finite number\");\n                    const i = new Map;\n                    let o = 0, s = 0;\n                    const r = [], c = t ? function() {\n                        const n = Date.now();\n                        if (r.length < e) return r.push(n), 0;\n                        const t = r.shift() + a;\n                        return n >= t ? (r.push(n), 0) : (r.push(t), t - n);\n                    } : function() {\n                        const n = Date.now();\n                        return n - o > a ? (s = 1, o = n, 0) : (s < e ? s++ : (o += a, s = 1), o - n);\n                    };\n                    return (e)=>{\n                        const a = function(...n) {\n                            if (!a.isEnabled) return (async ()=>e.apply(this, n))();\n                            let t;\n                            return new Promise((a, o)=>{\n                                t = setTimeout(()=>{\n                                    a(e.apply(this, n)), i.delete(t);\n                                }, c()), i.set(t, o);\n                            });\n                        };\n                        return a.abort = ()=>{\n                            for (const e of i.keys())clearTimeout(e), i.get(e)(new n);\n                            i.clear(), r.splice(0, r.length);\n                        }, a.isEnabled = !0, a;\n                    };\n                }, e.exports.AbortError = n;\n            },\n            1104: (e, n, a)=>{\n                \"use strict\";\n                var t = a(7310).parse, i = {\n                    ftp: 21,\n                    gopher: 70,\n                    http: 80,\n                    https: 443,\n                    ws: 80,\n                    wss: 443\n                }, o = String.prototype.endsWith || function(e) {\n                    return e.length <= this.length && -1 !== this.indexOf(e, this.length - e.length);\n                };\n                function s(e) {\n                    return process.env[e.toLowerCase()] || process.env[e.toUpperCase()] || \"\";\n                }\n                n.j = function(e) {\n                    var n = \"string\" == typeof e ? t(e) : e || {}, a = n.protocol, r = n.host, c = n.port;\n                    if (\"string\" != typeof r || !r || \"string\" != typeof a) return \"\";\n                    if (a = a.split(\":\", 1)[0], !function(e, n) {\n                        var a = (s(\"npm_config_no_proxy\") || s(\"no_proxy\")).toLowerCase();\n                        return !a || \"*\" !== a && a.split(/[,\\s]/).every(function(a) {\n                            if (!a) return !0;\n                            var t = a.match(/^(.+):(\\d+)$/), i = t ? t[1] : a, s = t ? parseInt(t[2]) : 0;\n                            return !(!s || s === n) || (/^[.*]/.test(i) ? (\"*\" === i.charAt(0) && (i = i.slice(1)), !o.call(e, i)) : e !== i);\n                        });\n                    }(r = r.replace(/:\\d*$/, \"\"), c = parseInt(c) || i[a] || 0)) return \"\";\n                    var p = s(\"npm_config_\" + a + \"_proxy\") || s(a + \"_proxy\") || s(\"npm_config_proxy\") || s(\"all_proxy\");\n                    return p && -1 === p.indexOf(\"://\") && (p = a + \"://\" + p), p;\n                };\n            },\n            504: (e, n, a)=>{\n                \"use strict\";\n                var t = a(8750), i = a(6300), o = a(1365)(), s = a(7502), r = t(\"%TypeError%\"), c = t(\"%Math.floor%\");\n                e.exports = function(e, n) {\n                    if (\"function\" != typeof e) throw new r(\"`fn` is not a function\");\n                    if (\"number\" != typeof n || n < 0 || n > 4294967295 || c(n) !== n) throw new r(\"`length` must be a positive 32-bit integer\");\n                    var a = arguments.length > 2 && !!arguments[2], t = !0, p = !0;\n                    if (\"length\" in e && s) {\n                        var l = s(e, \"length\");\n                        l && !l.configurable && (t = !1), l && !l.writable && (p = !1);\n                    }\n                    return (t || p || !a) && (o ? i(e, \"length\", n, !0, !0) : i(e, \"length\", n)), e;\n                };\n            },\n            5337: (e, n, a)=>{\n                \"use strict\";\n                var t = a(8750), i = a(2737), o = a(6524), s = t(\"%TypeError%\"), r = t(\"%WeakMap%\", !0), c = t(\"%Map%\", !0), p = i(\"WeakMap.prototype.get\", !0), l = i(\"WeakMap.prototype.set\", !0), u = i(\"WeakMap.prototype.has\", !0), d = i(\"Map.prototype.get\", !0), m = i(\"Map.prototype.set\", !0), f = i(\"Map.prototype.has\", !0), x = function(e, n) {\n                    for(var a, t = e; null !== (a = t.next); t = a)if (a.key === n) return t.next = a.next, a.next = e.next, e.next = a, a;\n                };\n                e.exports = function() {\n                    var e, n, a, t = {\n                        assert: function(e) {\n                            if (!t.has(e)) throw new s(\"Side channel does not contain \" + o(e));\n                        },\n                        get: function(t) {\n                            if (r && t && (\"object\" == typeof t || \"function\" == typeof t)) {\n                                if (e) return p(e, t);\n                            } else if (c) {\n                                if (n) return d(n, t);\n                            } else if (a) return function(e, n) {\n                                var a = x(e, n);\n                                return a && a.value;\n                            }(a, t);\n                        },\n                        has: function(t) {\n                            if (r && t && (\"object\" == typeof t || \"function\" == typeof t)) {\n                                if (e) return u(e, t);\n                            } else if (c) {\n                                if (n) return f(n, t);\n                            } else if (a) return function(e, n) {\n                                return !!x(e, n);\n                            }(a, t);\n                            return !1;\n                        },\n                        set: function(t, i) {\n                            r && t && (\"object\" == typeof t || \"function\" == typeof t) ? (e || (e = new r), l(e, t, i)) : c ? (n || (n = new c), m(n, t, i)) : (a || (a = {\n                                key: {},\n                                next: null\n                            }), function(e, n, a) {\n                                var t = x(e, n);\n                                t ? t.value = a : e.next = {\n                                    key: n,\n                                    next: e.next,\n                                    value: a\n                                };\n                            }(a, t, i));\n                        }\n                    };\n                    return t;\n                };\n            },\n            6974: (e, n, a)=>{\n                \"use strict\";\n                const t = a(2037), i = a(1875), o = process.env;\n                let s;\n                function r(e) {\n                    const n = function(e) {\n                        if (!1 === s) return 0;\n                        if (i(\"color=16m\") || i(\"color=full\") || i(\"color=truecolor\")) return 3;\n                        if (i(\"color=256\")) return 2;\n                        if (e && !e.isTTY && !0 !== s) return 0;\n                        const n = s ? 1 : 0;\n                        if (\"win32\" === process.platform) {\n                            const e = t.release().split(\".\");\n                            return Number(process.versions.node.split(\".\")[0]) >= 8 && Number(e[0]) >= 10 && Number(e[2]) >= 10586 ? Number(e[2]) >= 14931 ? 3 : 2 : 1;\n                        }\n                        if (\"CI\" in o) return [\n                            \"TRAVIS\",\n                            \"CIRCLECI\",\n                            \"APPVEYOR\",\n                            \"GITLAB_CI\"\n                        ].some((e)=>e in o) || \"codeship\" === o.CI_NAME ? 1 : n;\n                        if (\"TEAMCITY_VERSION\" in o) return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(o.TEAMCITY_VERSION) ? 1 : 0;\n                        if (\"truecolor\" === o.COLORTERM) return 3;\n                        if (\"TERM_PROGRAM\" in o) {\n                            const e = parseInt((o.TERM_PROGRAM_VERSION || \"\").split(\".\")[0], 10);\n                            switch(o.TERM_PROGRAM){\n                                case \"iTerm.app\":\n                                    return e >= 3 ? 3 : 2;\n                                case \"Apple_Terminal\":\n                                    return 2;\n                            }\n                        }\n                        return /-256(color)?$/i.test(o.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(o.TERM) || \"COLORTERM\" in o ? 1 : (o.TERM, n);\n                    }(e);\n                    return function(e) {\n                        return 0 !== e && {\n                            level: e,\n                            hasBasic: !0,\n                            has256: e >= 2,\n                            has16m: e >= 3\n                        };\n                    }(n);\n                }\n                i(\"no-color\") || i(\"no-colors\") || i(\"color=false\") ? s = !1 : (i(\"color\") || i(\"colors\") || i(\"color=true\") || i(\"color=always\")) && (s = !0), \"FORCE_COLOR\" in o && (s = 0 === o.FORCE_COLOR.length || 0 !== parseInt(o.FORCE_COLOR, 10)), e.exports = {\n                    supportsColor: r,\n                    stdout: r(process.stdout),\n                    stderr: r(process.stderr)\n                };\n            },\n            9491: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! assert */ \"assert\");\n            },\n            7147: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! fs */ \"fs\");\n            },\n            3685: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! http */ \"http\");\n            },\n            5687: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! https */ \"https\");\n            },\n            2037: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! os */ \"os\");\n            },\n            1017: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! path */ \"path\");\n            },\n            2781: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! stream */ \"stream\");\n            },\n            6224: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! tty */ \"tty\");\n            },\n            7310: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! url */ \"url\");\n            },\n            3837: (e)=>{\n                \"use strict\";\n                e.exports = __webpack_require__(/*! util */ \"util\");\n            },\n            7392: (e)=>{\n                \"use strict\";\n                e.exports = JSON.parse('{\"application/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"application/3gpdash-qoe-report+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/3gpp-ims+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/3gpphalforms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/a2l\":{\"source\":\"iana\"},\"application/ace+cbor\":{\"source\":\"iana\"},\"application/activemessage\":{\"source\":\"iana\"},\"application/activity+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-costmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-directory+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcost+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointcostparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointprop+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-endpointpropparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-error+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-networkmapfilter+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamcontrol+json\":{\"source\":\"iana\",\"compressible\":true},\"application/alto-updatestreamparams+json\":{\"source\":\"iana\",\"compressible\":true},\"application/aml\":{\"source\":\"iana\"},\"application/andrew-inset\":{\"source\":\"iana\",\"extensions\":[\"ez\"]},\"application/applefile\":{\"source\":\"iana\"},\"application/applixware\":{\"source\":\"apache\",\"extensions\":[\"aw\"]},\"application/at+jwt\":{\"source\":\"iana\"},\"application/atf\":{\"source\":\"iana\"},\"application/atfx\":{\"source\":\"iana\"},\"application/atom+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atom\"]},\"application/atomcat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomcat\"]},\"application/atomdeleted+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomdeleted\"]},\"application/atomicmail\":{\"source\":\"iana\"},\"application/atomsvc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"atomsvc\"]},\"application/atsc-dwd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dwd\"]},\"application/atsc-dynamic-event-message\":{\"source\":\"iana\"},\"application/atsc-held+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"held\"]},\"application/atsc-rdt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/atsc-rsat+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsat\"]},\"application/atxml\":{\"source\":\"iana\"},\"application/auth-policy+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/bacnet-xdd+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/batch-smtp\":{\"source\":\"iana\"},\"application/bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/beep+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/calendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/calendar+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xcs\"]},\"application/call-completion\":{\"source\":\"iana\"},\"application/cals-1840\":{\"source\":\"iana\"},\"application/captive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cbor\":{\"source\":\"iana\"},\"application/cbor-seq\":{\"source\":\"iana\"},\"application/cccex\":{\"source\":\"iana\"},\"application/ccmp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ccxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ccxml\"]},\"application/cdfx+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdfx\"]},\"application/cdmi-capability\":{\"source\":\"iana\",\"extensions\":[\"cdmia\"]},\"application/cdmi-container\":{\"source\":\"iana\",\"extensions\":[\"cdmic\"]},\"application/cdmi-domain\":{\"source\":\"iana\",\"extensions\":[\"cdmid\"]},\"application/cdmi-object\":{\"source\":\"iana\",\"extensions\":[\"cdmio\"]},\"application/cdmi-queue\":{\"source\":\"iana\",\"extensions\":[\"cdmiq\"]},\"application/cdni\":{\"source\":\"iana\"},\"application/cea\":{\"source\":\"iana\"},\"application/cea-2018+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cellml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cfw\":{\"source\":\"iana\"},\"application/clr\":{\"source\":\"iana\"},\"application/clue+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/clue_info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cms\":{\"source\":\"iana\"},\"application/cnrp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-group+json\":{\"source\":\"iana\",\"compressible\":true},\"application/coap-payload\":{\"source\":\"iana\"},\"application/commonground\":{\"source\":\"iana\"},\"application/conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cose\":{\"source\":\"iana\"},\"application/cose-key\":{\"source\":\"iana\"},\"application/cose-key-set\":{\"source\":\"iana\"},\"application/cpl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csrattrs\":{\"source\":\"iana\"},\"application/csta+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/cstadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/csvm+json\":{\"source\":\"iana\",\"compressible\":true},\"application/cu-seeme\":{\"source\":\"apache\",\"extensions\":[\"cu\"]},\"application/cwt\":{\"source\":\"iana\"},\"application/cybercash\":{\"source\":\"iana\"},\"application/dart\":{\"compressible\":true},\"application/dash+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpd\"]},\"application/dashdelta\":{\"source\":\"iana\"},\"application/davmount+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"davmount\"]},\"application/dca-rft\":{\"source\":\"iana\"},\"application/dcd\":{\"source\":\"iana\"},\"application/dec-dx\":{\"source\":\"iana\"},\"application/dialog-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom\":{\"source\":\"iana\"},\"application/dicom+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dicom+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dii\":{\"source\":\"iana\"},\"application/dit\":{\"source\":\"iana\"},\"application/dns\":{\"source\":\"iana\"},\"application/dns+json\":{\"source\":\"iana\",\"compressible\":true},\"application/dns-message\":{\"source\":\"iana\"},\"application/docbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dbk\"]},\"application/dots+cbor\":{\"source\":\"iana\"},\"application/dskpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/dssc+der\":{\"source\":\"iana\",\"extensions\":[\"dssc\"]},\"application/dssc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdssc\"]},\"application/dvcs\":{\"source\":\"iana\"},\"application/ecmascript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es\",\"ecma\"]},\"application/edi-consent\":{\"source\":\"iana\"},\"application/edi-x12\":{\"source\":\"iana\",\"compressible\":false},\"application/edifact\":{\"source\":\"iana\",\"compressible\":false},\"application/efi\":{\"source\":\"iana\"},\"application/elm+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/elm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.cap+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/emergencycalldata.comment+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.deviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.ecall.msd\":{\"source\":\"iana\"},\"application/emergencycalldata.providerinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.serviceinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.subscriberinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emergencycalldata.veds+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/emma+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emma\"]},\"application/emotionml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"emotionml\"]},\"application/encaprtp\":{\"source\":\"iana\"},\"application/epp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/epub+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"epub\"]},\"application/eshop\":{\"source\":\"iana\"},\"application/exi\":{\"source\":\"iana\",\"extensions\":[\"exi\"]},\"application/expect-ct-report+json\":{\"source\":\"iana\",\"compressible\":true},\"application/express\":{\"source\":\"iana\",\"extensions\":[\"exp\"]},\"application/fastinfoset\":{\"source\":\"iana\"},\"application/fastsoap\":{\"source\":\"iana\"},\"application/fdt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fdt\"]},\"application/fhir+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fhir+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/fido.trusted-apps+json\":{\"compressible\":true},\"application/fits\":{\"source\":\"iana\"},\"application/flexfec\":{\"source\":\"iana\"},\"application/font-sfnt\":{\"source\":\"iana\"},\"application/font-tdpfr\":{\"source\":\"iana\",\"extensions\":[\"pfr\"]},\"application/font-woff\":{\"source\":\"iana\",\"compressible\":false},\"application/framework-attributes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/geo+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"geojson\"]},\"application/geo+json-seq\":{\"source\":\"iana\"},\"application/geopackage+sqlite3\":{\"source\":\"iana\"},\"application/geoxacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/gltf-buffer\":{\"source\":\"iana\"},\"application/gml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gml\"]},\"application/gpx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"gpx\"]},\"application/gxf\":{\"source\":\"apache\",\"extensions\":[\"gxf\"]},\"application/gzip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gz\"]},\"application/h224\":{\"source\":\"iana\"},\"application/held+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/hjson\":{\"extensions\":[\"hjson\"]},\"application/http\":{\"source\":\"iana\"},\"application/hyperstudio\":{\"source\":\"iana\",\"extensions\":[\"stk\"]},\"application/ibe-key-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pkg-reply+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ibe-pp-data\":{\"source\":\"iana\"},\"application/iges\":{\"source\":\"iana\"},\"application/im-iscomposing+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/index\":{\"source\":\"iana\"},\"application/index.cmd\":{\"source\":\"iana\"},\"application/index.obj\":{\"source\":\"iana\"},\"application/index.response\":{\"source\":\"iana\"},\"application/index.vnd\":{\"source\":\"iana\"},\"application/inkml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ink\",\"inkml\"]},\"application/iotp\":{\"source\":\"iana\"},\"application/ipfix\":{\"source\":\"iana\",\"extensions\":[\"ipfix\"]},\"application/ipp\":{\"source\":\"iana\"},\"application/isup\":{\"source\":\"iana\"},\"application/its+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"its\"]},\"application/java-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jar\",\"war\",\"ear\"]},\"application/java-serialized-object\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"ser\"]},\"application/java-vm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"class\"]},\"application/javascript\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"js\",\"mjs\"]},\"application/jf2feed+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jose\":{\"source\":\"iana\"},\"application/jose+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jrd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jscalendar+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"json\",\"map\"]},\"application/json-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/json-seq\":{\"source\":\"iana\"},\"application/json5\":{\"extensions\":[\"json5\"]},\"application/jsonml+json\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"jsonml\"]},\"application/jwk+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwk-set+json\":{\"source\":\"iana\",\"compressible\":true},\"application/jwt\":{\"source\":\"iana\"},\"application/kpml-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/kpml-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/ld+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"jsonld\"]},\"application/lgr+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lgr\"]},\"application/link-format\":{\"source\":\"iana\"},\"application/load-control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lost+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lostxml\"]},\"application/lostsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/lpf+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/lxf\":{\"source\":\"iana\"},\"application/mac-binhex40\":{\"source\":\"iana\",\"extensions\":[\"hqx\"]},\"application/mac-compactpro\":{\"source\":\"apache\",\"extensions\":[\"cpt\"]},\"application/macwriteii\":{\"source\":\"iana\"},\"application/mads+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mads\"]},\"application/manifest+json\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"webmanifest\"]},\"application/marc\":{\"source\":\"iana\",\"extensions\":[\"mrc\"]},\"application/marcxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mrcx\"]},\"application/mathematica\":{\"source\":\"iana\",\"extensions\":[\"ma\",\"nb\",\"mb\"]},\"application/mathml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mathml\"]},\"application/mathml-content+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mathml-presentation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-associated-procedure-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-deregister+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-envelope+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-msk-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-protection-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-reception-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-register-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-schedule+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbms-user-service-description+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mbox\":{\"source\":\"iana\",\"extensions\":[\"mbox\"]},\"application/media-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/media_control+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mediaservercontrol+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mscml\"]},\"application/merge-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/metalink+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"metalink\"]},\"application/metalink4+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"meta4\"]},\"application/mets+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mets\"]},\"application/mf4\":{\"source\":\"iana\"},\"application/mikey\":{\"source\":\"iana\"},\"application/mipc\":{\"source\":\"iana\"},\"application/missing-blocks+cbor-seq\":{\"source\":\"iana\"},\"application/mmt-aei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"maei\"]},\"application/mmt-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musd\"]},\"application/mods+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mods\"]},\"application/moss-keys\":{\"source\":\"iana\"},\"application/moss-signature\":{\"source\":\"iana\"},\"application/mosskey-data\":{\"source\":\"iana\"},\"application/mosskey-request\":{\"source\":\"iana\"},\"application/mp21\":{\"source\":\"iana\",\"extensions\":[\"m21\",\"mp21\"]},\"application/mp4\":{\"source\":\"iana\",\"extensions\":[\"mp4s\",\"m4p\"]},\"application/mpeg4-generic\":{\"source\":\"iana\"},\"application/mpeg4-iod\":{\"source\":\"iana\"},\"application/mpeg4-iod-xmt\":{\"source\":\"iana\"},\"application/mrb-consumer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/mrb-publish+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/msc-ivr+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msc-mixer+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/msword\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"doc\",\"dot\"]},\"application/mud+json\":{\"source\":\"iana\",\"compressible\":true},\"application/multipart-core\":{\"source\":\"iana\"},\"application/mxf\":{\"source\":\"iana\",\"extensions\":[\"mxf\"]},\"application/n-quads\":{\"source\":\"iana\",\"extensions\":[\"nq\"]},\"application/n-triples\":{\"source\":\"iana\",\"extensions\":[\"nt\"]},\"application/nasdata\":{\"source\":\"iana\"},\"application/news-checkgroups\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-groupinfo\":{\"source\":\"iana\",\"charset\":\"US-ASCII\"},\"application/news-transmission\":{\"source\":\"iana\"},\"application/nlsml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/node\":{\"source\":\"iana\",\"extensions\":[\"cjs\"]},\"application/nss\":{\"source\":\"iana\"},\"application/oauth-authz-req+jwt\":{\"source\":\"iana\"},\"application/ocsp-request\":{\"source\":\"iana\"},\"application/ocsp-response\":{\"source\":\"iana\"},\"application/octet-stream\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]},\"application/oda\":{\"source\":\"iana\",\"extensions\":[\"oda\"]},\"application/odm+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/odx\":{\"source\":\"iana\"},\"application/oebps-package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"opf\"]},\"application/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogx\"]},\"application/omdoc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"omdoc\"]},\"application/onenote\":{\"source\":\"apache\",\"extensions\":[\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]},\"application/opc-nodeset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/oscore\":{\"source\":\"iana\"},\"application/oxps\":{\"source\":\"iana\",\"extensions\":[\"oxps\"]},\"application/p21\":{\"source\":\"iana\"},\"application/p21+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/p2p-overlay+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"relo\"]},\"application/parityfec\":{\"source\":\"iana\"},\"application/passport\":{\"source\":\"iana\"},\"application/patch-ops-error+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xer\"]},\"application/pdf\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pdf\"]},\"application/pdx\":{\"source\":\"iana\"},\"application/pem-certificate-chain\":{\"source\":\"iana\"},\"application/pgp-encrypted\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pgp\"]},\"application/pgp-keys\":{\"source\":\"iana\"},\"application/pgp-signature\":{\"source\":\"iana\",\"extensions\":[\"asc\",\"sig\"]},\"application/pics-rules\":{\"source\":\"apache\",\"extensions\":[\"prf\"]},\"application/pidf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pidf-diff+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/pkcs10\":{\"source\":\"iana\",\"extensions\":[\"p10\"]},\"application/pkcs12\":{\"source\":\"iana\"},\"application/pkcs7-mime\":{\"source\":\"iana\",\"extensions\":[\"p7m\",\"p7c\"]},\"application/pkcs7-signature\":{\"source\":\"iana\",\"extensions\":[\"p7s\"]},\"application/pkcs8\":{\"source\":\"iana\",\"extensions\":[\"p8\"]},\"application/pkcs8-encrypted\":{\"source\":\"iana\"},\"application/pkix-attr-cert\":{\"source\":\"iana\",\"extensions\":[\"ac\"]},\"application/pkix-cert\":{\"source\":\"iana\",\"extensions\":[\"cer\"]},\"application/pkix-crl\":{\"source\":\"iana\",\"extensions\":[\"crl\"]},\"application/pkix-pkipath\":{\"source\":\"iana\",\"extensions\":[\"pkipath\"]},\"application/pkixcmp\":{\"source\":\"iana\",\"extensions\":[\"pki\"]},\"application/pls+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pls\"]},\"application/poc-settings+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/postscript\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ai\",\"eps\",\"ps\"]},\"application/ppsp-tracker+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+json\":{\"source\":\"iana\",\"compressible\":true},\"application/problem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/provenance+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"provx\"]},\"application/prs.alvestrand.titrax-sheet\":{\"source\":\"iana\"},\"application/prs.cww\":{\"source\":\"iana\",\"extensions\":[\"cww\"]},\"application/prs.cyn\":{\"source\":\"iana\",\"charset\":\"7-BIT\"},\"application/prs.hpub+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/prs.nprend\":{\"source\":\"iana\"},\"application/prs.plucker\":{\"source\":\"iana\"},\"application/prs.rdf-xml-crypt\":{\"source\":\"iana\"},\"application/prs.xsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/pskc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"pskcxml\"]},\"application/pvd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/qsig\":{\"source\":\"iana\"},\"application/raml+yaml\":{\"compressible\":true,\"extensions\":[\"raml\"]},\"application/raptorfec\":{\"source\":\"iana\"},\"application/rdap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/rdf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rdf\",\"owl\"]},\"application/reginfo+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rif\"]},\"application/relax-ng-compact-syntax\":{\"source\":\"iana\",\"extensions\":[\"rnc\"]},\"application/remote-printing\":{\"source\":\"iana\"},\"application/reputon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/resource-lists+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rl\"]},\"application/resource-lists-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rld\"]},\"application/rfc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/riscos\":{\"source\":\"iana\"},\"application/rlmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/rls-services+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rs\"]},\"application/route-apd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rapd\"]},\"application/route-s-tsid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sls\"]},\"application/route-usd+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rusd\"]},\"application/rpki-ghostbusters\":{\"source\":\"iana\",\"extensions\":[\"gbr\"]},\"application/rpki-manifest\":{\"source\":\"iana\",\"extensions\":[\"mft\"]},\"application/rpki-publication\":{\"source\":\"iana\"},\"application/rpki-roa\":{\"source\":\"iana\",\"extensions\":[\"roa\"]},\"application/rpki-updown\":{\"source\":\"iana\"},\"application/rsd+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rsd\"]},\"application/rss+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"rss\"]},\"application/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"application/rtploopback\":{\"source\":\"iana\"},\"application/rtx\":{\"source\":\"iana\"},\"application/samlassertion+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/samlmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sarif-external-properties+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sbe\":{\"source\":\"iana\"},\"application/sbml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sbml\"]},\"application/scaip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/scim+json\":{\"source\":\"iana\",\"compressible\":true},\"application/scvp-cv-request\":{\"source\":\"iana\",\"extensions\":[\"scq\"]},\"application/scvp-cv-response\":{\"source\":\"iana\",\"extensions\":[\"scs\"]},\"application/scvp-vp-request\":{\"source\":\"iana\",\"extensions\":[\"spq\"]},\"application/scvp-vp-response\":{\"source\":\"iana\",\"extensions\":[\"spp\"]},\"application/sdp\":{\"source\":\"iana\",\"extensions\":[\"sdp\"]},\"application/secevent+jwt\":{\"source\":\"iana\"},\"application/senml+cbor\":{\"source\":\"iana\"},\"application/senml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"senmlx\"]},\"application/senml-etch+cbor\":{\"source\":\"iana\"},\"application/senml-etch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/senml-exi\":{\"source\":\"iana\"},\"application/sensml+cbor\":{\"source\":\"iana\"},\"application/sensml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/sensml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sensmlx\"]},\"application/sensml-exi\":{\"source\":\"iana\"},\"application/sep+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sep-exi\":{\"source\":\"iana\"},\"application/session-info\":{\"source\":\"iana\"},\"application/set-payment\":{\"source\":\"iana\"},\"application/set-payment-initiation\":{\"source\":\"iana\",\"extensions\":[\"setpay\"]},\"application/set-registration\":{\"source\":\"iana\"},\"application/set-registration-initiation\":{\"source\":\"iana\",\"extensions\":[\"setreg\"]},\"application/sgml\":{\"source\":\"iana\"},\"application/sgml-open-catalog\":{\"source\":\"iana\"},\"application/shf+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"shf\"]},\"application/sieve\":{\"source\":\"iana\",\"extensions\":[\"siv\",\"sieve\"]},\"application/simple-filter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/simple-message-summary\":{\"source\":\"iana\"},\"application/simplesymbolcontainer\":{\"source\":\"iana\"},\"application/sipc\":{\"source\":\"iana\"},\"application/slate\":{\"source\":\"iana\"},\"application/smil\":{\"source\":\"iana\"},\"application/smil+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"smi\",\"smil\"]},\"application/smpte336m\":{\"source\":\"iana\"},\"application/soap+fastinfoset\":{\"source\":\"iana\"},\"application/soap+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sparql-query\":{\"source\":\"iana\",\"extensions\":[\"rq\"]},\"application/sparql-results+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"srx\"]},\"application/spdx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/spirits-event+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/sql\":{\"source\":\"iana\"},\"application/srgs\":{\"source\":\"iana\",\"extensions\":[\"gram\"]},\"application/srgs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"grxml\"]},\"application/sru+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sru\"]},\"application/ssdl+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ssdl\"]},\"application/ssml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ssml\"]},\"application/stix+json\":{\"source\":\"iana\",\"compressible\":true},\"application/swid+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"swidtag\"]},\"application/tamp-apex-update\":{\"source\":\"iana\"},\"application/tamp-apex-update-confirm\":{\"source\":\"iana\"},\"application/tamp-community-update\":{\"source\":\"iana\"},\"application/tamp-community-update-confirm\":{\"source\":\"iana\"},\"application/tamp-error\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust\":{\"source\":\"iana\"},\"application/tamp-sequence-adjust-confirm\":{\"source\":\"iana\"},\"application/tamp-status-query\":{\"source\":\"iana\"},\"application/tamp-status-response\":{\"source\":\"iana\"},\"application/tamp-update\":{\"source\":\"iana\"},\"application/tamp-update-confirm\":{\"source\":\"iana\"},\"application/tar\":{\"compressible\":true},\"application/taxii+json\":{\"source\":\"iana\",\"compressible\":true},\"application/td+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tei+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tei\",\"teicorpus\"]},\"application/tetra_isi\":{\"source\":\"iana\"},\"application/thraud+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tfi\"]},\"application/timestamp-query\":{\"source\":\"iana\"},\"application/timestamp-reply\":{\"source\":\"iana\"},\"application/timestamped-data\":{\"source\":\"iana\",\"extensions\":[\"tsd\"]},\"application/tlsrpt+gzip\":{\"source\":\"iana\"},\"application/tlsrpt+json\":{\"source\":\"iana\",\"compressible\":true},\"application/tnauthlist\":{\"source\":\"iana\"},\"application/token-introspection+jwt\":{\"source\":\"iana\"},\"application/toml\":{\"compressible\":true,\"extensions\":[\"toml\"]},\"application/trickle-ice-sdpfrag\":{\"source\":\"iana\"},\"application/trig\":{\"source\":\"iana\",\"extensions\":[\"trig\"]},\"application/ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttml\"]},\"application/tve-trigger\":{\"source\":\"iana\"},\"application/tzif\":{\"source\":\"iana\"},\"application/tzif-leap\":{\"source\":\"iana\"},\"application/ubjson\":{\"compressible\":false,\"extensions\":[\"ubj\"]},\"application/ulpfec\":{\"source\":\"iana\"},\"application/urc-grpsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/urc-ressheet+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rsheet\"]},\"application/urc-targetdesc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"td\"]},\"application/urc-uisocketdesc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vcard+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vemmi\":{\"source\":\"iana\"},\"application/vividence.scriptfile\":{\"source\":\"apache\"},\"application/vnd.1000minds.decision-model+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"1km\"]},\"application/vnd.3gpp-prose+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-prose-pc3ch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp-v2x-local-service-information\":{\"source\":\"iana\"},\"application/vnd.3gpp.5gnas\":{\"source\":\"iana\"},\"application/vnd.3gpp.access-transfer-events+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.bsf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gmop+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.gtpc\":{\"source\":\"iana\"},\"application/vnd.3gpp.interworking-data\":{\"source\":\"iana\"},\"application/vnd.3gpp.lpp\":{\"source\":\"iana\"},\"application/vnd.3gpp.mc-signalling-ear\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-payload\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-signalling\":{\"source\":\"iana\"},\"application/vnd.3gpp.mcdata-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcdata-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-floor-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-signed+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-ue-init-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcptt-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-command+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-affiliation-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-location-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-service-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-transmission-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-ue-config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mcvideo-user-profile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.mid-call+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ngap\":{\"source\":\"iana\"},\"application/vnd.3gpp.pfcp\":{\"source\":\"iana\"},\"application/vnd.3gpp.pic-bw-large\":{\"source\":\"iana\",\"extensions\":[\"plb\"]},\"application/vnd.3gpp.pic-bw-small\":{\"source\":\"iana\",\"extensions\":[\"psb\"]},\"application/vnd.3gpp.pic-bw-var\":{\"source\":\"iana\",\"extensions\":[\"pvb\"]},\"application/vnd.3gpp.s1ap\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp.sms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-ext+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.srvcc-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.state-and-event-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp.ussd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.bcmcsinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.3gpp2.sms\":{\"source\":\"iana\"},\"application/vnd.3gpp2.tcap\":{\"source\":\"iana\",\"extensions\":[\"tcap\"]},\"application/vnd.3lightssoftware.imagescal\":{\"source\":\"iana\"},\"application/vnd.3m.post-it-notes\":{\"source\":\"iana\",\"extensions\":[\"pwn\"]},\"application/vnd.accpac.simply.aso\":{\"source\":\"iana\",\"extensions\":[\"aso\"]},\"application/vnd.accpac.simply.imp\":{\"source\":\"iana\",\"extensions\":[\"imp\"]},\"application/vnd.acucobol\":{\"source\":\"iana\",\"extensions\":[\"acu\"]},\"application/vnd.acucorp\":{\"source\":\"iana\",\"extensions\":[\"atc\",\"acutc\"]},\"application/vnd.adobe.air-application-installer-package+zip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"air\"]},\"application/vnd.adobe.flash.movie\":{\"source\":\"iana\"},\"application/vnd.adobe.formscentral.fcdt\":{\"source\":\"iana\",\"extensions\":[\"fcdt\"]},\"application/vnd.adobe.fxp\":{\"source\":\"iana\",\"extensions\":[\"fxp\",\"fxpl\"]},\"application/vnd.adobe.partial-upload\":{\"source\":\"iana\"},\"application/vnd.adobe.xdp+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdp\"]},\"application/vnd.adobe.xfdf\":{\"source\":\"iana\",\"extensions\":[\"xfdf\"]},\"application/vnd.aether.imp\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata\":{\"source\":\"iana\"},\"application/vnd.afpc.afplinedata-pagedef\":{\"source\":\"iana\"},\"application/vnd.afpc.cmoca-cmresource\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-charset\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codedfont\":{\"source\":\"iana\"},\"application/vnd.afpc.foca-codepage\":{\"source\":\"iana\"},\"application/vnd.afpc.modca\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-cmtable\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-formdef\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-mediummap\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-objectcontainer\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-overlay\":{\"source\":\"iana\"},\"application/vnd.afpc.modca-pagesegment\":{\"source\":\"iana\"},\"application/vnd.age\":{\"source\":\"iana\",\"extensions\":[\"age\"]},\"application/vnd.ah-barcode\":{\"source\":\"iana\"},\"application/vnd.ahead.space\":{\"source\":\"iana\",\"extensions\":[\"ahead\"]},\"application/vnd.airzip.filesecure.azf\":{\"source\":\"iana\",\"extensions\":[\"azf\"]},\"application/vnd.airzip.filesecure.azs\":{\"source\":\"iana\",\"extensions\":[\"azs\"]},\"application/vnd.amadeus+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.amazon.ebook\":{\"source\":\"apache\",\"extensions\":[\"azw\"]},\"application/vnd.amazon.mobi8-ebook\":{\"source\":\"iana\"},\"application/vnd.americandynamics.acc\":{\"source\":\"iana\",\"extensions\":[\"acc\"]},\"application/vnd.amiga.ami\":{\"source\":\"iana\",\"extensions\":[\"ami\"]},\"application/vnd.amundsen.maze+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.android.ota\":{\"source\":\"iana\"},\"application/vnd.android.package-archive\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"apk\"]},\"application/vnd.anki\":{\"source\":\"iana\"},\"application/vnd.anser-web-certificate-issue-initiation\":{\"source\":\"iana\",\"extensions\":[\"cii\"]},\"application/vnd.anser-web-funds-transfer-initiation\":{\"source\":\"apache\",\"extensions\":[\"fti\"]},\"application/vnd.antix.game-component\":{\"source\":\"iana\",\"extensions\":[\"atx\"]},\"application/vnd.apache.arrow.file\":{\"source\":\"iana\"},\"application/vnd.apache.arrow.stream\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.binary\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.compact\":{\"source\":\"iana\"},\"application/vnd.apache.thrift.json\":{\"source\":\"iana\"},\"application/vnd.api+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.aplextor.warrp+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apothekende.reservation+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.apple.installer+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mpkg\"]},\"application/vnd.apple.keynote\":{\"source\":\"iana\",\"extensions\":[\"key\"]},\"application/vnd.apple.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"m3u8\"]},\"application/vnd.apple.numbers\":{\"source\":\"iana\",\"extensions\":[\"numbers\"]},\"application/vnd.apple.pages\":{\"source\":\"iana\",\"extensions\":[\"pages\"]},\"application/vnd.apple.pkpass\":{\"compressible\":false,\"extensions\":[\"pkpass\"]},\"application/vnd.arastra.swi\":{\"source\":\"iana\"},\"application/vnd.aristanetworks.swi\":{\"source\":\"iana\",\"extensions\":[\"swi\"]},\"application/vnd.artisan+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.artsquare\":{\"source\":\"iana\"},\"application/vnd.astraea-software.iota\":{\"source\":\"iana\",\"extensions\":[\"iota\"]},\"application/vnd.audiograph\":{\"source\":\"iana\",\"extensions\":[\"aep\"]},\"application/vnd.autopackage\":{\"source\":\"iana\"},\"application/vnd.avalon+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.avistar+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.balsamiq.bmml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmml\"]},\"application/vnd.balsamiq.bmpr\":{\"source\":\"iana\"},\"application/vnd.banana-accounting\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.error\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg\":{\"source\":\"iana\"},\"application/vnd.bbf.usp.msg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bekitzur-stech+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.bint.med-content\":{\"source\":\"iana\"},\"application/vnd.biopax.rdf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.blink-idb-value-wrapper\":{\"source\":\"iana\"},\"application/vnd.blueice.multipass\":{\"source\":\"iana\",\"extensions\":[\"mpm\"]},\"application/vnd.bluetooth.ep.oob\":{\"source\":\"iana\"},\"application/vnd.bluetooth.le.oob\":{\"source\":\"iana\"},\"application/vnd.bmi\":{\"source\":\"iana\",\"extensions\":[\"bmi\"]},\"application/vnd.bpf\":{\"source\":\"iana\"},\"application/vnd.bpf3\":{\"source\":\"iana\"},\"application/vnd.businessobjects\":{\"source\":\"iana\",\"extensions\":[\"rep\"]},\"application/vnd.byu.uapi+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cab-jscript\":{\"source\":\"iana\"},\"application/vnd.canon-cpdl\":{\"source\":\"iana\"},\"application/vnd.canon-lips\":{\"source\":\"iana\"},\"application/vnd.capasystems-pg+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cendio.thinlinc.clientconf\":{\"source\":\"iana\"},\"application/vnd.century-systems.tcp_stream\":{\"source\":\"iana\"},\"application/vnd.chemdraw+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"cdxml\"]},\"application/vnd.chess-pgn\":{\"source\":\"iana\"},\"application/vnd.chipnuts.karaoke-mmd\":{\"source\":\"iana\",\"extensions\":[\"mmd\"]},\"application/vnd.ciedi\":{\"source\":\"iana\"},\"application/vnd.cinderella\":{\"source\":\"iana\",\"extensions\":[\"cdy\"]},\"application/vnd.cirpack.isdn-ext\":{\"source\":\"iana\"},\"application/vnd.citationstyles.style+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csl\"]},\"application/vnd.claymore\":{\"source\":\"iana\",\"extensions\":[\"cla\"]},\"application/vnd.cloanto.rp9\":{\"source\":\"iana\",\"extensions\":[\"rp9\"]},\"application/vnd.clonk.c4group\":{\"source\":\"iana\",\"extensions\":[\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]},\"application/vnd.cluetrust.cartomobile-config\":{\"source\":\"iana\",\"extensions\":[\"c11amc\"]},\"application/vnd.cluetrust.cartomobile-config-pkg\":{\"source\":\"iana\",\"extensions\":[\"c11amz\"]},\"application/vnd.coffeescript\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.document-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.presentation-template\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet\":{\"source\":\"iana\"},\"application/vnd.collabio.xodocuments.spreadsheet-template\":{\"source\":\"iana\"},\"application/vnd.collection+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.doc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.collection.next+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.comicbook+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.comicbook-rar\":{\"source\":\"iana\"},\"application/vnd.commerce-battelle\":{\"source\":\"iana\"},\"application/vnd.commonspace\":{\"source\":\"iana\",\"extensions\":[\"csp\"]},\"application/vnd.contact.cmsg\":{\"source\":\"iana\",\"extensions\":[\"cdbcmsg\"]},\"application/vnd.coreos.ignition+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cosmocaller\":{\"source\":\"iana\",\"extensions\":[\"cmc\"]},\"application/vnd.crick.clicker\":{\"source\":\"iana\",\"extensions\":[\"clkx\"]},\"application/vnd.crick.clicker.keyboard\":{\"source\":\"iana\",\"extensions\":[\"clkk\"]},\"application/vnd.crick.clicker.palette\":{\"source\":\"iana\",\"extensions\":[\"clkp\"]},\"application/vnd.crick.clicker.template\":{\"source\":\"iana\",\"extensions\":[\"clkt\"]},\"application/vnd.crick.clicker.wordbank\":{\"source\":\"iana\",\"extensions\":[\"clkw\"]},\"application/vnd.criticaltools.wbs+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wbs\"]},\"application/vnd.cryptii.pipe+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.crypto-shade-file\":{\"source\":\"iana\"},\"application/vnd.cryptomator.encrypted\":{\"source\":\"iana\"},\"application/vnd.cryptomator.vault\":{\"source\":\"iana\"},\"application/vnd.ctc-posml\":{\"source\":\"iana\",\"extensions\":[\"pml\"]},\"application/vnd.ctct.ws+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cups-pdf\":{\"source\":\"iana\"},\"application/vnd.cups-postscript\":{\"source\":\"iana\"},\"application/vnd.cups-ppd\":{\"source\":\"iana\",\"extensions\":[\"ppd\"]},\"application/vnd.cups-raster\":{\"source\":\"iana\"},\"application/vnd.cups-raw\":{\"source\":\"iana\"},\"application/vnd.curl\":{\"source\":\"iana\"},\"application/vnd.curl.car\":{\"source\":\"apache\",\"extensions\":[\"car\"]},\"application/vnd.curl.pcurl\":{\"source\":\"apache\",\"extensions\":[\"pcurl\"]},\"application/vnd.cyan.dean.root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cybank\":{\"source\":\"iana\"},\"application/vnd.cyclonedx+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.cyclonedx+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.d2l.coursepackage1p0+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.d3m-dataset\":{\"source\":\"iana\"},\"application/vnd.d3m-problem\":{\"source\":\"iana\"},\"application/vnd.dart\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dart\"]},\"application/vnd.data-vision.rdz\":{\"source\":\"iana\",\"extensions\":[\"rdz\"]},\"application/vnd.datapackage+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dataresource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dbf\":{\"source\":\"iana\",\"extensions\":[\"dbf\"]},\"application/vnd.debian.binary-package\":{\"source\":\"iana\"},\"application/vnd.dece.data\":{\"source\":\"iana\",\"extensions\":[\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]},\"application/vnd.dece.ttml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uvt\",\"uvvt\"]},\"application/vnd.dece.unspecified\":{\"source\":\"iana\",\"extensions\":[\"uvx\",\"uvvx\"]},\"application/vnd.dece.zip\":{\"source\":\"iana\",\"extensions\":[\"uvz\",\"uvvz\"]},\"application/vnd.denovo.fcselayout-link\":{\"source\":\"iana\",\"extensions\":[\"fe_launch\"]},\"application/vnd.desmume.movie\":{\"source\":\"iana\"},\"application/vnd.dir-bi.plate-dl-nosuffix\":{\"source\":\"iana\"},\"application/vnd.dm.delegation+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dna\":{\"source\":\"iana\",\"extensions\":[\"dna\"]},\"application/vnd.document+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dolby.mlp\":{\"source\":\"apache\",\"extensions\":[\"mlp\"]},\"application/vnd.dolby.mobile.1\":{\"source\":\"iana\"},\"application/vnd.dolby.mobile.2\":{\"source\":\"iana\"},\"application/vnd.doremir.scorecloud-binary-document\":{\"source\":\"iana\"},\"application/vnd.dpgraph\":{\"source\":\"iana\",\"extensions\":[\"dpg\"]},\"application/vnd.dreamfactory\":{\"source\":\"iana\",\"extensions\":[\"dfac\"]},\"application/vnd.drive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ds-keypoint\":{\"source\":\"apache\",\"extensions\":[\"kpxx\"]},\"application/vnd.dtg.local\":{\"source\":\"iana\"},\"application/vnd.dtg.local.flash\":{\"source\":\"iana\"},\"application/vnd.dtg.local.html\":{\"source\":\"iana\"},\"application/vnd.dvb.ait\":{\"source\":\"iana\",\"extensions\":[\"ait\"]},\"application/vnd.dvb.dvbisl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.dvbj\":{\"source\":\"iana\"},\"application/vnd.dvb.esgcontainer\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcdftnotifaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgaccess2\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcesgpdd\":{\"source\":\"iana\"},\"application/vnd.dvb.ipdcroaming\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-base\":{\"source\":\"iana\"},\"application/vnd.dvb.iptv.alfec-enhancement\":{\"source\":\"iana\"},\"application/vnd.dvb.notif-aggregate-root+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-container+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-generic+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-msglist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-ia-registration-response+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.notif-init+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.dvb.pfr\":{\"source\":\"iana\"},\"application/vnd.dvb.service\":{\"source\":\"iana\",\"extensions\":[\"svc\"]},\"application/vnd.dxr\":{\"source\":\"iana\"},\"application/vnd.dynageo\":{\"source\":\"iana\",\"extensions\":[\"geo\"]},\"application/vnd.dzr\":{\"source\":\"iana\"},\"application/vnd.easykaraoke.cdgdownload\":{\"source\":\"iana\"},\"application/vnd.ecdis-update\":{\"source\":\"iana\"},\"application/vnd.ecip.rlp\":{\"source\":\"iana\"},\"application/vnd.ecowin.chart\":{\"source\":\"iana\",\"extensions\":[\"mag\"]},\"application/vnd.ecowin.filerequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.fileupdate\":{\"source\":\"iana\"},\"application/vnd.ecowin.series\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesrequest\":{\"source\":\"iana\"},\"application/vnd.ecowin.seriesupdate\":{\"source\":\"iana\"},\"application/vnd.efi.img\":{\"source\":\"iana\"},\"application/vnd.efi.iso\":{\"source\":\"iana\"},\"application/vnd.emclient.accessrequest+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.enliven\":{\"source\":\"iana\",\"extensions\":[\"nml\"]},\"application/vnd.enphase.envoy\":{\"source\":\"iana\"},\"application/vnd.eprints.data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.epson.esf\":{\"source\":\"iana\",\"extensions\":[\"esf\"]},\"application/vnd.epson.msf\":{\"source\":\"iana\",\"extensions\":[\"msf\"]},\"application/vnd.epson.quickanime\":{\"source\":\"iana\",\"extensions\":[\"qam\"]},\"application/vnd.epson.salt\":{\"source\":\"iana\",\"extensions\":[\"slt\"]},\"application/vnd.epson.ssf\":{\"source\":\"iana\",\"extensions\":[\"ssf\"]},\"application/vnd.ericsson.quickcall\":{\"source\":\"iana\"},\"application/vnd.espass-espass+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.eszigno3+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"es3\",\"et3\"]},\"application/vnd.etsi.aoc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.asic-e+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.asic-s+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.etsi.cug+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvcommand+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-bc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-cod+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsad-npvr+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvservice+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvsync+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.iptvueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mcid+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.mheg5\":{\"source\":\"iana\"},\"application/vnd.etsi.overload-control-policy-dataset+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.pstn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.sci+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.simservs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.timestamp-token\":{\"source\":\"iana\"},\"application/vnd.etsi.tsl+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.etsi.tsl.der\":{\"source\":\"iana\"},\"application/vnd.eudora.data\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.profile\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.settings\":{\"source\":\"iana\"},\"application/vnd.evolv.ecig.theme\":{\"source\":\"iana\"},\"application/vnd.exstream-empower+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.exstream-package\":{\"source\":\"iana\"},\"application/vnd.ezpix-album\":{\"source\":\"iana\",\"extensions\":[\"ez2\"]},\"application/vnd.ezpix-package\":{\"source\":\"iana\",\"extensions\":[\"ez3\"]},\"application/vnd.f-secure.mobile\":{\"source\":\"iana\"},\"application/vnd.fastcopy-disk-image\":{\"source\":\"iana\"},\"application/vnd.fdf\":{\"source\":\"iana\",\"extensions\":[\"fdf\"]},\"application/vnd.fdsn.mseed\":{\"source\":\"iana\",\"extensions\":[\"mseed\"]},\"application/vnd.fdsn.seed\":{\"source\":\"iana\",\"extensions\":[\"seed\",\"dataless\"]},\"application/vnd.ffsns\":{\"source\":\"iana\"},\"application/vnd.ficlab.flb+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.filmit.zfc\":{\"source\":\"iana\"},\"application/vnd.fints\":{\"source\":\"iana\"},\"application/vnd.firemonkeys.cloudcell\":{\"source\":\"iana\"},\"application/vnd.flographit\":{\"source\":\"iana\",\"extensions\":[\"gph\"]},\"application/vnd.fluxtime.clip\":{\"source\":\"iana\",\"extensions\":[\"ftc\"]},\"application/vnd.font-fontforge-sfd\":{\"source\":\"iana\"},\"application/vnd.framemaker\":{\"source\":\"iana\",\"extensions\":[\"fm\",\"frame\",\"maker\",\"book\"]},\"application/vnd.frogans.fnc\":{\"source\":\"iana\",\"extensions\":[\"fnc\"]},\"application/vnd.frogans.ltf\":{\"source\":\"iana\",\"extensions\":[\"ltf\"]},\"application/vnd.fsc.weblaunch\":{\"source\":\"iana\",\"extensions\":[\"fsc\"]},\"application/vnd.fujifilm.fb.docuworks\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.binder\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujifilm.fb.jfi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fujitsu.oasys\":{\"source\":\"iana\",\"extensions\":[\"oas\"]},\"application/vnd.fujitsu.oasys2\":{\"source\":\"iana\",\"extensions\":[\"oa2\"]},\"application/vnd.fujitsu.oasys3\":{\"source\":\"iana\",\"extensions\":[\"oa3\"]},\"application/vnd.fujitsu.oasysgp\":{\"source\":\"iana\",\"extensions\":[\"fg5\"]},\"application/vnd.fujitsu.oasysprs\":{\"source\":\"iana\",\"extensions\":[\"bh2\"]},\"application/vnd.fujixerox.art-ex\":{\"source\":\"iana\"},\"application/vnd.fujixerox.art4\":{\"source\":\"iana\"},\"application/vnd.fujixerox.ddd\":{\"source\":\"iana\",\"extensions\":[\"ddd\"]},\"application/vnd.fujixerox.docuworks\":{\"source\":\"iana\",\"extensions\":[\"xdw\"]},\"application/vnd.fujixerox.docuworks.binder\":{\"source\":\"iana\",\"extensions\":[\"xbd\"]},\"application/vnd.fujixerox.docuworks.container\":{\"source\":\"iana\"},\"application/vnd.fujixerox.hbpl\":{\"source\":\"iana\"},\"application/vnd.fut-misnet\":{\"source\":\"iana\"},\"application/vnd.futoin+cbor\":{\"source\":\"iana\"},\"application/vnd.futoin+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.fuzzysheet\":{\"source\":\"iana\",\"extensions\":[\"fzs\"]},\"application/vnd.genomatix.tuxedo\":{\"source\":\"iana\",\"extensions\":[\"txd\"]},\"application/vnd.gentics.grd+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geo+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geocube+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.geogebra.file\":{\"source\":\"iana\",\"extensions\":[\"ggb\"]},\"application/vnd.geogebra.slides\":{\"source\":\"iana\"},\"application/vnd.geogebra.tool\":{\"source\":\"iana\",\"extensions\":[\"ggt\"]},\"application/vnd.geometry-explorer\":{\"source\":\"iana\",\"extensions\":[\"gex\",\"gre\"]},\"application/vnd.geonext\":{\"source\":\"iana\",\"extensions\":[\"gxt\"]},\"application/vnd.geoplan\":{\"source\":\"iana\",\"extensions\":[\"g2w\"]},\"application/vnd.geospace\":{\"source\":\"iana\",\"extensions\":[\"g3w\"]},\"application/vnd.gerber\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt\":{\"source\":\"iana\"},\"application/vnd.globalplatform.card-content-mgt-response\":{\"source\":\"iana\"},\"application/vnd.gmx\":{\"source\":\"iana\",\"extensions\":[\"gmx\"]},\"application/vnd.google-apps.document\":{\"compressible\":false,\"extensions\":[\"gdoc\"]},\"application/vnd.google-apps.presentation\":{\"compressible\":false,\"extensions\":[\"gslides\"]},\"application/vnd.google-apps.spreadsheet\":{\"compressible\":false,\"extensions\":[\"gsheet\"]},\"application/vnd.google-earth.kml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"kml\"]},\"application/vnd.google-earth.kmz\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"kmz\"]},\"application/vnd.gov.sk.e-form+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.gov.sk.e-form+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.gov.sk.xmldatacontainer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.grafeq\":{\"source\":\"iana\",\"extensions\":[\"gqf\",\"gqs\"]},\"application/vnd.gridmp\":{\"source\":\"iana\"},\"application/vnd.groove-account\":{\"source\":\"iana\",\"extensions\":[\"gac\"]},\"application/vnd.groove-help\":{\"source\":\"iana\",\"extensions\":[\"ghf\"]},\"application/vnd.groove-identity-message\":{\"source\":\"iana\",\"extensions\":[\"gim\"]},\"application/vnd.groove-injector\":{\"source\":\"iana\",\"extensions\":[\"grv\"]},\"application/vnd.groove-tool-message\":{\"source\":\"iana\",\"extensions\":[\"gtm\"]},\"application/vnd.groove-tool-template\":{\"source\":\"iana\",\"extensions\":[\"tpl\"]},\"application/vnd.groove-vcard\":{\"source\":\"iana\",\"extensions\":[\"vcg\"]},\"application/vnd.hal+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hal+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"hal\"]},\"application/vnd.handheld-entertainment+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zmm\"]},\"application/vnd.hbci\":{\"source\":\"iana\",\"extensions\":[\"hbci\"]},\"application/vnd.hc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hcl-bireports\":{\"source\":\"iana\"},\"application/vnd.hdt\":{\"source\":\"iana\"},\"application/vnd.heroku+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hhe.lesson-player\":{\"source\":\"iana\",\"extensions\":[\"les\"]},\"application/vnd.hp-hpgl\":{\"source\":\"iana\",\"extensions\":[\"hpgl\"]},\"application/vnd.hp-hpid\":{\"source\":\"iana\",\"extensions\":[\"hpid\"]},\"application/vnd.hp-hps\":{\"source\":\"iana\",\"extensions\":[\"hps\"]},\"application/vnd.hp-jlyt\":{\"source\":\"iana\",\"extensions\":[\"jlt\"]},\"application/vnd.hp-pcl\":{\"source\":\"iana\",\"extensions\":[\"pcl\"]},\"application/vnd.hp-pclxl\":{\"source\":\"iana\",\"extensions\":[\"pclxl\"]},\"application/vnd.httphone\":{\"source\":\"iana\"},\"application/vnd.hydrostatix.sof-data\":{\"source\":\"iana\",\"extensions\":[\"sfd-hdstx\"]},\"application/vnd.hyper+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyper-item+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hyperdrive+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.hzn-3d-crossword\":{\"source\":\"iana\"},\"application/vnd.ibm.afplinedata\":{\"source\":\"iana\"},\"application/vnd.ibm.electronic-media\":{\"source\":\"iana\"},\"application/vnd.ibm.minipay\":{\"source\":\"iana\",\"extensions\":[\"mpy\"]},\"application/vnd.ibm.modcap\":{\"source\":\"iana\",\"extensions\":[\"afp\",\"listafp\",\"list3820\"]},\"application/vnd.ibm.rights-management\":{\"source\":\"iana\",\"extensions\":[\"irm\"]},\"application/vnd.ibm.secure-container\":{\"source\":\"iana\",\"extensions\":[\"sc\"]},\"application/vnd.iccprofile\":{\"source\":\"iana\",\"extensions\":[\"icc\",\"icm\"]},\"application/vnd.ieee.1905\":{\"source\":\"iana\"},\"application/vnd.igloader\":{\"source\":\"iana\",\"extensions\":[\"igl\"]},\"application/vnd.imagemeter.folder+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.imagemeter.image+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.immervision-ivp\":{\"source\":\"iana\",\"extensions\":[\"ivp\"]},\"application/vnd.immervision-ivu\":{\"source\":\"iana\",\"extensions\":[\"ivu\"]},\"application/vnd.ims.imsccv1p1\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p2\":{\"source\":\"iana\"},\"application/vnd.ims.imsccv1p3\":{\"source\":\"iana\"},\"application/vnd.ims.lis.v2.result+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolconsumerprofile+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolproxy.id+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ims.lti.v2.toolsettings.simple+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informedcontrol.rms+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.informix-visionary\":{\"source\":\"iana\"},\"application/vnd.infotech.project\":{\"source\":\"iana\"},\"application/vnd.infotech.project+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.innopath.wamp.notification\":{\"source\":\"iana\"},\"application/vnd.insors.igm\":{\"source\":\"iana\",\"extensions\":[\"igm\"]},\"application/vnd.intercon.formnet\":{\"source\":\"iana\",\"extensions\":[\"xpw\",\"xpx\"]},\"application/vnd.intergeo\":{\"source\":\"iana\",\"extensions\":[\"i2g\"]},\"application/vnd.intertrust.digibox\":{\"source\":\"iana\"},\"application/vnd.intertrust.nncp\":{\"source\":\"iana\"},\"application/vnd.intu.qbo\":{\"source\":\"iana\",\"extensions\":[\"qbo\"]},\"application/vnd.intu.qfx\":{\"source\":\"iana\",\"extensions\":[\"qfx\"]},\"application/vnd.iptc.g2.catalogitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.conceptitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.knowledgeitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.newsmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.packageitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.iptc.g2.planningitem+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ipunplugged.rcprofile\":{\"source\":\"iana\",\"extensions\":[\"rcprofile\"]},\"application/vnd.irepository.package+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"irp\"]},\"application/vnd.is-xpr\":{\"source\":\"iana\",\"extensions\":[\"xpr\"]},\"application/vnd.isac.fcs\":{\"source\":\"iana\",\"extensions\":[\"fcs\"]},\"application/vnd.iso11783-10+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.jam\":{\"source\":\"iana\",\"extensions\":[\"jam\"]},\"application/vnd.japannet-directory-service\":{\"source\":\"iana\"},\"application/vnd.japannet-jpnstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-payment-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-registration\":{\"source\":\"iana\"},\"application/vnd.japannet-registration-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-setstore-wakeup\":{\"source\":\"iana\"},\"application/vnd.japannet-verification\":{\"source\":\"iana\"},\"application/vnd.japannet-verification-wakeup\":{\"source\":\"iana\"},\"application/vnd.jcp.javame.midlet-rms\":{\"source\":\"iana\",\"extensions\":[\"rms\"]},\"application/vnd.jisp\":{\"source\":\"iana\",\"extensions\":[\"jisp\"]},\"application/vnd.joost.joda-archive\":{\"source\":\"iana\",\"extensions\":[\"joda\"]},\"application/vnd.jsk.isdn-ngn\":{\"source\":\"iana\"},\"application/vnd.kahootz\":{\"source\":\"iana\",\"extensions\":[\"ktz\",\"ktr\"]},\"application/vnd.kde.karbon\":{\"source\":\"iana\",\"extensions\":[\"karbon\"]},\"application/vnd.kde.kchart\":{\"source\":\"iana\",\"extensions\":[\"chrt\"]},\"application/vnd.kde.kformula\":{\"source\":\"iana\",\"extensions\":[\"kfo\"]},\"application/vnd.kde.kivio\":{\"source\":\"iana\",\"extensions\":[\"flw\"]},\"application/vnd.kde.kontour\":{\"source\":\"iana\",\"extensions\":[\"kon\"]},\"application/vnd.kde.kpresenter\":{\"source\":\"iana\",\"extensions\":[\"kpr\",\"kpt\"]},\"application/vnd.kde.kspread\":{\"source\":\"iana\",\"extensions\":[\"ksp\"]},\"application/vnd.kde.kword\":{\"source\":\"iana\",\"extensions\":[\"kwd\",\"kwt\"]},\"application/vnd.kenameaapp\":{\"source\":\"iana\",\"extensions\":[\"htke\"]},\"application/vnd.kidspiration\":{\"source\":\"iana\",\"extensions\":[\"kia\"]},\"application/vnd.kinar\":{\"source\":\"iana\",\"extensions\":[\"kne\",\"knp\"]},\"application/vnd.koan\":{\"source\":\"iana\",\"extensions\":[\"skp\",\"skd\",\"skt\",\"skm\"]},\"application/vnd.kodak-descriptor\":{\"source\":\"iana\",\"extensions\":[\"sse\"]},\"application/vnd.las\":{\"source\":\"iana\"},\"application/vnd.las.las+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.las.las+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lasxml\"]},\"application/vnd.laszip\":{\"source\":\"iana\"},\"application/vnd.leap+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.liberty-request+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.llamagraphics.life-balance.desktop\":{\"source\":\"iana\",\"extensions\":[\"lbd\"]},\"application/vnd.llamagraphics.life-balance.exchange+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"lbe\"]},\"application/vnd.logipipe.circuit+zip\":{\"source\":\"iana\",\"compressible\":false},\"application/vnd.loom\":{\"source\":\"iana\"},\"application/vnd.lotus-1-2-3\":{\"source\":\"iana\",\"extensions\":[\"123\"]},\"application/vnd.lotus-approach\":{\"source\":\"iana\",\"extensions\":[\"apr\"]},\"application/vnd.lotus-freelance\":{\"source\":\"iana\",\"extensions\":[\"pre\"]},\"application/vnd.lotus-notes\":{\"source\":\"iana\",\"extensions\":[\"nsf\"]},\"application/vnd.lotus-organizer\":{\"source\":\"iana\",\"extensions\":[\"org\"]},\"application/vnd.lotus-screencam\":{\"source\":\"iana\",\"extensions\":[\"scm\"]},\"application/vnd.lotus-wordpro\":{\"source\":\"iana\",\"extensions\":[\"lwp\"]},\"application/vnd.macports.portpkg\":{\"source\":\"iana\",\"extensions\":[\"portpkg\"]},\"application/vnd.mapbox-vector-tile\":{\"source\":\"iana\",\"extensions\":[\"mvt\"]},\"application/vnd.marlin.drm.actiontoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.conftoken+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.license+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.marlin.drm.mdcf\":{\"source\":\"iana\"},\"application/vnd.mason+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.maxmind.maxmind-db\":{\"source\":\"iana\"},\"application/vnd.mcd\":{\"source\":\"iana\",\"extensions\":[\"mcd\"]},\"application/vnd.medcalcdata\":{\"source\":\"iana\",\"extensions\":[\"mc1\"]},\"application/vnd.mediastation.cdkey\":{\"source\":\"iana\",\"extensions\":[\"cdkey\"]},\"application/vnd.meridian-slingshot\":{\"source\":\"iana\"},\"application/vnd.mfer\":{\"source\":\"iana\",\"extensions\":[\"mwf\"]},\"application/vnd.mfmp\":{\"source\":\"iana\",\"extensions\":[\"mfm\"]},\"application/vnd.micro+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.micrografx.flo\":{\"source\":\"iana\",\"extensions\":[\"flo\"]},\"application/vnd.micrografx.igx\":{\"source\":\"iana\",\"extensions\":[\"igx\"]},\"application/vnd.microsoft.portable-executable\":{\"source\":\"iana\"},\"application/vnd.microsoft.windows.thumbnail-cache\":{\"source\":\"iana\"},\"application/vnd.miele+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.mif\":{\"source\":\"iana\",\"extensions\":[\"mif\"]},\"application/vnd.minisoft-hp3000-save\":{\"source\":\"iana\"},\"application/vnd.mitsubishi.misty-guard.trustweb\":{\"source\":\"iana\"},\"application/vnd.mobius.daf\":{\"source\":\"iana\",\"extensions\":[\"daf\"]},\"application/vnd.mobius.dis\":{\"source\":\"iana\",\"extensions\":[\"dis\"]},\"application/vnd.mobius.mbk\":{\"source\":\"iana\",\"extensions\":[\"mbk\"]},\"application/vnd.mobius.mqy\":{\"source\":\"iana\",\"extensions\":[\"mqy\"]},\"application/vnd.mobius.msl\":{\"source\":\"iana\",\"extensions\":[\"msl\"]},\"application/vnd.mobius.plc\":{\"source\":\"iana\",\"extensions\":[\"plc\"]},\"application/vnd.mobius.txf\":{\"source\":\"iana\",\"extensions\":[\"txf\"]},\"application/vnd.mophun.application\":{\"source\":\"iana\",\"extensions\":[\"mpn\"]},\"application/vnd.mophun.certificate\":{\"source\":\"iana\",\"extensions\":[\"mpc\"]},\"application/vnd.motorola.flexsuite\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.adsi\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.fis\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.gotap\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.kmr\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.ttc\":{\"source\":\"iana\"},\"application/vnd.motorola.flexsuite.wem\":{\"source\":\"iana\"},\"application/vnd.motorola.iprm\":{\"source\":\"iana\"},\"application/vnd.mozilla.xul+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xul\"]},\"application/vnd.ms-3mfdocument\":{\"source\":\"iana\"},\"application/vnd.ms-artgalry\":{\"source\":\"iana\",\"extensions\":[\"cil\"]},\"application/vnd.ms-asf\":{\"source\":\"iana\"},\"application/vnd.ms-cab-compressed\":{\"source\":\"iana\",\"extensions\":[\"cab\"]},\"application/vnd.ms-color.iccprofile\":{\"source\":\"apache\"},\"application/vnd.ms-excel\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]},\"application/vnd.ms-excel.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlam\"]},\"application/vnd.ms-excel.sheet.binary.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsb\"]},\"application/vnd.ms-excel.sheet.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xlsm\"]},\"application/vnd.ms-excel.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"xltm\"]},\"application/vnd.ms-fontobject\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eot\"]},\"application/vnd.ms-htmlhelp\":{\"source\":\"iana\",\"extensions\":[\"chm\"]},\"application/vnd.ms-ims\":{\"source\":\"iana\",\"extensions\":[\"ims\"]},\"application/vnd.ms-lrm\":{\"source\":\"iana\",\"extensions\":[\"lrm\"]},\"application/vnd.ms-office.activex+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-officetheme\":{\"source\":\"iana\",\"extensions\":[\"thmx\"]},\"application/vnd.ms-opentype\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-outlook\":{\"compressible\":false,\"extensions\":[\"msg\"]},\"application/vnd.ms-package.obfuscated-opentype\":{\"source\":\"apache\"},\"application/vnd.ms-pki.seccat\":{\"source\":\"apache\",\"extensions\":[\"cat\"]},\"application/vnd.ms-pki.stl\":{\"source\":\"apache\",\"extensions\":[\"stl\"]},\"application/vnd.ms-playready.initiator+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-powerpoint\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ppt\",\"pps\",\"pot\"]},\"application/vnd.ms-powerpoint.addin.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppam\"]},\"application/vnd.ms-powerpoint.presentation.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"pptm\"]},\"application/vnd.ms-powerpoint.slide.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"sldm\"]},\"application/vnd.ms-powerpoint.slideshow.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"ppsm\"]},\"application/vnd.ms-powerpoint.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"potm\"]},\"application/vnd.ms-printdevicecapabilities+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-printing.printticket+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/vnd.ms-printschematicket+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ms-project\":{\"source\":\"iana\",\"extensions\":[\"mpp\",\"mpt\"]},\"application/vnd.ms-tnef\":{\"source\":\"iana\"},\"application/vnd.ms-windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.nwprinting.oob\":{\"source\":\"iana\"},\"application/vnd.ms-windows.printerpairing\":{\"source\":\"iana\"},\"application/vnd.ms-windows.wsd.oob\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.lic-resp\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-chlg-req\":{\"source\":\"iana\"},\"application/vnd.ms-wmdrm.meter-resp\":{\"source\":\"iana\"},\"application/vnd.ms-word.document.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"docm\"]},\"application/vnd.ms-word.template.macroenabled.12\":{\"source\":\"iana\",\"extensions\":[\"dotm\"]},\"application/vnd.ms-works\":{\"source\":\"iana\",\"extensions\":[\"wps\",\"wks\",\"wcm\",\"wdb\"]},\"application/vnd.ms-wpl\":{\"source\":\"iana\",\"extensions\":[\"wpl\"]},\"application/vnd.ms-xpsdocument\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xps\"]},\"application/vnd.msa-disk-image\":{\"source\":\"iana\"},\"application/vnd.mseq\":{\"source\":\"iana\",\"extensions\":[\"mseq\"]},\"application/vnd.msign\":{\"source\":\"iana\"},\"application/vnd.multiad.creator\":{\"source\":\"iana\"},\"application/vnd.multiad.creator.cif\":{\"source\":\"iana\"},\"application/vnd.music-niff\":{\"source\":\"iana\"},\"application/vnd.musician\":{\"source\":\"iana\",\"extensions\":[\"mus\"]},\"application/vnd.muvee.style\":{\"source\":\"iana\",\"extensions\":[\"msty\"]},\"application/vnd.mynfc\":{\"source\":\"iana\",\"extensions\":[\"taglet\"]},\"application/vnd.nacamar.ybrid+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.ncd.control\":{\"source\":\"iana\"},\"application/vnd.ncd.reference\":{\"source\":\"iana\"},\"application/vnd.nearst.inv+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nebumind.line\":{\"source\":\"iana\"},\"application/vnd.nervana\":{\"source\":\"iana\"},\"application/vnd.netfpx\":{\"source\":\"iana\"},\"application/vnd.neurolanguage.nlu\":{\"source\":\"iana\",\"extensions\":[\"nlu\"]},\"application/vnd.nimn\":{\"source\":\"iana\"},\"application/vnd.nintendo.nitro.rom\":{\"source\":\"iana\"},\"application/vnd.nintendo.snes.rom\":{\"source\":\"iana\"},\"application/vnd.nitf\":{\"source\":\"iana\",\"extensions\":[\"ntf\",\"nitf\"]},\"application/vnd.noblenet-directory\":{\"source\":\"iana\",\"extensions\":[\"nnd\"]},\"application/vnd.noblenet-sealer\":{\"source\":\"iana\",\"extensions\":[\"nns\"]},\"application/vnd.noblenet-web\":{\"source\":\"iana\",\"extensions\":[\"nnw\"]},\"application/vnd.nokia.catalogs\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.conml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.iptv.config+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.isds-radio-presets\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.landmark+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.landmarkcollection+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.n-gage.ac+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ac\"]},\"application/vnd.nokia.n-gage.data\":{\"source\":\"iana\",\"extensions\":[\"ngdat\"]},\"application/vnd.nokia.n-gage.symbian.install\":{\"source\":\"iana\",\"extensions\":[\"n-gage\"]},\"application/vnd.nokia.ncd\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+wbxml\":{\"source\":\"iana\"},\"application/vnd.nokia.pcd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.nokia.radio-preset\":{\"source\":\"iana\",\"extensions\":[\"rpst\"]},\"application/vnd.nokia.radio-presets\":{\"source\":\"iana\",\"extensions\":[\"rpss\"]},\"application/vnd.novadigm.edm\":{\"source\":\"iana\",\"extensions\":[\"edm\"]},\"application/vnd.novadigm.edx\":{\"source\":\"iana\",\"extensions\":[\"edx\"]},\"application/vnd.novadigm.ext\":{\"source\":\"iana\",\"extensions\":[\"ext\"]},\"application/vnd.ntt-local.content-share\":{\"source\":\"iana\"},\"application/vnd.ntt-local.file-transfer\":{\"source\":\"iana\"},\"application/vnd.ntt-local.ogw_remote-access\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_remote\":{\"source\":\"iana\"},\"application/vnd.ntt-local.sip-ta_tcp_stream\":{\"source\":\"iana\"},\"application/vnd.oasis.opendocument.chart\":{\"source\":\"iana\",\"extensions\":[\"odc\"]},\"application/vnd.oasis.opendocument.chart-template\":{\"source\":\"iana\",\"extensions\":[\"otc\"]},\"application/vnd.oasis.opendocument.database\":{\"source\":\"iana\",\"extensions\":[\"odb\"]},\"application/vnd.oasis.opendocument.formula\":{\"source\":\"iana\",\"extensions\":[\"odf\"]},\"application/vnd.oasis.opendocument.formula-template\":{\"source\":\"iana\",\"extensions\":[\"odft\"]},\"application/vnd.oasis.opendocument.graphics\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odg\"]},\"application/vnd.oasis.opendocument.graphics-template\":{\"source\":\"iana\",\"extensions\":[\"otg\"]},\"application/vnd.oasis.opendocument.image\":{\"source\":\"iana\",\"extensions\":[\"odi\"]},\"application/vnd.oasis.opendocument.image-template\":{\"source\":\"iana\",\"extensions\":[\"oti\"]},\"application/vnd.oasis.opendocument.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odp\"]},\"application/vnd.oasis.opendocument.presentation-template\":{\"source\":\"iana\",\"extensions\":[\"otp\"]},\"application/vnd.oasis.opendocument.spreadsheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ods\"]},\"application/vnd.oasis.opendocument.spreadsheet-template\":{\"source\":\"iana\",\"extensions\":[\"ots\"]},\"application/vnd.oasis.opendocument.text\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"odt\"]},\"application/vnd.oasis.opendocument.text-master\":{\"source\":\"iana\",\"extensions\":[\"odm\"]},\"application/vnd.oasis.opendocument.text-template\":{\"source\":\"iana\",\"extensions\":[\"ott\"]},\"application/vnd.oasis.opendocument.text-web\":{\"source\":\"iana\",\"extensions\":[\"oth\"]},\"application/vnd.obn\":{\"source\":\"iana\"},\"application/vnd.ocf+cbor\":{\"source\":\"iana\"},\"application/vnd.oci.image.manifest.v1+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oftn.l10n+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessdownload+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.contentaccessstreaming+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.cspg-hexbinary\":{\"source\":\"iana\"},\"application/vnd.oipf.dae.svg+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.dae.xhtml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.mippvcontrolmessage+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.pae.gem\":{\"source\":\"iana\"},\"application/vnd.oipf.spdiscovery+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.spdlist+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.ueprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oipf.userprofile+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.olpc-sugar\":{\"source\":\"iana\",\"extensions\":[\"xo\"]},\"application/vnd.oma-scws-config\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-request\":{\"source\":\"iana\"},\"application/vnd.oma-scws-http-response\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.associated-procedure-parameter+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.drm-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.imd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.ltkm\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.notification+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.provisioningtrigger\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgboot\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.sgdd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sgdu\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.simple-symbol-container\":{\"source\":\"iana\"},\"application/vnd.oma.bcast.smartcard-trigger+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.sprov+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.bcast.stkm\":{\"source\":\"iana\"},\"application/vnd.oma.cab-address-book+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-feature-handler+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-pcc+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-subs-invite+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.cab-user-prefs+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.dcd\":{\"source\":\"iana\"},\"application/vnd.oma.dcdc\":{\"source\":\"iana\"},\"application/vnd.oma.dd2+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dd2\"]},\"application/vnd.oma.drm.risd+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.group-usage-list+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+cbor\":{\"source\":\"iana\"},\"application/vnd.oma.lwm2m+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.lwm2m+tlv\":{\"source\":\"iana\"},\"application/vnd.oma.pal+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.detailed-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.final-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.groups+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.invocation-descriptor+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.poc.optimized-progress-report+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.push\":{\"source\":\"iana\"},\"application/vnd.oma.scidm.messages+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oma.xcap-directory+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.omads-email+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-file+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omads-folder+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.omaloc-supl-init\":{\"source\":\"iana\"},\"application/vnd.onepager\":{\"source\":\"iana\"},\"application/vnd.onepagertamp\":{\"source\":\"iana\"},\"application/vnd.onepagertamx\":{\"source\":\"iana\"},\"application/vnd.onepagertat\":{\"source\":\"iana\"},\"application/vnd.onepagertatp\":{\"source\":\"iana\"},\"application/vnd.onepagertatx\":{\"source\":\"iana\"},\"application/vnd.openblox.game+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"obgx\"]},\"application/vnd.openblox.game-binary\":{\"source\":\"iana\"},\"application/vnd.openeye.oeb\":{\"source\":\"iana\"},\"application/vnd.openofficeorg.extension\":{\"source\":\"apache\",\"extensions\":[\"oxt\"]},\"application/vnd.openstreetmap.data+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osm\"]},\"application/vnd.opentimestamps.ots\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.custom-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawing+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.extended-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presentation\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"pptx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slide\":{\"source\":\"iana\",\"extensions\":[\"sldx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow\":{\"source\":\"iana\",\"extensions\":[\"ppsx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.template\":{\"source\":\"iana\",\"extensions\":[\"potx\"]},\"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"xlsx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template\":{\"source\":\"iana\",\"extensions\":[\"xltx\"]},\"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.theme+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.themeoverride+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.vmldrawing\":{\"source\":\"iana\"},\"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"docx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template\":{\"source\":\"iana\",\"extensions\":[\"dotx\"]},\"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.core-properties+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.openxmlformats-package.relationships+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oracle.resource+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.orange.indata\":{\"source\":\"iana\"},\"application/vnd.osa.netdeploy\":{\"source\":\"iana\"},\"application/vnd.osgeo.mapguide.package\":{\"source\":\"iana\",\"extensions\":[\"mgp\"]},\"application/vnd.osgi.bundle\":{\"source\":\"iana\"},\"application/vnd.osgi.dp\":{\"source\":\"iana\",\"extensions\":[\"dp\"]},\"application/vnd.osgi.subsystem\":{\"source\":\"iana\",\"extensions\":[\"esa\"]},\"application/vnd.otps.ct-kip+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.oxli.countgraph\":{\"source\":\"iana\"},\"application/vnd.pagerduty+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.palm\":{\"source\":\"iana\",\"extensions\":[\"pdb\",\"pqa\",\"oprc\"]},\"application/vnd.panoply\":{\"source\":\"iana\"},\"application/vnd.paos.xml\":{\"source\":\"iana\"},\"application/vnd.patentdive\":{\"source\":\"iana\"},\"application/vnd.patientecommsdoc\":{\"source\":\"iana\"},\"application/vnd.pawaafile\":{\"source\":\"iana\",\"extensions\":[\"paw\"]},\"application/vnd.pcos\":{\"source\":\"iana\"},\"application/vnd.pg.format\":{\"source\":\"iana\",\"extensions\":[\"str\"]},\"application/vnd.pg.osasli\":{\"source\":\"iana\",\"extensions\":[\"ei6\"]},\"application/vnd.piaccess.application-licence\":{\"source\":\"iana\"},\"application/vnd.picsel\":{\"source\":\"iana\",\"extensions\":[\"efif\"]},\"application/vnd.pmi.widget\":{\"source\":\"iana\",\"extensions\":[\"wg\"]},\"application/vnd.poc.group-advertisement+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.pocketlearn\":{\"source\":\"iana\",\"extensions\":[\"plf\"]},\"application/vnd.powerbuilder6\":{\"source\":\"iana\",\"extensions\":[\"pbd\"]},\"application/vnd.powerbuilder6-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7\":{\"source\":\"iana\"},\"application/vnd.powerbuilder7-s\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75\":{\"source\":\"iana\"},\"application/vnd.powerbuilder75-s\":{\"source\":\"iana\"},\"application/vnd.preminet\":{\"source\":\"iana\"},\"application/vnd.previewsystems.box\":{\"source\":\"iana\",\"extensions\":[\"box\"]},\"application/vnd.proteus.magazine\":{\"source\":\"iana\",\"extensions\":[\"mgz\"]},\"application/vnd.psfs\":{\"source\":\"iana\"},\"application/vnd.publishare-delta-tree\":{\"source\":\"iana\",\"extensions\":[\"qps\"]},\"application/vnd.pvi.ptid1\":{\"source\":\"iana\",\"extensions\":[\"ptid\"]},\"application/vnd.pwg-multiplexed\":{\"source\":\"iana\"},\"application/vnd.pwg-xhtml-print+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.qualcomm.brew-app-res\":{\"source\":\"iana\"},\"application/vnd.quarantainenet\":{\"source\":\"iana\"},\"application/vnd.quark.quarkxpress\":{\"source\":\"iana\",\"extensions\":[\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]},\"application/vnd.quobject-quoxdocument\":{\"source\":\"iana\"},\"application/vnd.radisys.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-conn+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-audit-stream+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-conf+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-base+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-detect+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-group+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-speech+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.radisys.msml-dialog-transform+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rainstor.data\":{\"source\":\"iana\"},\"application/vnd.rapid\":{\"source\":\"iana\"},\"application/vnd.rar\":{\"source\":\"iana\",\"extensions\":[\"rar\"]},\"application/vnd.realvnc.bed\":{\"source\":\"iana\",\"extensions\":[\"bed\"]},\"application/vnd.recordare.musicxml\":{\"source\":\"iana\",\"extensions\":[\"mxl\"]},\"application/vnd.recordare.musicxml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"musicxml\"]},\"application/vnd.renlearn.rlprint\":{\"source\":\"iana\"},\"application/vnd.resilient.logic\":{\"source\":\"iana\"},\"application/vnd.restful+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.rig.cryptonote\":{\"source\":\"iana\",\"extensions\":[\"cryptonote\"]},\"application/vnd.rim.cod\":{\"source\":\"apache\",\"extensions\":[\"cod\"]},\"application/vnd.rn-realmedia\":{\"source\":\"apache\",\"extensions\":[\"rm\"]},\"application/vnd.rn-realmedia-vbr\":{\"source\":\"apache\",\"extensions\":[\"rmvb\"]},\"application/vnd.route66.link66+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"link66\"]},\"application/vnd.rs-274x\":{\"source\":\"iana\"},\"application/vnd.ruckus.download\":{\"source\":\"iana\"},\"application/vnd.s3sms\":{\"source\":\"iana\"},\"application/vnd.sailingtracker.track\":{\"source\":\"iana\",\"extensions\":[\"st\"]},\"application/vnd.sar\":{\"source\":\"iana\"},\"application/vnd.sbm.cid\":{\"source\":\"iana\"},\"application/vnd.sbm.mid2\":{\"source\":\"iana\"},\"application/vnd.scribus\":{\"source\":\"iana\"},\"application/vnd.sealed.3df\":{\"source\":\"iana\"},\"application/vnd.sealed.csf\":{\"source\":\"iana\"},\"application/vnd.sealed.doc\":{\"source\":\"iana\"},\"application/vnd.sealed.eml\":{\"source\":\"iana\"},\"application/vnd.sealed.mht\":{\"source\":\"iana\"},\"application/vnd.sealed.net\":{\"source\":\"iana\"},\"application/vnd.sealed.ppt\":{\"source\":\"iana\"},\"application/vnd.sealed.tiff\":{\"source\":\"iana\"},\"application/vnd.sealed.xls\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.html\":{\"source\":\"iana\"},\"application/vnd.sealedmedia.softseal.pdf\":{\"source\":\"iana\"},\"application/vnd.seemail\":{\"source\":\"iana\",\"extensions\":[\"see\"]},\"application/vnd.seis+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.sema\":{\"source\":\"iana\",\"extensions\":[\"sema\"]},\"application/vnd.semd\":{\"source\":\"iana\",\"extensions\":[\"semd\"]},\"application/vnd.semf\":{\"source\":\"iana\",\"extensions\":[\"semf\"]},\"application/vnd.shade-save-file\":{\"source\":\"iana\"},\"application/vnd.shana.informed.formdata\":{\"source\":\"iana\",\"extensions\":[\"ifm\"]},\"application/vnd.shana.informed.formtemplate\":{\"source\":\"iana\",\"extensions\":[\"itp\"]},\"application/vnd.shana.informed.interchange\":{\"source\":\"iana\",\"extensions\":[\"iif\"]},\"application/vnd.shana.informed.package\":{\"source\":\"iana\",\"extensions\":[\"ipk\"]},\"application/vnd.shootproof+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shopkick+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.shp\":{\"source\":\"iana\"},\"application/vnd.shx\":{\"source\":\"iana\"},\"application/vnd.sigrok.session\":{\"source\":\"iana\"},\"application/vnd.simtech-mindmapper\":{\"source\":\"iana\",\"extensions\":[\"twd\",\"twds\"]},\"application/vnd.siren+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.smaf\":{\"source\":\"iana\",\"extensions\":[\"mmf\"]},\"application/vnd.smart.notebook\":{\"source\":\"iana\"},\"application/vnd.smart.teacher\":{\"source\":\"iana\",\"extensions\":[\"teacher\"]},\"application/vnd.snesdev-page-table\":{\"source\":\"iana\"},\"application/vnd.software602.filler.form+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"fo\"]},\"application/vnd.software602.filler.form-xml-zip\":{\"source\":\"iana\"},\"application/vnd.solent.sdkm+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"sdkm\",\"sdkd\"]},\"application/vnd.spotfire.dxp\":{\"source\":\"iana\",\"extensions\":[\"dxp\"]},\"application/vnd.spotfire.sfs\":{\"source\":\"iana\",\"extensions\":[\"sfs\"]},\"application/vnd.sqlite3\":{\"source\":\"iana\"},\"application/vnd.sss-cod\":{\"source\":\"iana\"},\"application/vnd.sss-dtf\":{\"source\":\"iana\"},\"application/vnd.sss-ntf\":{\"source\":\"iana\"},\"application/vnd.stardivision.calc\":{\"source\":\"apache\",\"extensions\":[\"sdc\"]},\"application/vnd.stardivision.draw\":{\"source\":\"apache\",\"extensions\":[\"sda\"]},\"application/vnd.stardivision.impress\":{\"source\":\"apache\",\"extensions\":[\"sdd\"]},\"application/vnd.stardivision.math\":{\"source\":\"apache\",\"extensions\":[\"smf\"]},\"application/vnd.stardivision.writer\":{\"source\":\"apache\",\"extensions\":[\"sdw\",\"vor\"]},\"application/vnd.stardivision.writer-global\":{\"source\":\"apache\",\"extensions\":[\"sgl\"]},\"application/vnd.stepmania.package\":{\"source\":\"iana\",\"extensions\":[\"smzip\"]},\"application/vnd.stepmania.stepchart\":{\"source\":\"iana\",\"extensions\":[\"sm\"]},\"application/vnd.street-stream\":{\"source\":\"iana\"},\"application/vnd.sun.wadl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wadl\"]},\"application/vnd.sun.xml.calc\":{\"source\":\"apache\",\"extensions\":[\"sxc\"]},\"application/vnd.sun.xml.calc.template\":{\"source\":\"apache\",\"extensions\":[\"stc\"]},\"application/vnd.sun.xml.draw\":{\"source\":\"apache\",\"extensions\":[\"sxd\"]},\"application/vnd.sun.xml.draw.template\":{\"source\":\"apache\",\"extensions\":[\"std\"]},\"application/vnd.sun.xml.impress\":{\"source\":\"apache\",\"extensions\":[\"sxi\"]},\"application/vnd.sun.xml.impress.template\":{\"source\":\"apache\",\"extensions\":[\"sti\"]},\"application/vnd.sun.xml.math\":{\"source\":\"apache\",\"extensions\":[\"sxm\"]},\"application/vnd.sun.xml.writer\":{\"source\":\"apache\",\"extensions\":[\"sxw\"]},\"application/vnd.sun.xml.writer.global\":{\"source\":\"apache\",\"extensions\":[\"sxg\"]},\"application/vnd.sun.xml.writer.template\":{\"source\":\"apache\",\"extensions\":[\"stw\"]},\"application/vnd.sus-calendar\":{\"source\":\"iana\",\"extensions\":[\"sus\",\"susp\"]},\"application/vnd.svd\":{\"source\":\"iana\",\"extensions\":[\"svd\"]},\"application/vnd.swiftview-ics\":{\"source\":\"iana\"},\"application/vnd.sycle+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.symbian.install\":{\"source\":\"apache\",\"extensions\":[\"sis\",\"sisx\"]},\"application/vnd.syncml+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xsm\"]},\"application/vnd.syncml.dm+wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"bdm\"]},\"application/vnd.syncml.dm+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"xdm\"]},\"application/vnd.syncml.dm.notification\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmddf+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"ddf\"]},\"application/vnd.syncml.dmtnds+wbxml\":{\"source\":\"iana\"},\"application/vnd.syncml.dmtnds+xml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true},\"application/vnd.syncml.ds.notification\":{\"source\":\"iana\"},\"application/vnd.tableschema+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tao.intent-module-archive\":{\"source\":\"iana\",\"extensions\":[\"tao\"]},\"application/vnd.tcpdump.pcap\":{\"source\":\"iana\",\"extensions\":[\"pcap\",\"cap\",\"dmp\"]},\"application/vnd.think-cell.ppttc+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tmd.mediaflex.api+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.tml\":{\"source\":\"iana\"},\"application/vnd.tmobile-livetv\":{\"source\":\"iana\",\"extensions\":[\"tmo\"]},\"application/vnd.tri.onesource\":{\"source\":\"iana\"},\"application/vnd.trid.tpt\":{\"source\":\"iana\",\"extensions\":[\"tpt\"]},\"application/vnd.triscape.mxs\":{\"source\":\"iana\",\"extensions\":[\"mxs\"]},\"application/vnd.trueapp\":{\"source\":\"iana\",\"extensions\":[\"tra\"]},\"application/vnd.truedoc\":{\"source\":\"iana\"},\"application/vnd.ubisoft.webplayer\":{\"source\":\"iana\"},\"application/vnd.ufdl\":{\"source\":\"iana\",\"extensions\":[\"ufd\",\"ufdl\"]},\"application/vnd.uiq.theme\":{\"source\":\"iana\",\"extensions\":[\"utz\"]},\"application/vnd.umajin\":{\"source\":\"iana\",\"extensions\":[\"umj\"]},\"application/vnd.unity\":{\"source\":\"iana\",\"extensions\":[\"unityweb\"]},\"application/vnd.uoml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uoml\"]},\"application/vnd.uplanet.alert\":{\"source\":\"iana\"},\"application/vnd.uplanet.alert-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice\":{\"source\":\"iana\"},\"application/vnd.uplanet.bearer-choice-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop\":{\"source\":\"iana\"},\"application/vnd.uplanet.cacheop-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel\":{\"source\":\"iana\"},\"application/vnd.uplanet.channel-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.list\":{\"source\":\"iana\"},\"application/vnd.uplanet.list-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd\":{\"source\":\"iana\"},\"application/vnd.uplanet.listcmd-wbxml\":{\"source\":\"iana\"},\"application/vnd.uplanet.signal\":{\"source\":\"iana\"},\"application/vnd.uri-map\":{\"source\":\"iana\"},\"application/vnd.valve.source.material\":{\"source\":\"iana\"},\"application/vnd.vcx\":{\"source\":\"iana\",\"extensions\":[\"vcx\"]},\"application/vnd.vd-study\":{\"source\":\"iana\"},\"application/vnd.vectorworks\":{\"source\":\"iana\"},\"application/vnd.vel+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.verimatrix.vcas\":{\"source\":\"iana\"},\"application/vnd.veritone.aion+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.veryant.thin\":{\"source\":\"iana\"},\"application/vnd.ves.encrypted\":{\"source\":\"iana\"},\"application/vnd.vidsoft.vidconference\":{\"source\":\"iana\"},\"application/vnd.visio\":{\"source\":\"iana\",\"extensions\":[\"vsd\",\"vst\",\"vss\",\"vsw\"]},\"application/vnd.visionary\":{\"source\":\"iana\",\"extensions\":[\"vis\"]},\"application/vnd.vividence.scriptfile\":{\"source\":\"iana\"},\"application/vnd.vsf\":{\"source\":\"iana\",\"extensions\":[\"vsf\"]},\"application/vnd.wap.sic\":{\"source\":\"iana\"},\"application/vnd.wap.slc\":{\"source\":\"iana\"},\"application/vnd.wap.wbxml\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"wbxml\"]},\"application/vnd.wap.wmlc\":{\"source\":\"iana\",\"extensions\":[\"wmlc\"]},\"application/vnd.wap.wmlscriptc\":{\"source\":\"iana\",\"extensions\":[\"wmlsc\"]},\"application/vnd.webturbo\":{\"source\":\"iana\",\"extensions\":[\"wtb\"]},\"application/vnd.wfa.dpp\":{\"source\":\"iana\"},\"application/vnd.wfa.p2p\":{\"source\":\"iana\"},\"application/vnd.wfa.wsc\":{\"source\":\"iana\"},\"application/vnd.windows.devicepairing\":{\"source\":\"iana\"},\"application/vnd.wmc\":{\"source\":\"iana\"},\"application/vnd.wmf.bootstrap\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica\":{\"source\":\"iana\"},\"application/vnd.wolfram.mathematica.package\":{\"source\":\"iana\"},\"application/vnd.wolfram.player\":{\"source\":\"iana\",\"extensions\":[\"nbp\"]},\"application/vnd.wordperfect\":{\"source\":\"iana\",\"extensions\":[\"wpd\"]},\"application/vnd.wqd\":{\"source\":\"iana\",\"extensions\":[\"wqd\"]},\"application/vnd.wrq-hp3000-labelled\":{\"source\":\"iana\"},\"application/vnd.wt.stf\":{\"source\":\"iana\",\"extensions\":[\"stf\"]},\"application/vnd.wv.csp+wbxml\":{\"source\":\"iana\"},\"application/vnd.wv.csp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.wv.ssp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xacml+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xara\":{\"source\":\"iana\",\"extensions\":[\"xar\"]},\"application/vnd.xfdl\":{\"source\":\"iana\",\"extensions\":[\"xfdl\"]},\"application/vnd.xfdl.webform\":{\"source\":\"iana\"},\"application/vnd.xmi+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/vnd.xmpie.cpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.dpkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.plan\":{\"source\":\"iana\"},\"application/vnd.xmpie.ppkg\":{\"source\":\"iana\"},\"application/vnd.xmpie.xlim\":{\"source\":\"iana\"},\"application/vnd.yamaha.hv-dic\":{\"source\":\"iana\",\"extensions\":[\"hvd\"]},\"application/vnd.yamaha.hv-script\":{\"source\":\"iana\",\"extensions\":[\"hvs\"]},\"application/vnd.yamaha.hv-voice\":{\"source\":\"iana\",\"extensions\":[\"hvp\"]},\"application/vnd.yamaha.openscoreformat\":{\"source\":\"iana\",\"extensions\":[\"osf\"]},\"application/vnd.yamaha.openscoreformat.osfpvg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"osfpvg\"]},\"application/vnd.yamaha.remote-setup\":{\"source\":\"iana\"},\"application/vnd.yamaha.smaf-audio\":{\"source\":\"iana\",\"extensions\":[\"saf\"]},\"application/vnd.yamaha.smaf-phrase\":{\"source\":\"iana\",\"extensions\":[\"spf\"]},\"application/vnd.yamaha.through-ngn\":{\"source\":\"iana\"},\"application/vnd.yamaha.tunnel-udpencap\":{\"source\":\"iana\"},\"application/vnd.yaoweme\":{\"source\":\"iana\"},\"application/vnd.yellowriver-custom-menu\":{\"source\":\"iana\",\"extensions\":[\"cmp\"]},\"application/vnd.youtube.yt\":{\"source\":\"iana\"},\"application/vnd.zul\":{\"source\":\"iana\",\"extensions\":[\"zir\",\"zirz\"]},\"application/vnd.zzazz.deck+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"zaz\"]},\"application/voicexml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vxml\"]},\"application/voucher-cms+json\":{\"source\":\"iana\",\"compressible\":true},\"application/vq-rtcpxr\":{\"source\":\"iana\"},\"application/wasm\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wasm\"]},\"application/watcherinfo+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/webpush-options+json\":{\"source\":\"iana\",\"compressible\":true},\"application/whoispp-query\":{\"source\":\"iana\"},\"application/whoispp-response\":{\"source\":\"iana\"},\"application/widget\":{\"source\":\"iana\",\"extensions\":[\"wgt\"]},\"application/winhlp\":{\"source\":\"apache\",\"extensions\":[\"hlp\"]},\"application/wita\":{\"source\":\"iana\"},\"application/wordperfect5.1\":{\"source\":\"iana\"},\"application/wsdl+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wsdl\"]},\"application/wspolicy+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"wspolicy\"]},\"application/x-7z-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"7z\"]},\"application/x-abiword\":{\"source\":\"apache\",\"extensions\":[\"abw\"]},\"application/x-ace-compressed\":{\"source\":\"apache\",\"extensions\":[\"ace\"]},\"application/x-amf\":{\"source\":\"apache\"},\"application/x-apple-diskimage\":{\"source\":\"apache\",\"extensions\":[\"dmg\"]},\"application/x-arj\":{\"compressible\":false,\"extensions\":[\"arj\"]},\"application/x-authorware-bin\":{\"source\":\"apache\",\"extensions\":[\"aab\",\"x32\",\"u32\",\"vox\"]},\"application/x-authorware-map\":{\"source\":\"apache\",\"extensions\":[\"aam\"]},\"application/x-authorware-seg\":{\"source\":\"apache\",\"extensions\":[\"aas\"]},\"application/x-bcpio\":{\"source\":\"apache\",\"extensions\":[\"bcpio\"]},\"application/x-bdoc\":{\"compressible\":false,\"extensions\":[\"bdoc\"]},\"application/x-bittorrent\":{\"source\":\"apache\",\"extensions\":[\"torrent\"]},\"application/x-blorb\":{\"source\":\"apache\",\"extensions\":[\"blb\",\"blorb\"]},\"application/x-bzip\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz\"]},\"application/x-bzip2\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"bz2\",\"boz\"]},\"application/x-cbr\":{\"source\":\"apache\",\"extensions\":[\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]},\"application/x-cdlink\":{\"source\":\"apache\",\"extensions\":[\"vcd\"]},\"application/x-cfs-compressed\":{\"source\":\"apache\",\"extensions\":[\"cfs\"]},\"application/x-chat\":{\"source\":\"apache\",\"extensions\":[\"chat\"]},\"application/x-chess-pgn\":{\"source\":\"apache\",\"extensions\":[\"pgn\"]},\"application/x-chrome-extension\":{\"extensions\":[\"crx\"]},\"application/x-cocoa\":{\"source\":\"nginx\",\"extensions\":[\"cco\"]},\"application/x-compress\":{\"source\":\"apache\"},\"application/x-conference\":{\"source\":\"apache\",\"extensions\":[\"nsc\"]},\"application/x-cpio\":{\"source\":\"apache\",\"extensions\":[\"cpio\"]},\"application/x-csh\":{\"source\":\"apache\",\"extensions\":[\"csh\"]},\"application/x-deb\":{\"compressible\":false},\"application/x-debian-package\":{\"source\":\"apache\",\"extensions\":[\"deb\",\"udeb\"]},\"application/x-dgc-compressed\":{\"source\":\"apache\",\"extensions\":[\"dgc\"]},\"application/x-director\":{\"source\":\"apache\",\"extensions\":[\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]},\"application/x-doom\":{\"source\":\"apache\",\"extensions\":[\"wad\"]},\"application/x-dtbncx+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ncx\"]},\"application/x-dtbook+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"dtb\"]},\"application/x-dtbresource+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"res\"]},\"application/x-dvi\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"dvi\"]},\"application/x-envoy\":{\"source\":\"apache\",\"extensions\":[\"evy\"]},\"application/x-eva\":{\"source\":\"apache\",\"extensions\":[\"eva\"]},\"application/x-font-bdf\":{\"source\":\"apache\",\"extensions\":[\"bdf\"]},\"application/x-font-dos\":{\"source\":\"apache\"},\"application/x-font-framemaker\":{\"source\":\"apache\"},\"application/x-font-ghostscript\":{\"source\":\"apache\",\"extensions\":[\"gsf\"]},\"application/x-font-libgrx\":{\"source\":\"apache\"},\"application/x-font-linux-psf\":{\"source\":\"apache\",\"extensions\":[\"psf\"]},\"application/x-font-pcf\":{\"source\":\"apache\",\"extensions\":[\"pcf\"]},\"application/x-font-snf\":{\"source\":\"apache\",\"extensions\":[\"snf\"]},\"application/x-font-speedo\":{\"source\":\"apache\"},\"application/x-font-sunos-news\":{\"source\":\"apache\"},\"application/x-font-type1\":{\"source\":\"apache\",\"extensions\":[\"pfa\",\"pfb\",\"pfm\",\"afm\"]},\"application/x-font-vfont\":{\"source\":\"apache\"},\"application/x-freearc\":{\"source\":\"apache\",\"extensions\":[\"arc\"]},\"application/x-futuresplash\":{\"source\":\"apache\",\"extensions\":[\"spl\"]},\"application/x-gca-compressed\":{\"source\":\"apache\",\"extensions\":[\"gca\"]},\"application/x-glulx\":{\"source\":\"apache\",\"extensions\":[\"ulx\"]},\"application/x-gnumeric\":{\"source\":\"apache\",\"extensions\":[\"gnumeric\"]},\"application/x-gramps-xml\":{\"source\":\"apache\",\"extensions\":[\"gramps\"]},\"application/x-gtar\":{\"source\":\"apache\",\"extensions\":[\"gtar\"]},\"application/x-gzip\":{\"source\":\"apache\"},\"application/x-hdf\":{\"source\":\"apache\",\"extensions\":[\"hdf\"]},\"application/x-httpd-php\":{\"compressible\":true,\"extensions\":[\"php\"]},\"application/x-install-instructions\":{\"source\":\"apache\",\"extensions\":[\"install\"]},\"application/x-iso9660-image\":{\"source\":\"apache\",\"extensions\":[\"iso\"]},\"application/x-iwork-keynote-sffkey\":{\"extensions\":[\"key\"]},\"application/x-iwork-numbers-sffnumbers\":{\"extensions\":[\"numbers\"]},\"application/x-iwork-pages-sffpages\":{\"extensions\":[\"pages\"]},\"application/x-java-archive-diff\":{\"source\":\"nginx\",\"extensions\":[\"jardiff\"]},\"application/x-java-jnlp-file\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"jnlp\"]},\"application/x-javascript\":{\"compressible\":true},\"application/x-keepass2\":{\"extensions\":[\"kdbx\"]},\"application/x-latex\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"latex\"]},\"application/x-lua-bytecode\":{\"extensions\":[\"luac\"]},\"application/x-lzh-compressed\":{\"source\":\"apache\",\"extensions\":[\"lzh\",\"lha\"]},\"application/x-makeself\":{\"source\":\"nginx\",\"extensions\":[\"run\"]},\"application/x-mie\":{\"source\":\"apache\",\"extensions\":[\"mie\"]},\"application/x-mobipocket-ebook\":{\"source\":\"apache\",\"extensions\":[\"prc\",\"mobi\"]},\"application/x-mpegurl\":{\"compressible\":false},\"application/x-ms-application\":{\"source\":\"apache\",\"extensions\":[\"application\"]},\"application/x-ms-shortcut\":{\"source\":\"apache\",\"extensions\":[\"lnk\"]},\"application/x-ms-wmd\":{\"source\":\"apache\",\"extensions\":[\"wmd\"]},\"application/x-ms-wmz\":{\"source\":\"apache\",\"extensions\":[\"wmz\"]},\"application/x-ms-xbap\":{\"source\":\"apache\",\"extensions\":[\"xbap\"]},\"application/x-msaccess\":{\"source\":\"apache\",\"extensions\":[\"mdb\"]},\"application/x-msbinder\":{\"source\":\"apache\",\"extensions\":[\"obd\"]},\"application/x-mscardfile\":{\"source\":\"apache\",\"extensions\":[\"crd\"]},\"application/x-msclip\":{\"source\":\"apache\",\"extensions\":[\"clp\"]},\"application/x-msdos-program\":{\"extensions\":[\"exe\"]},\"application/x-msdownload\":{\"source\":\"apache\",\"extensions\":[\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]},\"application/x-msmediaview\":{\"source\":\"apache\",\"extensions\":[\"mvb\",\"m13\",\"m14\"]},\"application/x-msmetafile\":{\"source\":\"apache\",\"extensions\":[\"wmf\",\"wmz\",\"emf\",\"emz\"]},\"application/x-msmoney\":{\"source\":\"apache\",\"extensions\":[\"mny\"]},\"application/x-mspublisher\":{\"source\":\"apache\",\"extensions\":[\"pub\"]},\"application/x-msschedule\":{\"source\":\"apache\",\"extensions\":[\"scd\"]},\"application/x-msterminal\":{\"source\":\"apache\",\"extensions\":[\"trm\"]},\"application/x-mswrite\":{\"source\":\"apache\",\"extensions\":[\"wri\"]},\"application/x-netcdf\":{\"source\":\"apache\",\"extensions\":[\"nc\",\"cdf\"]},\"application/x-ns-proxy-autoconfig\":{\"compressible\":true,\"extensions\":[\"pac\"]},\"application/x-nzb\":{\"source\":\"apache\",\"extensions\":[\"nzb\"]},\"application/x-perl\":{\"source\":\"nginx\",\"extensions\":[\"pl\",\"pm\"]},\"application/x-pilot\":{\"source\":\"nginx\",\"extensions\":[\"prc\",\"pdb\"]},\"application/x-pkcs12\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"p12\",\"pfx\"]},\"application/x-pkcs7-certificates\":{\"source\":\"apache\",\"extensions\":[\"p7b\",\"spc\"]},\"application/x-pkcs7-certreqresp\":{\"source\":\"apache\",\"extensions\":[\"p7r\"]},\"application/x-pki-message\":{\"source\":\"iana\"},\"application/x-rar-compressed\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"rar\"]},\"application/x-redhat-package-manager\":{\"source\":\"nginx\",\"extensions\":[\"rpm\"]},\"application/x-research-info-systems\":{\"source\":\"apache\",\"extensions\":[\"ris\"]},\"application/x-sea\":{\"source\":\"nginx\",\"extensions\":[\"sea\"]},\"application/x-sh\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"sh\"]},\"application/x-shar\":{\"source\":\"apache\",\"extensions\":[\"shar\"]},\"application/x-shockwave-flash\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"swf\"]},\"application/x-silverlight-app\":{\"source\":\"apache\",\"extensions\":[\"xap\"]},\"application/x-sql\":{\"source\":\"apache\",\"extensions\":[\"sql\"]},\"application/x-stuffit\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"sit\"]},\"application/x-stuffitx\":{\"source\":\"apache\",\"extensions\":[\"sitx\"]},\"application/x-subrip\":{\"source\":\"apache\",\"extensions\":[\"srt\"]},\"application/x-sv4cpio\":{\"source\":\"apache\",\"extensions\":[\"sv4cpio\"]},\"application/x-sv4crc\":{\"source\":\"apache\",\"extensions\":[\"sv4crc\"]},\"application/x-t3vm-image\":{\"source\":\"apache\",\"extensions\":[\"t3\"]},\"application/x-tads\":{\"source\":\"apache\",\"extensions\":[\"gam\"]},\"application/x-tar\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"tar\"]},\"application/x-tcl\":{\"source\":\"apache\",\"extensions\":[\"tcl\",\"tk\"]},\"application/x-tex\":{\"source\":\"apache\",\"extensions\":[\"tex\"]},\"application/x-tex-tfm\":{\"source\":\"apache\",\"extensions\":[\"tfm\"]},\"application/x-texinfo\":{\"source\":\"apache\",\"extensions\":[\"texinfo\",\"texi\"]},\"application/x-tgif\":{\"source\":\"apache\",\"extensions\":[\"obj\"]},\"application/x-ustar\":{\"source\":\"apache\",\"extensions\":[\"ustar\"]},\"application/x-virtualbox-hdd\":{\"compressible\":true,\"extensions\":[\"hdd\"]},\"application/x-virtualbox-ova\":{\"compressible\":true,\"extensions\":[\"ova\"]},\"application/x-virtualbox-ovf\":{\"compressible\":true,\"extensions\":[\"ovf\"]},\"application/x-virtualbox-vbox\":{\"compressible\":true,\"extensions\":[\"vbox\"]},\"application/x-virtualbox-vbox-extpack\":{\"compressible\":false,\"extensions\":[\"vbox-extpack\"]},\"application/x-virtualbox-vdi\":{\"compressible\":true,\"extensions\":[\"vdi\"]},\"application/x-virtualbox-vhd\":{\"compressible\":true,\"extensions\":[\"vhd\"]},\"application/x-virtualbox-vmdk\":{\"compressible\":true,\"extensions\":[\"vmdk\"]},\"application/x-wais-source\":{\"source\":\"apache\",\"extensions\":[\"src\"]},\"application/x-web-app-manifest+json\":{\"compressible\":true,\"extensions\":[\"webapp\"]},\"application/x-www-form-urlencoded\":{\"source\":\"iana\",\"compressible\":true},\"application/x-x509-ca-cert\":{\"source\":\"iana\",\"extensions\":[\"der\",\"crt\",\"pem\"]},\"application/x-x509-ca-ra-cert\":{\"source\":\"iana\"},\"application/x-x509-next-ca-cert\":{\"source\":\"iana\"},\"application/x-xfig\":{\"source\":\"apache\",\"extensions\":[\"fig\"]},\"application/x-xliff+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/x-xpinstall\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"xpi\"]},\"application/x-xz\":{\"source\":\"apache\",\"extensions\":[\"xz\"]},\"application/x-zmachine\":{\"source\":\"apache\",\"extensions\":[\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]},\"application/x400-bp\":{\"source\":\"iana\"},\"application/xacml+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xaml+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xaml\"]},\"application/xcap-att+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xav\"]},\"application/xcap-caps+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xca\"]},\"application/xcap-diff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xdf\"]},\"application/xcap-el+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xel\"]},\"application/xcap-error+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcap-ns+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xns\"]},\"application/xcon-conference-info+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xcon-conference-info-diff+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xenc+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xenc\"]},\"application/xhtml+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xhtml\",\"xht\"]},\"application/xhtml-voice+xml\":{\"source\":\"apache\",\"compressible\":true},\"application/xliff+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xlf\"]},\"application/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\",\"xsl\",\"xsd\",\"rng\"]},\"application/xml-dtd\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dtd\"]},\"application/xml-external-parsed-entity\":{\"source\":\"iana\"},\"application/xml-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xmpp+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/xop+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xop\"]},\"application/xproc+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xpl\"]},\"application/xslt+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xsl\",\"xslt\"]},\"application/xspf+xml\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"xspf\"]},\"application/xv+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]},\"application/yang\":{\"source\":\"iana\",\"extensions\":[\"yang\"]},\"application/yang-data+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-data+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+json\":{\"source\":\"iana\",\"compressible\":true},\"application/yang-patch+xml\":{\"source\":\"iana\",\"compressible\":true},\"application/yin+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"yin\"]},\"application/zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"zip\"]},\"application/zlib\":{\"source\":\"iana\"},\"application/zstd\":{\"source\":\"iana\"},\"audio/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"audio/32kadpcm\":{\"source\":\"iana\"},\"audio/3gpp\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"3gpp\"]},\"audio/3gpp2\":{\"source\":\"iana\"},\"audio/aac\":{\"source\":\"iana\"},\"audio/ac3\":{\"source\":\"iana\"},\"audio/adpcm\":{\"source\":\"apache\",\"extensions\":[\"adp\"]},\"audio/amr\":{\"source\":\"iana\",\"extensions\":[\"amr\"]},\"audio/amr-wb\":{\"source\":\"iana\"},\"audio/amr-wb+\":{\"source\":\"iana\"},\"audio/aptx\":{\"source\":\"iana\"},\"audio/asc\":{\"source\":\"iana\"},\"audio/atrac-advanced-lossless\":{\"source\":\"iana\"},\"audio/atrac-x\":{\"source\":\"iana\"},\"audio/atrac3\":{\"source\":\"iana\"},\"audio/basic\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"au\",\"snd\"]},\"audio/bv16\":{\"source\":\"iana\"},\"audio/bv32\":{\"source\":\"iana\"},\"audio/clearmode\":{\"source\":\"iana\"},\"audio/cn\":{\"source\":\"iana\"},\"audio/dat12\":{\"source\":\"iana\"},\"audio/dls\":{\"source\":\"iana\"},\"audio/dsr-es201108\":{\"source\":\"iana\"},\"audio/dsr-es202050\":{\"source\":\"iana\"},\"audio/dsr-es202211\":{\"source\":\"iana\"},\"audio/dsr-es202212\":{\"source\":\"iana\"},\"audio/dv\":{\"source\":\"iana\"},\"audio/dvi4\":{\"source\":\"iana\"},\"audio/eac3\":{\"source\":\"iana\"},\"audio/encaprtp\":{\"source\":\"iana\"},\"audio/evrc\":{\"source\":\"iana\"},\"audio/evrc-qcp\":{\"source\":\"iana\"},\"audio/evrc0\":{\"source\":\"iana\"},\"audio/evrc1\":{\"source\":\"iana\"},\"audio/evrcb\":{\"source\":\"iana\"},\"audio/evrcb0\":{\"source\":\"iana\"},\"audio/evrcb1\":{\"source\":\"iana\"},\"audio/evrcnw\":{\"source\":\"iana\"},\"audio/evrcnw0\":{\"source\":\"iana\"},\"audio/evrcnw1\":{\"source\":\"iana\"},\"audio/evrcwb\":{\"source\":\"iana\"},\"audio/evrcwb0\":{\"source\":\"iana\"},\"audio/evrcwb1\":{\"source\":\"iana\"},\"audio/evs\":{\"source\":\"iana\"},\"audio/flexfec\":{\"source\":\"iana\"},\"audio/fwdred\":{\"source\":\"iana\"},\"audio/g711-0\":{\"source\":\"iana\"},\"audio/g719\":{\"source\":\"iana\"},\"audio/g722\":{\"source\":\"iana\"},\"audio/g7221\":{\"source\":\"iana\"},\"audio/g723\":{\"source\":\"iana\"},\"audio/g726-16\":{\"source\":\"iana\"},\"audio/g726-24\":{\"source\":\"iana\"},\"audio/g726-32\":{\"source\":\"iana\"},\"audio/g726-40\":{\"source\":\"iana\"},\"audio/g728\":{\"source\":\"iana\"},\"audio/g729\":{\"source\":\"iana\"},\"audio/g7291\":{\"source\":\"iana\"},\"audio/g729d\":{\"source\":\"iana\"},\"audio/g729e\":{\"source\":\"iana\"},\"audio/gsm\":{\"source\":\"iana\"},\"audio/gsm-efr\":{\"source\":\"iana\"},\"audio/gsm-hr-08\":{\"source\":\"iana\"},\"audio/ilbc\":{\"source\":\"iana\"},\"audio/ip-mr_v2.5\":{\"source\":\"iana\"},\"audio/isac\":{\"source\":\"apache\"},\"audio/l16\":{\"source\":\"iana\"},\"audio/l20\":{\"source\":\"iana\"},\"audio/l24\":{\"source\":\"iana\",\"compressible\":false},\"audio/l8\":{\"source\":\"iana\"},\"audio/lpc\":{\"source\":\"iana\"},\"audio/melp\":{\"source\":\"iana\"},\"audio/melp1200\":{\"source\":\"iana\"},\"audio/melp2400\":{\"source\":\"iana\"},\"audio/melp600\":{\"source\":\"iana\"},\"audio/mhas\":{\"source\":\"iana\"},\"audio/midi\":{\"source\":\"apache\",\"extensions\":[\"mid\",\"midi\",\"kar\",\"rmi\"]},\"audio/mobile-xmf\":{\"source\":\"iana\",\"extensions\":[\"mxmf\"]},\"audio/mp3\":{\"compressible\":false,\"extensions\":[\"mp3\"]},\"audio/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"m4a\",\"mp4a\"]},\"audio/mp4a-latm\":{\"source\":\"iana\"},\"audio/mpa\":{\"source\":\"iana\"},\"audio/mpa-robust\":{\"source\":\"iana\"},\"audio/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]},\"audio/mpeg4-generic\":{\"source\":\"iana\"},\"audio/musepack\":{\"source\":\"apache\"},\"audio/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"oga\",\"ogg\",\"spx\",\"opus\"]},\"audio/opus\":{\"source\":\"iana\"},\"audio/parityfec\":{\"source\":\"iana\"},\"audio/pcma\":{\"source\":\"iana\"},\"audio/pcma-wb\":{\"source\":\"iana\"},\"audio/pcmu\":{\"source\":\"iana\"},\"audio/pcmu-wb\":{\"source\":\"iana\"},\"audio/prs.sid\":{\"source\":\"iana\"},\"audio/qcelp\":{\"source\":\"iana\"},\"audio/raptorfec\":{\"source\":\"iana\"},\"audio/red\":{\"source\":\"iana\"},\"audio/rtp-enc-aescm128\":{\"source\":\"iana\"},\"audio/rtp-midi\":{\"source\":\"iana\"},\"audio/rtploopback\":{\"source\":\"iana\"},\"audio/rtx\":{\"source\":\"iana\"},\"audio/s3m\":{\"source\":\"apache\",\"extensions\":[\"s3m\"]},\"audio/scip\":{\"source\":\"iana\"},\"audio/silk\":{\"source\":\"apache\",\"extensions\":[\"sil\"]},\"audio/smv\":{\"source\":\"iana\"},\"audio/smv-qcp\":{\"source\":\"iana\"},\"audio/smv0\":{\"source\":\"iana\"},\"audio/sofa\":{\"source\":\"iana\"},\"audio/sp-midi\":{\"source\":\"iana\"},\"audio/speex\":{\"source\":\"iana\"},\"audio/t140c\":{\"source\":\"iana\"},\"audio/t38\":{\"source\":\"iana\"},\"audio/telephone-event\":{\"source\":\"iana\"},\"audio/tetra_acelp\":{\"source\":\"iana\"},\"audio/tetra_acelp_bb\":{\"source\":\"iana\"},\"audio/tone\":{\"source\":\"iana\"},\"audio/tsvcis\":{\"source\":\"iana\"},\"audio/uemclip\":{\"source\":\"iana\"},\"audio/ulpfec\":{\"source\":\"iana\"},\"audio/usac\":{\"source\":\"iana\"},\"audio/vdvi\":{\"source\":\"iana\"},\"audio/vmr-wb\":{\"source\":\"iana\"},\"audio/vnd.3gpp.iufp\":{\"source\":\"iana\"},\"audio/vnd.4sb\":{\"source\":\"iana\"},\"audio/vnd.audiokoz\":{\"source\":\"iana\"},\"audio/vnd.celp\":{\"source\":\"iana\"},\"audio/vnd.cisco.nse\":{\"source\":\"iana\"},\"audio/vnd.cmles.radio-events\":{\"source\":\"iana\"},\"audio/vnd.cns.anp1\":{\"source\":\"iana\"},\"audio/vnd.cns.inf1\":{\"source\":\"iana\"},\"audio/vnd.dece.audio\":{\"source\":\"iana\",\"extensions\":[\"uva\",\"uvva\"]},\"audio/vnd.digital-winds\":{\"source\":\"iana\",\"extensions\":[\"eol\"]},\"audio/vnd.dlna.adts\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.1\":{\"source\":\"iana\"},\"audio/vnd.dolby.heaac.2\":{\"source\":\"iana\"},\"audio/vnd.dolby.mlp\":{\"source\":\"iana\"},\"audio/vnd.dolby.mps\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2x\":{\"source\":\"iana\"},\"audio/vnd.dolby.pl2z\":{\"source\":\"iana\"},\"audio/vnd.dolby.pulse.1\":{\"source\":\"iana\"},\"audio/vnd.dra\":{\"source\":\"iana\",\"extensions\":[\"dra\"]},\"audio/vnd.dts\":{\"source\":\"iana\",\"extensions\":[\"dts\"]},\"audio/vnd.dts.hd\":{\"source\":\"iana\",\"extensions\":[\"dtshd\"]},\"audio/vnd.dts.uhd\":{\"source\":\"iana\"},\"audio/vnd.dvb.file\":{\"source\":\"iana\"},\"audio/vnd.everad.plj\":{\"source\":\"iana\"},\"audio/vnd.hns.audio\":{\"source\":\"iana\"},\"audio/vnd.lucent.voice\":{\"source\":\"iana\",\"extensions\":[\"lvp\"]},\"audio/vnd.ms-playready.media.pya\":{\"source\":\"iana\",\"extensions\":[\"pya\"]},\"audio/vnd.nokia.mobile-xmf\":{\"source\":\"iana\"},\"audio/vnd.nortel.vbk\":{\"source\":\"iana\"},\"audio/vnd.nuera.ecelp4800\":{\"source\":\"iana\",\"extensions\":[\"ecelp4800\"]},\"audio/vnd.nuera.ecelp7470\":{\"source\":\"iana\",\"extensions\":[\"ecelp7470\"]},\"audio/vnd.nuera.ecelp9600\":{\"source\":\"iana\",\"extensions\":[\"ecelp9600\"]},\"audio/vnd.octel.sbc\":{\"source\":\"iana\"},\"audio/vnd.presonus.multitrack\":{\"source\":\"iana\"},\"audio/vnd.qcelp\":{\"source\":\"iana\"},\"audio/vnd.rhetorex.32kadpcm\":{\"source\":\"iana\"},\"audio/vnd.rip\":{\"source\":\"iana\",\"extensions\":[\"rip\"]},\"audio/vnd.rn-realaudio\":{\"compressible\":false},\"audio/vnd.sealedmedia.softseal.mpeg\":{\"source\":\"iana\"},\"audio/vnd.vmx.cvsd\":{\"source\":\"iana\"},\"audio/vnd.wave\":{\"compressible\":false},\"audio/vorbis\":{\"source\":\"iana\",\"compressible\":false},\"audio/vorbis-config\":{\"source\":\"iana\"},\"audio/wav\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/wave\":{\"compressible\":false,\"extensions\":[\"wav\"]},\"audio/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"weba\"]},\"audio/x-aac\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"aac\"]},\"audio/x-aiff\":{\"source\":\"apache\",\"extensions\":[\"aif\",\"aiff\",\"aifc\"]},\"audio/x-caf\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"caf\"]},\"audio/x-flac\":{\"source\":\"apache\",\"extensions\":[\"flac\"]},\"audio/x-m4a\":{\"source\":\"nginx\",\"extensions\":[\"m4a\"]},\"audio/x-matroska\":{\"source\":\"apache\",\"extensions\":[\"mka\"]},\"audio/x-mpegurl\":{\"source\":\"apache\",\"extensions\":[\"m3u\"]},\"audio/x-ms-wax\":{\"source\":\"apache\",\"extensions\":[\"wax\"]},\"audio/x-ms-wma\":{\"source\":\"apache\",\"extensions\":[\"wma\"]},\"audio/x-pn-realaudio\":{\"source\":\"apache\",\"extensions\":[\"ram\",\"ra\"]},\"audio/x-pn-realaudio-plugin\":{\"source\":\"apache\",\"extensions\":[\"rmp\"]},\"audio/x-realaudio\":{\"source\":\"nginx\",\"extensions\":[\"ra\"]},\"audio/x-tta\":{\"source\":\"apache\"},\"audio/x-wav\":{\"source\":\"apache\",\"extensions\":[\"wav\"]},\"audio/xm\":{\"source\":\"apache\",\"extensions\":[\"xm\"]},\"chemical/x-cdx\":{\"source\":\"apache\",\"extensions\":[\"cdx\"]},\"chemical/x-cif\":{\"source\":\"apache\",\"extensions\":[\"cif\"]},\"chemical/x-cmdf\":{\"source\":\"apache\",\"extensions\":[\"cmdf\"]},\"chemical/x-cml\":{\"source\":\"apache\",\"extensions\":[\"cml\"]},\"chemical/x-csml\":{\"source\":\"apache\",\"extensions\":[\"csml\"]},\"chemical/x-pdb\":{\"source\":\"apache\"},\"chemical/x-xyz\":{\"source\":\"apache\",\"extensions\":[\"xyz\"]},\"font/collection\":{\"source\":\"iana\",\"extensions\":[\"ttc\"]},\"font/otf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"otf\"]},\"font/sfnt\":{\"source\":\"iana\"},\"font/ttf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ttf\"]},\"font/woff\":{\"source\":\"iana\",\"extensions\":[\"woff\"]},\"font/woff2\":{\"source\":\"iana\",\"extensions\":[\"woff2\"]},\"image/aces\":{\"source\":\"iana\",\"extensions\":[\"exr\"]},\"image/apng\":{\"compressible\":false,\"extensions\":[\"apng\"]},\"image/avci\":{\"source\":\"iana\"},\"image/avcs\":{\"source\":\"iana\"},\"image/avif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"avif\"]},\"image/bmp\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/cgm\":{\"source\":\"iana\",\"extensions\":[\"cgm\"]},\"image/dicom-rle\":{\"source\":\"iana\",\"extensions\":[\"drle\"]},\"image/emf\":{\"source\":\"iana\",\"extensions\":[\"emf\"]},\"image/fits\":{\"source\":\"iana\",\"extensions\":[\"fits\"]},\"image/g3fax\":{\"source\":\"iana\",\"extensions\":[\"g3\"]},\"image/gif\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"gif\"]},\"image/heic\":{\"source\":\"iana\",\"extensions\":[\"heic\"]},\"image/heic-sequence\":{\"source\":\"iana\",\"extensions\":[\"heics\"]},\"image/heif\":{\"source\":\"iana\",\"extensions\":[\"heif\"]},\"image/heif-sequence\":{\"source\":\"iana\",\"extensions\":[\"heifs\"]},\"image/hej2k\":{\"source\":\"iana\",\"extensions\":[\"hej2\"]},\"image/hsj2\":{\"source\":\"iana\",\"extensions\":[\"hsj2\"]},\"image/ief\":{\"source\":\"iana\",\"extensions\":[\"ief\"]},\"image/jls\":{\"source\":\"iana\",\"extensions\":[\"jls\"]},\"image/jp2\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jp2\",\"jpg2\"]},\"image/jpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpeg\",\"jpg\",\"jpe\"]},\"image/jph\":{\"source\":\"iana\",\"extensions\":[\"jph\"]},\"image/jphc\":{\"source\":\"iana\",\"extensions\":[\"jhc\"]},\"image/jpm\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpm\"]},\"image/jpx\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"jpx\",\"jpf\"]},\"image/jxr\":{\"source\":\"iana\",\"extensions\":[\"jxr\"]},\"image/jxra\":{\"source\":\"iana\",\"extensions\":[\"jxra\"]},\"image/jxrs\":{\"source\":\"iana\",\"extensions\":[\"jxrs\"]},\"image/jxs\":{\"source\":\"iana\",\"extensions\":[\"jxs\"]},\"image/jxsc\":{\"source\":\"iana\",\"extensions\":[\"jxsc\"]},\"image/jxsi\":{\"source\":\"iana\",\"extensions\":[\"jxsi\"]},\"image/jxss\":{\"source\":\"iana\",\"extensions\":[\"jxss\"]},\"image/ktx\":{\"source\":\"iana\",\"extensions\":[\"ktx\"]},\"image/ktx2\":{\"source\":\"iana\",\"extensions\":[\"ktx2\"]},\"image/naplps\":{\"source\":\"iana\"},\"image/pjpeg\":{\"compressible\":false},\"image/png\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"png\"]},\"image/prs.btif\":{\"source\":\"iana\",\"extensions\":[\"btif\"]},\"image/prs.pti\":{\"source\":\"iana\",\"extensions\":[\"pti\"]},\"image/pwg-raster\":{\"source\":\"iana\"},\"image/sgi\":{\"source\":\"apache\",\"extensions\":[\"sgi\"]},\"image/svg+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"svg\",\"svgz\"]},\"image/t38\":{\"source\":\"iana\",\"extensions\":[\"t38\"]},\"image/tiff\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"tif\",\"tiff\"]},\"image/tiff-fx\":{\"source\":\"iana\",\"extensions\":[\"tfx\"]},\"image/vnd.adobe.photoshop\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"psd\"]},\"image/vnd.airzip.accelerator.azv\":{\"source\":\"iana\",\"extensions\":[\"azv\"]},\"image/vnd.cns.inf2\":{\"source\":\"iana\"},\"image/vnd.dece.graphic\":{\"source\":\"iana\",\"extensions\":[\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]},\"image/vnd.djvu\":{\"source\":\"iana\",\"extensions\":[\"djvu\",\"djv\"]},\"image/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"image/vnd.dwg\":{\"source\":\"iana\",\"extensions\":[\"dwg\"]},\"image/vnd.dxf\":{\"source\":\"iana\",\"extensions\":[\"dxf\"]},\"image/vnd.fastbidsheet\":{\"source\":\"iana\",\"extensions\":[\"fbs\"]},\"image/vnd.fpx\":{\"source\":\"iana\",\"extensions\":[\"fpx\"]},\"image/vnd.fst\":{\"source\":\"iana\",\"extensions\":[\"fst\"]},\"image/vnd.fujixerox.edmics-mmr\":{\"source\":\"iana\",\"extensions\":[\"mmr\"]},\"image/vnd.fujixerox.edmics-rlc\":{\"source\":\"iana\",\"extensions\":[\"rlc\"]},\"image/vnd.globalgraphics.pgb\":{\"source\":\"iana\"},\"image/vnd.microsoft.icon\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/vnd.mix\":{\"source\":\"iana\"},\"image/vnd.mozilla.apng\":{\"source\":\"iana\"},\"image/vnd.ms-dds\":{\"compressible\":true,\"extensions\":[\"dds\"]},\"image/vnd.ms-modi\":{\"source\":\"iana\",\"extensions\":[\"mdi\"]},\"image/vnd.ms-photo\":{\"source\":\"apache\",\"extensions\":[\"wdp\"]},\"image/vnd.net-fpx\":{\"source\":\"iana\",\"extensions\":[\"npx\"]},\"image/vnd.pco.b16\":{\"source\":\"iana\",\"extensions\":[\"b16\"]},\"image/vnd.radiance\":{\"source\":\"iana\"},\"image/vnd.sealed.png\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.gif\":{\"source\":\"iana\"},\"image/vnd.sealedmedia.softseal.jpg\":{\"source\":\"iana\"},\"image/vnd.svf\":{\"source\":\"iana\"},\"image/vnd.tencent.tap\":{\"source\":\"iana\",\"extensions\":[\"tap\"]},\"image/vnd.valve.source.texture\":{\"source\":\"iana\",\"extensions\":[\"vtf\"]},\"image/vnd.wap.wbmp\":{\"source\":\"iana\",\"extensions\":[\"wbmp\"]},\"image/vnd.xiff\":{\"source\":\"iana\",\"extensions\":[\"xif\"]},\"image/vnd.zbrush.pcx\":{\"source\":\"iana\",\"extensions\":[\"pcx\"]},\"image/webp\":{\"source\":\"apache\",\"extensions\":[\"webp\"]},\"image/wmf\":{\"source\":\"iana\",\"extensions\":[\"wmf\"]},\"image/x-3ds\":{\"source\":\"apache\",\"extensions\":[\"3ds\"]},\"image/x-cmu-raster\":{\"source\":\"apache\",\"extensions\":[\"ras\"]},\"image/x-cmx\":{\"source\":\"apache\",\"extensions\":[\"cmx\"]},\"image/x-freehand\":{\"source\":\"apache\",\"extensions\":[\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]},\"image/x-icon\":{\"source\":\"apache\",\"compressible\":true,\"extensions\":[\"ico\"]},\"image/x-jng\":{\"source\":\"nginx\",\"extensions\":[\"jng\"]},\"image/x-mrsid-image\":{\"source\":\"apache\",\"extensions\":[\"sid\"]},\"image/x-ms-bmp\":{\"source\":\"nginx\",\"compressible\":true,\"extensions\":[\"bmp\"]},\"image/x-pcx\":{\"source\":\"apache\",\"extensions\":[\"pcx\"]},\"image/x-pict\":{\"source\":\"apache\",\"extensions\":[\"pic\",\"pct\"]},\"image/x-portable-anymap\":{\"source\":\"apache\",\"extensions\":[\"pnm\"]},\"image/x-portable-bitmap\":{\"source\":\"apache\",\"extensions\":[\"pbm\"]},\"image/x-portable-graymap\":{\"source\":\"apache\",\"extensions\":[\"pgm\"]},\"image/x-portable-pixmap\":{\"source\":\"apache\",\"extensions\":[\"ppm\"]},\"image/x-rgb\":{\"source\":\"apache\",\"extensions\":[\"rgb\"]},\"image/x-tga\":{\"source\":\"apache\",\"extensions\":[\"tga\"]},\"image/x-xbitmap\":{\"source\":\"apache\",\"extensions\":[\"xbm\"]},\"image/x-xcf\":{\"compressible\":false},\"image/x-xpixmap\":{\"source\":\"apache\",\"extensions\":[\"xpm\"]},\"image/x-xwindowdump\":{\"source\":\"apache\",\"extensions\":[\"xwd\"]},\"message/cpim\":{\"source\":\"iana\"},\"message/delivery-status\":{\"source\":\"iana\"},\"message/disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"disposition-notification\"]},\"message/external-body\":{\"source\":\"iana\"},\"message/feedback-report\":{\"source\":\"iana\"},\"message/global\":{\"source\":\"iana\",\"extensions\":[\"u8msg\"]},\"message/global-delivery-status\":{\"source\":\"iana\",\"extensions\":[\"u8dsn\"]},\"message/global-disposition-notification\":{\"source\":\"iana\",\"extensions\":[\"u8mdn\"]},\"message/global-headers\":{\"source\":\"iana\",\"extensions\":[\"u8hdr\"]},\"message/http\":{\"source\":\"iana\",\"compressible\":false},\"message/imdn+xml\":{\"source\":\"iana\",\"compressible\":true},\"message/news\":{\"source\":\"iana\"},\"message/partial\":{\"source\":\"iana\",\"compressible\":false},\"message/rfc822\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"eml\",\"mime\"]},\"message/s-http\":{\"source\":\"iana\"},\"message/sip\":{\"source\":\"iana\"},\"message/sipfrag\":{\"source\":\"iana\"},\"message/tracking-status\":{\"source\":\"iana\"},\"message/vnd.si.simp\":{\"source\":\"iana\"},\"message/vnd.wfa.wsc\":{\"source\":\"iana\",\"extensions\":[\"wsc\"]},\"model/3mf\":{\"source\":\"iana\",\"extensions\":[\"3mf\"]},\"model/e57\":{\"source\":\"iana\"},\"model/gltf+json\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"gltf\"]},\"model/gltf-binary\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"glb\"]},\"model/iges\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"igs\",\"iges\"]},\"model/mesh\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"msh\",\"mesh\",\"silo\"]},\"model/mtl\":{\"source\":\"iana\",\"extensions\":[\"mtl\"]},\"model/obj\":{\"source\":\"iana\",\"extensions\":[\"obj\"]},\"model/step\":{\"source\":\"iana\"},\"model/step+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"stpx\"]},\"model/step+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpz\"]},\"model/step-xml+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"stpxz\"]},\"model/stl\":{\"source\":\"iana\",\"extensions\":[\"stl\"]},\"model/vnd.collada+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"dae\"]},\"model/vnd.dwf\":{\"source\":\"iana\",\"extensions\":[\"dwf\"]},\"model/vnd.flatland.3dml\":{\"source\":\"iana\"},\"model/vnd.gdl\":{\"source\":\"iana\",\"extensions\":[\"gdl\"]},\"model/vnd.gs-gdl\":{\"source\":\"apache\"},\"model/vnd.gs.gdl\":{\"source\":\"iana\"},\"model/vnd.gtw\":{\"source\":\"iana\",\"extensions\":[\"gtw\"]},\"model/vnd.moml+xml\":{\"source\":\"iana\",\"compressible\":true},\"model/vnd.mts\":{\"source\":\"iana\",\"extensions\":[\"mts\"]},\"model/vnd.opengex\":{\"source\":\"iana\",\"extensions\":[\"ogex\"]},\"model/vnd.parasolid.transmit.binary\":{\"source\":\"iana\",\"extensions\":[\"x_b\"]},\"model/vnd.parasolid.transmit.text\":{\"source\":\"iana\",\"extensions\":[\"x_t\"]},\"model/vnd.pytha.pyox\":{\"source\":\"iana\"},\"model/vnd.rosette.annotated-data-model\":{\"source\":\"iana\"},\"model/vnd.sap.vds\":{\"source\":\"iana\",\"extensions\":[\"vds\"]},\"model/vnd.usdz+zip\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"usdz\"]},\"model/vnd.valve.source.compiled-map\":{\"source\":\"iana\",\"extensions\":[\"bsp\"]},\"model/vnd.vtu\":{\"source\":\"iana\",\"extensions\":[\"vtu\"]},\"model/vrml\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"wrl\",\"vrml\"]},\"model/x3d+binary\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3db\",\"x3dbz\"]},\"model/x3d+fastinfoset\":{\"source\":\"iana\",\"extensions\":[\"x3db\"]},\"model/x3d+vrml\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"x3dv\",\"x3dvz\"]},\"model/x3d+xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"x3d\",\"x3dz\"]},\"model/x3d-vrml\":{\"source\":\"iana\",\"extensions\":[\"x3dv\"]},\"multipart/alternative\":{\"source\":\"iana\",\"compressible\":false},\"multipart/appledouble\":{\"source\":\"iana\"},\"multipart/byteranges\":{\"source\":\"iana\"},\"multipart/digest\":{\"source\":\"iana\"},\"multipart/encrypted\":{\"source\":\"iana\",\"compressible\":false},\"multipart/form-data\":{\"source\":\"iana\",\"compressible\":false},\"multipart/header-set\":{\"source\":\"iana\"},\"multipart/mixed\":{\"source\":\"iana\"},\"multipart/multilingual\":{\"source\":\"iana\"},\"multipart/parallel\":{\"source\":\"iana\"},\"multipart/related\":{\"source\":\"iana\",\"compressible\":false},\"multipart/report\":{\"source\":\"iana\"},\"multipart/signed\":{\"source\":\"iana\",\"compressible\":false},\"multipart/vnd.bint.med-plus\":{\"source\":\"iana\"},\"multipart/voice-message\":{\"source\":\"iana\"},\"multipart/x-mixed-replace\":{\"source\":\"iana\"},\"text/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"text/cache-manifest\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"appcache\",\"manifest\"]},\"text/calendar\":{\"source\":\"iana\",\"extensions\":[\"ics\",\"ifb\"]},\"text/calender\":{\"compressible\":true},\"text/cmd\":{\"compressible\":true},\"text/coffeescript\":{\"extensions\":[\"coffee\",\"litcoffee\"]},\"text/cql\":{\"source\":\"iana\"},\"text/cql-expression\":{\"source\":\"iana\"},\"text/cql-identifier\":{\"source\":\"iana\"},\"text/css\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"css\"]},\"text/csv\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"csv\"]},\"text/csv-schema\":{\"source\":\"iana\"},\"text/directory\":{\"source\":\"iana\"},\"text/dns\":{\"source\":\"iana\"},\"text/ecmascript\":{\"source\":\"iana\"},\"text/encaprtp\":{\"source\":\"iana\"},\"text/enriched\":{\"source\":\"iana\"},\"text/fhirpath\":{\"source\":\"iana\"},\"text/flexfec\":{\"source\":\"iana\"},\"text/fwdred\":{\"source\":\"iana\"},\"text/gff3\":{\"source\":\"iana\"},\"text/grammar-ref-list\":{\"source\":\"iana\"},\"text/html\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"html\",\"htm\",\"shtml\"]},\"text/jade\":{\"extensions\":[\"jade\"]},\"text/javascript\":{\"source\":\"iana\",\"compressible\":true},\"text/jcr-cnd\":{\"source\":\"iana\"},\"text/jsx\":{\"compressible\":true,\"extensions\":[\"jsx\"]},\"text/less\":{\"compressible\":true,\"extensions\":[\"less\"]},\"text/markdown\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"markdown\",\"md\"]},\"text/mathml\":{\"source\":\"nginx\",\"extensions\":[\"mml\"]},\"text/mdx\":{\"compressible\":true,\"extensions\":[\"mdx\"]},\"text/mizar\":{\"source\":\"iana\"},\"text/n3\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"n3\"]},\"text/parameters\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/parityfec\":{\"source\":\"iana\"},\"text/plain\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]},\"text/provenance-notation\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/prs.fallenstein.rst\":{\"source\":\"iana\"},\"text/prs.lines.tag\":{\"source\":\"iana\",\"extensions\":[\"dsc\"]},\"text/prs.prop.logic\":{\"source\":\"iana\"},\"text/raptorfec\":{\"source\":\"iana\"},\"text/red\":{\"source\":\"iana\"},\"text/rfc822-headers\":{\"source\":\"iana\"},\"text/richtext\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtx\"]},\"text/rtf\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"rtf\"]},\"text/rtp-enc-aescm128\":{\"source\":\"iana\"},\"text/rtploopback\":{\"source\":\"iana\"},\"text/rtx\":{\"source\":\"iana\"},\"text/sgml\":{\"source\":\"iana\",\"extensions\":[\"sgml\",\"sgm\"]},\"text/shaclc\":{\"source\":\"iana\"},\"text/shex\":{\"source\":\"iana\",\"extensions\":[\"shex\"]},\"text/slim\":{\"extensions\":[\"slim\",\"slm\"]},\"text/spdx\":{\"source\":\"iana\",\"extensions\":[\"spdx\"]},\"text/strings\":{\"source\":\"iana\"},\"text/stylus\":{\"extensions\":[\"stylus\",\"styl\"]},\"text/t140\":{\"source\":\"iana\"},\"text/tab-separated-values\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"tsv\"]},\"text/troff\":{\"source\":\"iana\",\"extensions\":[\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]},\"text/turtle\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"ttl\"]},\"text/ulpfec\":{\"source\":\"iana\"},\"text/uri-list\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"uri\",\"uris\",\"urls\"]},\"text/vcard\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"vcard\"]},\"text/vnd.a\":{\"source\":\"iana\"},\"text/vnd.abc\":{\"source\":\"iana\"},\"text/vnd.ascii-art\":{\"source\":\"iana\"},\"text/vnd.curl\":{\"source\":\"iana\",\"extensions\":[\"curl\"]},\"text/vnd.curl.dcurl\":{\"source\":\"apache\",\"extensions\":[\"dcurl\"]},\"text/vnd.curl.mcurl\":{\"source\":\"apache\",\"extensions\":[\"mcurl\"]},\"text/vnd.curl.scurl\":{\"source\":\"apache\",\"extensions\":[\"scurl\"]},\"text/vnd.debian.copyright\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.dmclientscript\":{\"source\":\"iana\"},\"text/vnd.dvb.subtitle\":{\"source\":\"iana\",\"extensions\":[\"sub\"]},\"text/vnd.esmertec.theme-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.familysearch.gedcom\":{\"source\":\"iana\",\"extensions\":[\"ged\"]},\"text/vnd.ficlab.flt\":{\"source\":\"iana\"},\"text/vnd.fly\":{\"source\":\"iana\",\"extensions\":[\"fly\"]},\"text/vnd.fmi.flexstor\":{\"source\":\"iana\",\"extensions\":[\"flx\"]},\"text/vnd.gml\":{\"source\":\"iana\"},\"text/vnd.graphviz\":{\"source\":\"iana\",\"extensions\":[\"gv\"]},\"text/vnd.hans\":{\"source\":\"iana\"},\"text/vnd.hgl\":{\"source\":\"iana\"},\"text/vnd.in3d.3dml\":{\"source\":\"iana\",\"extensions\":[\"3dml\"]},\"text/vnd.in3d.spot\":{\"source\":\"iana\",\"extensions\":[\"spot\"]},\"text/vnd.iptc.newsml\":{\"source\":\"iana\"},\"text/vnd.iptc.nitf\":{\"source\":\"iana\"},\"text/vnd.latex-z\":{\"source\":\"iana\"},\"text/vnd.motorola.reflex\":{\"source\":\"iana\"},\"text/vnd.ms-mediapackage\":{\"source\":\"iana\"},\"text/vnd.net2phone.commcenter.command\":{\"source\":\"iana\"},\"text/vnd.radisys.msml-basic-layout\":{\"source\":\"iana\"},\"text/vnd.senx.warpscript\":{\"source\":\"iana\"},\"text/vnd.si.uricatalogue\":{\"source\":\"iana\"},\"text/vnd.sosi\":{\"source\":\"iana\"},\"text/vnd.sun.j2me.app-descriptor\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"extensions\":[\"jad\"]},\"text/vnd.trolltech.linguist\":{\"source\":\"iana\",\"charset\":\"UTF-8\"},\"text/vnd.wap.si\":{\"source\":\"iana\"},\"text/vnd.wap.sl\":{\"source\":\"iana\"},\"text/vnd.wap.wml\":{\"source\":\"iana\",\"extensions\":[\"wml\"]},\"text/vnd.wap.wmlscript\":{\"source\":\"iana\",\"extensions\":[\"wmls\"]},\"text/vtt\":{\"source\":\"iana\",\"charset\":\"UTF-8\",\"compressible\":true,\"extensions\":[\"vtt\"]},\"text/x-asm\":{\"source\":\"apache\",\"extensions\":[\"s\",\"asm\"]},\"text/x-c\":{\"source\":\"apache\",\"extensions\":[\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]},\"text/x-component\":{\"source\":\"nginx\",\"extensions\":[\"htc\"]},\"text/x-fortran\":{\"source\":\"apache\",\"extensions\":[\"f\",\"for\",\"f77\",\"f90\"]},\"text/x-gwt-rpc\":{\"compressible\":true},\"text/x-handlebars-template\":{\"extensions\":[\"hbs\"]},\"text/x-java-source\":{\"source\":\"apache\",\"extensions\":[\"java\"]},\"text/x-jquery-tmpl\":{\"compressible\":true},\"text/x-lua\":{\"extensions\":[\"lua\"]},\"text/x-markdown\":{\"compressible\":true,\"extensions\":[\"mkd\"]},\"text/x-nfo\":{\"source\":\"apache\",\"extensions\":[\"nfo\"]},\"text/x-opml\":{\"source\":\"apache\",\"extensions\":[\"opml\"]},\"text/x-org\":{\"compressible\":true,\"extensions\":[\"org\"]},\"text/x-pascal\":{\"source\":\"apache\",\"extensions\":[\"p\",\"pas\"]},\"text/x-processing\":{\"compressible\":true,\"extensions\":[\"pde\"]},\"text/x-sass\":{\"extensions\":[\"sass\"]},\"text/x-scss\":{\"extensions\":[\"scss\"]},\"text/x-setext\":{\"source\":\"apache\",\"extensions\":[\"etx\"]},\"text/x-sfv\":{\"source\":\"apache\",\"extensions\":[\"sfv\"]},\"text/x-suse-ymp\":{\"compressible\":true,\"extensions\":[\"ymp\"]},\"text/x-uuencode\":{\"source\":\"apache\",\"extensions\":[\"uu\"]},\"text/x-vcalendar\":{\"source\":\"apache\",\"extensions\":[\"vcs\"]},\"text/x-vcard\":{\"source\":\"apache\",\"extensions\":[\"vcf\"]},\"text/xml\":{\"source\":\"iana\",\"compressible\":true,\"extensions\":[\"xml\"]},\"text/xml-external-parsed-entity\":{\"source\":\"iana\"},\"text/yaml\":{\"compressible\":true,\"extensions\":[\"yaml\",\"yml\"]},\"video/1d-interleaved-parityfec\":{\"source\":\"iana\"},\"video/3gpp\":{\"source\":\"iana\",\"extensions\":[\"3gp\",\"3gpp\"]},\"video/3gpp-tt\":{\"source\":\"iana\"},\"video/3gpp2\":{\"source\":\"iana\",\"extensions\":[\"3g2\"]},\"video/av1\":{\"source\":\"iana\"},\"video/bmpeg\":{\"source\":\"iana\"},\"video/bt656\":{\"source\":\"iana\"},\"video/celb\":{\"source\":\"iana\"},\"video/dv\":{\"source\":\"iana\"},\"video/encaprtp\":{\"source\":\"iana\"},\"video/ffv1\":{\"source\":\"iana\"},\"video/flexfec\":{\"source\":\"iana\"},\"video/h261\":{\"source\":\"iana\",\"extensions\":[\"h261\"]},\"video/h263\":{\"source\":\"iana\",\"extensions\":[\"h263\"]},\"video/h263-1998\":{\"source\":\"iana\"},\"video/h263-2000\":{\"source\":\"iana\"},\"video/h264\":{\"source\":\"iana\",\"extensions\":[\"h264\"]},\"video/h264-rcdo\":{\"source\":\"iana\"},\"video/h264-svc\":{\"source\":\"iana\"},\"video/h265\":{\"source\":\"iana\"},\"video/iso.segment\":{\"source\":\"iana\",\"extensions\":[\"m4s\"]},\"video/jpeg\":{\"source\":\"iana\",\"extensions\":[\"jpgv\"]},\"video/jpeg2000\":{\"source\":\"iana\"},\"video/jpm\":{\"source\":\"apache\",\"extensions\":[\"jpm\",\"jpgm\"]},\"video/jxsv\":{\"source\":\"iana\"},\"video/mj2\":{\"source\":\"iana\",\"extensions\":[\"mj2\",\"mjp2\"]},\"video/mp1s\":{\"source\":\"iana\"},\"video/mp2p\":{\"source\":\"iana\"},\"video/mp2t\":{\"source\":\"iana\",\"extensions\":[\"ts\"]},\"video/mp4\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mp4\",\"mp4v\",\"mpg4\"]},\"video/mp4v-es\":{\"source\":\"iana\"},\"video/mpeg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]},\"video/mpeg4-generic\":{\"source\":\"iana\"},\"video/mpv\":{\"source\":\"iana\"},\"video/nv\":{\"source\":\"iana\"},\"video/ogg\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"ogv\"]},\"video/parityfec\":{\"source\":\"iana\"},\"video/pointer\":{\"source\":\"iana\"},\"video/quicktime\":{\"source\":\"iana\",\"compressible\":false,\"extensions\":[\"qt\",\"mov\"]},\"video/raptorfec\":{\"source\":\"iana\"},\"video/raw\":{\"source\":\"iana\"},\"video/rtp-enc-aescm128\":{\"source\":\"iana\"},\"video/rtploopback\":{\"source\":\"iana\"},\"video/rtx\":{\"source\":\"iana\"},\"video/scip\":{\"source\":\"iana\"},\"video/smpte291\":{\"source\":\"iana\"},\"video/smpte292m\":{\"source\":\"iana\"},\"video/ulpfec\":{\"source\":\"iana\"},\"video/vc1\":{\"source\":\"iana\"},\"video/vc2\":{\"source\":\"iana\"},\"video/vnd.cctv\":{\"source\":\"iana\"},\"video/vnd.dece.hd\":{\"source\":\"iana\",\"extensions\":[\"uvh\",\"uvvh\"]},\"video/vnd.dece.mobile\":{\"source\":\"iana\",\"extensions\":[\"uvm\",\"uvvm\"]},\"video/vnd.dece.mp4\":{\"source\":\"iana\"},\"video/vnd.dece.pd\":{\"source\":\"iana\",\"extensions\":[\"uvp\",\"uvvp\"]},\"video/vnd.dece.sd\":{\"source\":\"iana\",\"extensions\":[\"uvs\",\"uvvs\"]},\"video/vnd.dece.video\":{\"source\":\"iana\",\"extensions\":[\"uvv\",\"uvvv\"]},\"video/vnd.directv.mpeg\":{\"source\":\"iana\"},\"video/vnd.directv.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dlna.mpeg-tts\":{\"source\":\"iana\"},\"video/vnd.dvb.file\":{\"source\":\"iana\",\"extensions\":[\"dvb\"]},\"video/vnd.fvt\":{\"source\":\"iana\",\"extensions\":[\"fvt\"]},\"video/vnd.hns.video\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.1dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-1010\":{\"source\":\"iana\"},\"video/vnd.iptvforum.2dparityfec-2005\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsavc\":{\"source\":\"iana\"},\"video/vnd.iptvforum.ttsmpeg2\":{\"source\":\"iana\"},\"video/vnd.motorola.video\":{\"source\":\"iana\"},\"video/vnd.motorola.videop\":{\"source\":\"iana\"},\"video/vnd.mpegurl\":{\"source\":\"iana\",\"extensions\":[\"mxu\",\"m4u\"]},\"video/vnd.ms-playready.media.pyv\":{\"source\":\"iana\",\"extensions\":[\"pyv\"]},\"video/vnd.nokia.interleaved-multimedia\":{\"source\":\"iana\"},\"video/vnd.nokia.mp4vr\":{\"source\":\"iana\"},\"video/vnd.nokia.videovoip\":{\"source\":\"iana\"},\"video/vnd.objectvideo\":{\"source\":\"iana\"},\"video/vnd.radgamettools.bink\":{\"source\":\"iana\"},\"video/vnd.radgamettools.smacker\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg1\":{\"source\":\"iana\"},\"video/vnd.sealed.mpeg4\":{\"source\":\"iana\"},\"video/vnd.sealed.swf\":{\"source\":\"iana\"},\"video/vnd.sealedmedia.softseal.mov\":{\"source\":\"iana\"},\"video/vnd.uvvu.mp4\":{\"source\":\"iana\",\"extensions\":[\"uvu\",\"uvvu\"]},\"video/vnd.vivo\":{\"source\":\"iana\",\"extensions\":[\"viv\"]},\"video/vnd.youtube.yt\":{\"source\":\"iana\"},\"video/vp8\":{\"source\":\"iana\"},\"video/vp9\":{\"source\":\"iana\"},\"video/webm\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"webm\"]},\"video/x-f4v\":{\"source\":\"apache\",\"extensions\":[\"f4v\"]},\"video/x-fli\":{\"source\":\"apache\",\"extensions\":[\"fli\"]},\"video/x-flv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"flv\"]},\"video/x-m4v\":{\"source\":\"apache\",\"extensions\":[\"m4v\"]},\"video/x-matroska\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"mkv\",\"mk3d\",\"mks\"]},\"video/x-mng\":{\"source\":\"apache\",\"extensions\":[\"mng\"]},\"video/x-ms-asf\":{\"source\":\"apache\",\"extensions\":[\"asf\",\"asx\"]},\"video/x-ms-vob\":{\"source\":\"apache\",\"extensions\":[\"vob\"]},\"video/x-ms-wm\":{\"source\":\"apache\",\"extensions\":[\"wm\"]},\"video/x-ms-wmv\":{\"source\":\"apache\",\"compressible\":false,\"extensions\":[\"wmv\"]},\"video/x-ms-wmx\":{\"source\":\"apache\",\"extensions\":[\"wmx\"]},\"video/x-ms-wvx\":{\"source\":\"apache\",\"extensions\":[\"wvx\"]},\"video/x-msvideo\":{\"source\":\"apache\",\"extensions\":[\"avi\"]},\"video/x-sgi-movie\":{\"source\":\"apache\",\"extensions\":[\"movie\"]},\"video/x-smv\":{\"source\":\"apache\",\"extensions\":[\"smv\"]},\"x-conference/x-cooltalk\":{\"source\":\"apache\",\"extensions\":[\"ice\"]},\"x-shader/x-fragment\":{\"compressible\":true},\"x-shader/x-vertex\":{\"compressible\":true}}');\n            }\n        }, n = {};\n        function a(t) {\n            var i = n[t];\n            if (void 0 !== i) return i.exports;\n            var o = n[t] = {\n                exports: {}\n            };\n            return e[t](o, o.exports, a), o.exports;\n        }\n        a.n = (e)=>{\n            var n = e && e.__esModule ? ()=>e.default : ()=>e;\n            return a.d(n, {\n                a: n\n            }), n;\n        }, a.d = (e, n)=>{\n            for(var t in n)a.o(n, t) && !a.o(e, t) && Object.defineProperty(e, t, {\n                enumerable: !0,\n                get: n[t]\n            });\n        }, a.o = (e, n)=>Object.prototype.hasOwnProperty.call(e, n), a.r = (e)=>{\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            });\n        };\n        var t = {};\n        return (()=>{\n            \"use strict\";\n            a.r(t), a.d(t, {\n                createClient: ()=>Xa,\n                createGlobalOptions: ()=>Ea\n            });\n            var e = {};\n            function n(e, n) {\n                return function() {\n                    return e.apply(n, arguments);\n                };\n            }\n            a.r(e), a.d(e, {\n                hasBrowserEnv: ()=>te,\n                hasStandardBrowserEnv: ()=>ie,\n                hasStandardBrowserWebWorkerEnv: ()=>se\n            });\n            const { toString: i } = Object.prototype, { getPrototypeOf: o } = Object, s = (r = Object.create(null), (e)=>{\n                const n = i.call(e);\n                return r[n] || (r[n] = n.slice(8, -1).toLowerCase());\n            });\n            var r;\n            const c = (e)=>(e = e.toLowerCase(), (n)=>s(n) === e), p = (e)=>(n)=>typeof n === e, { isArray: l } = Array, u = p(\"undefined\"), d = c(\"ArrayBuffer\"), m = p(\"string\"), f = p(\"function\"), x = p(\"number\"), v = (e)=>null !== e && \"object\" == typeof e, h = (e)=>{\n                if (\"object\" !== s(e)) return !1;\n                const n = o(e);\n                return !(null !== n && n !== Object.prototype && null !== Object.getPrototypeOf(n) || Symbol.toStringTag in e || Symbol.iterator in e);\n            }, b = c(\"Date\"), g = c(\"File\"), y = c(\"Blob\"), w = c(\"FileList\"), j = c(\"URLSearchParams\");\n            function k(e, n, { allOwnKeys: a = !1 } = {}) {\n                if (null == e) return;\n                let t, i;\n                if (\"object\" != typeof e && (e = [\n                    e\n                ]), l(e)) for(t = 0, i = e.length; t < i; t++)n.call(null, e[t], t, e);\n                else {\n                    const i = a ? Object.getOwnPropertyNames(e) : Object.keys(e), o = i.length;\n                    let s;\n                    for(t = 0; t < o; t++)s = i[t], n.call(null, e[s], s, e);\n                }\n            }\n            function S(e, n) {\n                n = n.toLowerCase();\n                const a = Object.keys(e);\n                let t, i = a.length;\n                for(; i-- > 0;)if (t = a[i], n === t.toLowerCase()) return t;\n                return null;\n            }\n            const O = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof self ? self :  false ? 0 : global, _ = (e)=>!u(e) && e !== O, E = (A = \"undefined\" != typeof Uint8Array && o(Uint8Array), (e)=>A && e instanceof A);\n            var A;\n            const R = c(\"HTMLFormElement\"), T = (({ hasOwnProperty: e })=>(n, a)=>e.call(n, a))(Object.prototype), C = c(\"RegExp\"), L = (e, n)=>{\n                const a = Object.getOwnPropertyDescriptors(e), t = {};\n                k(a, (a, i)=>{\n                    let o;\n                    !1 !== (o = n(a, i, e)) && (t[i] = o || a);\n                }), Object.defineProperties(e, t);\n            }, P = \"abcdefghijklmnopqrstuvwxyz\", F = \"0123456789\", z = {\n                DIGIT: F,\n                ALPHA: P,\n                ALPHA_DIGIT: P + P.toUpperCase() + F\n            }, U = c(\"AsyncFunction\"), B = {\n                isArray: l,\n                isArrayBuffer: d,\n                isBuffer: function(e) {\n                    return null !== e && !u(e) && null !== e.constructor && !u(e.constructor) && f(e.constructor.isBuffer) && e.constructor.isBuffer(e);\n                },\n                isFormData: (e)=>{\n                    let n;\n                    return e && (\"function\" == typeof FormData && e instanceof FormData || f(e.append) && (\"formdata\" === (n = s(e)) || \"object\" === n && f(e.toString) && \"[object FormData]\" === e.toString()));\n                },\n                isArrayBufferView: function(e) {\n                    let n;\n                    return n = \"undefined\" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && d(e.buffer), n;\n                },\n                isString: m,\n                isNumber: x,\n                isBoolean: (e)=>!0 === e || !1 === e,\n                isObject: v,\n                isPlainObject: h,\n                isUndefined: u,\n                isDate: b,\n                isFile: g,\n                isBlob: y,\n                isRegExp: C,\n                isFunction: f,\n                isStream: (e)=>v(e) && f(e.pipe),\n                isURLSearchParams: j,\n                isTypedArray: E,\n                isFileList: w,\n                forEach: k,\n                merge: function e() {\n                    const { caseless: n } = _(this) && this || {}, a = {}, t = (t, i)=>{\n                        const o = n && S(a, i) || i;\n                        h(a[o]) && h(t) ? a[o] = e(a[o], t) : h(t) ? a[o] = e({}, t) : l(t) ? a[o] = t.slice() : a[o] = t;\n                    };\n                    for(let e = 0, n = arguments.length; e < n; e++)arguments[e] && k(arguments[e], t);\n                    return a;\n                },\n                extend: (e, a, t, { allOwnKeys: i } = {})=>(k(a, (a, i)=>{\n                        t && f(a) ? e[i] = n(a, t) : e[i] = a;\n                    }, {\n                        allOwnKeys: i\n                    }), e),\n                trim: (e)=>e.trim ? e.trim() : e.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\"),\n                stripBOM: (e)=>(65279 === e.charCodeAt(0) && (e = e.slice(1)), e),\n                inherits: (e, n, a, t)=>{\n                    e.prototype = Object.create(n.prototype, t), e.prototype.constructor = e, Object.defineProperty(e, \"super\", {\n                        value: n.prototype\n                    }), a && Object.assign(e.prototype, a);\n                },\n                toFlatObject: (e, n, a, t)=>{\n                    let i, s, r;\n                    const c = {};\n                    if (n = n || {}, null == e) return n;\n                    do {\n                        for(i = Object.getOwnPropertyNames(e), s = i.length; s-- > 0;)r = i[s], t && !t(r, e, n) || c[r] || (n[r] = e[r], c[r] = !0);\n                        e = !1 !== a && o(e);\n                    }while (e && (!a || a(e, n)) && e !== Object.prototype);\n                    return n;\n                },\n                kindOf: s,\n                kindOfTest: c,\n                endsWith: (e, n, a)=>{\n                    e = String(e), (void 0 === a || a > e.length) && (a = e.length), a -= n.length;\n                    const t = e.indexOf(n, a);\n                    return -1 !== t && t === a;\n                },\n                toArray: (e)=>{\n                    if (!e) return null;\n                    if (l(e)) return e;\n                    let n = e.length;\n                    if (!x(n)) return null;\n                    const a = new Array(n);\n                    for(; n-- > 0;)a[n] = e[n];\n                    return a;\n                },\n                forEachEntry: (e, n)=>{\n                    const a = (e && e[Symbol.iterator]).call(e);\n                    let t;\n                    for(; (t = a.next()) && !t.done;){\n                        const a = t.value;\n                        n.call(e, a[0], a[1]);\n                    }\n                },\n                matchAll: (e, n)=>{\n                    let a;\n                    const t = [];\n                    for(; null !== (a = e.exec(n));)t.push(a);\n                    return t;\n                },\n                isHTMLForm: R,\n                hasOwnProperty: T,\n                hasOwnProp: T,\n                reduceDescriptors: L,\n                freezeMethods: (e)=>{\n                    L(e, (n, a)=>{\n                        if (f(e) && -1 !== [\n                            \"arguments\",\n                            \"caller\",\n                            \"callee\"\n                        ].indexOf(a)) return !1;\n                        const t = e[a];\n                        f(t) && (n.enumerable = !1, \"writable\" in n ? n.writable = !1 : n.set || (n.set = ()=>{\n                            throw Error(\"Can not rewrite read-only method '\" + a + \"'\");\n                        }));\n                    });\n                },\n                toObjectSet: (e, n)=>{\n                    const a = {}, t = (e)=>{\n                        e.forEach((e)=>{\n                            a[e] = !0;\n                        });\n                    };\n                    return l(e) ? t(e) : t(String(e).split(n)), a;\n                },\n                toCamelCase: (e)=>e.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g, function(e, n, a) {\n                        return n.toUpperCase() + a;\n                    }),\n                noop: ()=>{},\n                toFiniteNumber: (e, n)=>(e = +e, Number.isFinite(e) ? e : n),\n                findKey: S,\n                global: O,\n                isContextDefined: _,\n                ALPHABET: z,\n                generateString: (e = 16, n = z.ALPHA_DIGIT)=>{\n                    let a = \"\";\n                    const { length: t } = n;\n                    for(; e--;)a += n[Math.random() * t | 0];\n                    return a;\n                },\n                isSpecCompliantForm: function(e) {\n                    return !!(e && f(e.append) && \"FormData\" === e[Symbol.toStringTag] && e[Symbol.iterator]);\n                },\n                toJSONObject: (e)=>{\n                    const n = new Array(10), a = (e, t)=>{\n                        if (v(e)) {\n                            if (n.indexOf(e) >= 0) return;\n                            if (!(\"toJSON\" in e)) {\n                                n[t] = e;\n                                const i = l(e) ? [] : {};\n                                return k(e, (e, n)=>{\n                                    const o = a(e, t + 1);\n                                    !u(o) && (i[n] = o);\n                                }), n[t] = void 0, i;\n                            }\n                        }\n                        return e;\n                    };\n                    return a(e, 0);\n                },\n                isAsyncFn: U,\n                isThenable: (e)=>e && (v(e) || f(e)) && f(e.then) && f(e.catch)\n            };\n            function N(e, n, a, t, i) {\n                Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = (new Error).stack, this.message = e, this.name = \"AxiosError\", n && (this.code = n), a && (this.config = a), t && (this.request = t), i && (this.response = i);\n            }\n            B.inherits(N, Error, {\n                toJSON: function() {\n                    return {\n                        message: this.message,\n                        name: this.name,\n                        description: this.description,\n                        number: this.number,\n                        fileName: this.fileName,\n                        lineNumber: this.lineNumber,\n                        columnNumber: this.columnNumber,\n                        stack: this.stack,\n                        config: B.toJSONObject(this.config),\n                        code: this.code,\n                        status: this.response && this.response.status ? this.response.status : null\n                    };\n                }\n            });\n            const q = N.prototype, I = {};\n            [\n                \"ERR_BAD_OPTION_VALUE\",\n                \"ERR_BAD_OPTION\",\n                \"ECONNABORTED\",\n                \"ETIMEDOUT\",\n                \"ERR_NETWORK\",\n                \"ERR_FR_TOO_MANY_REDIRECTS\",\n                \"ERR_DEPRECATED\",\n                \"ERR_BAD_RESPONSE\",\n                \"ERR_BAD_REQUEST\",\n                \"ERR_CANCELED\",\n                \"ERR_NOT_SUPPORT\",\n                \"ERR_INVALID_URL\"\n            ].forEach((e)=>{\n                I[e] = {\n                    value: e\n                };\n            }), Object.defineProperties(N, I), Object.defineProperty(q, \"isAxiosError\", {\n                value: !0\n            }), N.from = (e, n, a, t, i, o)=>{\n                const s = Object.create(q);\n                return B.toFlatObject(e, s, function(e) {\n                    return e !== Error.prototype;\n                }, (e)=>\"isAxiosError\" !== e), N.call(s, e.message, n, a, t, i), s.cause = e, s.name = e.name, o && Object.assign(s, o), s;\n            };\n            const D = N, M = a(4970);\n            function W(e) {\n                return B.isPlainObject(e) || B.isArray(e);\n            }\n            function H(e) {\n                return B.endsWith(e, \"[]\") ? e.slice(0, -2) : e;\n            }\n            function $(e, n, a) {\n                return e ? e.concat(n).map(function(e, n) {\n                    return e = H(e), !a && n ? \"[\" + e + \"]\" : e;\n                }).join(a ? \".\" : \"\") : n;\n            }\n            const G = B.toFlatObject(B, {}, null, function(e) {\n                return /^is[A-Z]/.test(e);\n            }), V = function(e, n, a) {\n                if (!B.isObject(e)) throw new TypeError(\"target must be an object\");\n                n = n || new (M || FormData);\n                const t = (a = B.toFlatObject(a, {\n                    metaTokens: !0,\n                    dots: !1,\n                    indexes: !1\n                }, !1, function(e, n) {\n                    return !B.isUndefined(n[e]);\n                })).metaTokens, i = a.visitor || p, o = a.dots, s = a.indexes, r = (a.Blob || \"undefined\" != typeof Blob && Blob) && B.isSpecCompliantForm(n);\n                if (!B.isFunction(i)) throw new TypeError(\"visitor must be a function\");\n                function c(e) {\n                    if (null === e) return \"\";\n                    if (B.isDate(e)) return e.toISOString();\n                    if (!r && B.isBlob(e)) throw new D(\"Blob is not supported. Use a Buffer instead.\");\n                    return B.isArrayBuffer(e) || B.isTypedArray(e) ? r && \"function\" == typeof Blob ? new Blob([\n                        e\n                    ]) : Buffer.from(e) : e;\n                }\n                function p(e, a, i) {\n                    let r = e;\n                    if (e && !i && \"object\" == typeof e) {\n                        if (B.endsWith(a, \"{}\")) a = t ? a : a.slice(0, -2), e = JSON.stringify(e);\n                        else if (B.isArray(e) && function(e) {\n                            return B.isArray(e) && !e.some(W);\n                        }(e) || (B.isFileList(e) || B.endsWith(a, \"[]\")) && (r = B.toArray(e))) return a = H(a), r.forEach(function(e, t) {\n                            !B.isUndefined(e) && null !== e && n.append(!0 === s ? $([\n                                a\n                            ], t, o) : null === s ? a : a + \"[]\", c(e));\n                        }), !1;\n                    }\n                    return !!W(e) || (n.append($(i, a, o), c(e)), !1);\n                }\n                const l = [], u = Object.assign(G, {\n                    defaultVisitor: p,\n                    convertValue: c,\n                    isVisitable: W\n                });\n                if (!B.isObject(e)) throw new TypeError(\"data must be an object\");\n                return function e(a, t) {\n                    if (!B.isUndefined(a)) {\n                        if (-1 !== l.indexOf(a)) throw Error(\"Circular reference detected in \" + t.join(\".\"));\n                        l.push(a), B.forEach(a, function(a, o) {\n                            !0 === (!(B.isUndefined(a) || null === a) && i.call(n, a, B.isString(o) ? o.trim() : o, t, u)) && e(a, t ? t.concat(o) : [\n                                o\n                            ]);\n                        }), l.pop();\n                    }\n                }(e), n;\n            };\n            function J(e) {\n                const n = {\n                    \"!\": \"%21\",\n                    \"'\": \"%27\",\n                    \"(\": \"%28\",\n                    \")\": \"%29\",\n                    \"~\": \"%7E\",\n                    \"%20\": \"+\",\n                    \"%00\": \"\\x00\"\n                };\n                return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(e) {\n                    return n[e];\n                });\n            }\n            function K(e, n) {\n                this._pairs = [], e && V(e, this, n);\n            }\n            const Q = K.prototype;\n            Q.append = function(e, n) {\n                this._pairs.push([\n                    e,\n                    n\n                ]);\n            }, Q.toString = function(e) {\n                const n = e ? function(n) {\n                    return e.call(this, n, J);\n                } : J;\n                return this._pairs.map(function(e) {\n                    return n(e[0]) + \"=\" + n(e[1]);\n                }, \"\").join(\"&\");\n            };\n            const Y = K;\n            function X(e) {\n                return encodeURIComponent(e).replace(/%3A/gi, \":\").replace(/%24/g, \"$\").replace(/%2C/gi, \",\").replace(/%20/g, \"+\").replace(/%5B/gi, \"[\").replace(/%5D/gi, \"]\");\n            }\n            function Z(e, n, a) {\n                if (!n) return e;\n                const t = a && a.encode || X, i = a && a.serialize;\n                let o;\n                if (o = i ? i(n, a) : B.isURLSearchParams(n) ? n.toString() : new Y(n, a).toString(t), o) {\n                    const n = e.indexOf(\"#\");\n                    -1 !== n && (e = e.slice(0, n)), e += (-1 === e.indexOf(\"?\") ? \"?\" : \"&\") + o;\n                }\n                return e;\n            }\n            const ee = class {\n                constructor(){\n                    this.handlers = [];\n                }\n                use(e, n, a) {\n                    return this.handlers.push({\n                        fulfilled: e,\n                        rejected: n,\n                        synchronous: !!a && a.synchronous,\n                        runWhen: a ? a.runWhen : null\n                    }), this.handlers.length - 1;\n                }\n                eject(e) {\n                    this.handlers[e] && (this.handlers[e] = null);\n                }\n                clear() {\n                    this.handlers && (this.handlers = []);\n                }\n                forEach(e) {\n                    B.forEach(this.handlers, function(n) {\n                        null !== n && e(n);\n                    });\n                }\n            }, ne = {\n                silentJSONParsing: !0,\n                forcedJSONParsing: !0,\n                clarifyTimeoutError: !1\n            }, ae = {\n                isNode: !0,\n                classes: {\n                    URLSearchParams: a(7310).URLSearchParams,\n                    FormData: M,\n                    Blob: \"undefined\" != typeof Blob && Blob || null\n                },\n                protocols: [\n                    \"http\",\n                    \"https\",\n                    \"file\",\n                    \"data\"\n                ]\n            }, te =  false && 0, ie = (oe = \"undefined\" != typeof navigator && navigator.product, te && [\n                \"ReactNative\",\n                \"NativeScript\",\n                \"NS\"\n            ].indexOf(oe) < 0);\n            var oe;\n            const se = \"undefined\" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && \"function\" == typeof self.importScripts, re = {\n                ...e,\n                ...ae\n            }, ce = function(e) {\n                function n(e, a, t, i) {\n                    let o = e[i++];\n                    if (\"__proto__\" === o) return !0;\n                    const s = Number.isFinite(+o), r = i >= e.length;\n                    return o = !o && B.isArray(t) ? t.length : o, r ? (B.hasOwnProp(t, o) ? t[o] = [\n                        t[o],\n                        a\n                    ] : t[o] = a, !s) : (t[o] && B.isObject(t[o]) || (t[o] = []), n(e, a, t[o], i) && B.isArray(t[o]) && (t[o] = function(e) {\n                        const n = {}, a = Object.keys(e);\n                        let t;\n                        const i = a.length;\n                        let o;\n                        for(t = 0; t < i; t++)o = a[t], n[o] = e[o];\n                        return n;\n                    }(t[o])), !s);\n                }\n                if (B.isFormData(e) && B.isFunction(e.entries)) {\n                    const a = {};\n                    return B.forEachEntry(e, (e, t)=>{\n                        n(function(e) {\n                            return B.matchAll(/\\w+|\\[(\\w*)]/g, e).map((e)=>\"[]\" === e[0] ? \"\" : e[1] || e[0]);\n                        }(e), t, a, 0);\n                    }), a;\n                }\n                return null;\n            }, pe = {\n                transitional: ne,\n                adapter: [\n                    \"xhr\",\n                    \"http\"\n                ],\n                transformRequest: [\n                    function(e, n) {\n                        const a = n.getContentType() || \"\", t = a.indexOf(\"application/json\") > -1, i = B.isObject(e);\n                        if (i && B.isHTMLForm(e) && (e = new FormData(e)), B.isFormData(e)) return t && t ? JSON.stringify(ce(e)) : e;\n                        if (B.isArrayBuffer(e) || B.isBuffer(e) || B.isStream(e) || B.isFile(e) || B.isBlob(e)) return e;\n                        if (B.isArrayBufferView(e)) return e.buffer;\n                        if (B.isURLSearchParams(e)) return n.setContentType(\"application/x-www-form-urlencoded;charset=utf-8\", !1), e.toString();\n                        let o;\n                        if (i) {\n                            if (a.indexOf(\"application/x-www-form-urlencoded\") > -1) return (function(e, n) {\n                                return V(e, new re.classes.URLSearchParams, Object.assign({\n                                    visitor: function(e, n, a, t) {\n                                        return re.isNode && B.isBuffer(e) ? (this.append(n, e.toString(\"base64\")), !1) : t.defaultVisitor.apply(this, arguments);\n                                    }\n                                }, n));\n                            })(e, this.formSerializer).toString();\n                            if ((o = B.isFileList(e)) || a.indexOf(\"multipart/form-data\") > -1) {\n                                const n = this.env && this.env.FormData;\n                                return V(o ? {\n                                    \"files[]\": e\n                                } : e, n && new n, this.formSerializer);\n                            }\n                        }\n                        return i || t ? (n.setContentType(\"application/json\", !1), function(e, n, a) {\n                            if (B.isString(e)) try {\n                                return (0, JSON.parse)(e), B.trim(e);\n                            } catch (e) {\n                                if (\"SyntaxError\" !== e.name) throw e;\n                            }\n                            return (0, JSON.stringify)(e);\n                        }(e)) : e;\n                    }\n                ],\n                transformResponse: [\n                    function(e) {\n                        const n = this.transitional || pe.transitional, a = n && n.forcedJSONParsing, t = \"json\" === this.responseType;\n                        if (e && B.isString(e) && (a && !this.responseType || t)) {\n                            const a = !(n && n.silentJSONParsing) && t;\n                            try {\n                                return JSON.parse(e);\n                            } catch (e) {\n                                if (a) {\n                                    if (\"SyntaxError\" === e.name) throw D.from(e, D.ERR_BAD_RESPONSE, this, null, this.response);\n                                    throw e;\n                                }\n                            }\n                        }\n                        return e;\n                    }\n                ],\n                timeout: 0,\n                xsrfCookieName: \"XSRF-TOKEN\",\n                xsrfHeaderName: \"X-XSRF-TOKEN\",\n                maxContentLength: -1,\n                maxBodyLength: -1,\n                env: {\n                    FormData: re.classes.FormData,\n                    Blob: re.classes.Blob\n                },\n                validateStatus: function(e) {\n                    return e >= 200 && e < 300;\n                },\n                headers: {\n                    common: {\n                        Accept: \"application/json, text/plain, */*\",\n                        \"Content-Type\": void 0\n                    }\n                }\n            };\n            B.forEach([\n                \"delete\",\n                \"get\",\n                \"head\",\n                \"post\",\n                \"put\",\n                \"patch\"\n            ], (e)=>{\n                pe.headers[e] = {};\n            });\n            const le = pe, ue = B.toObjectSet([\n                \"age\",\n                \"authorization\",\n                \"content-length\",\n                \"content-type\",\n                \"etag\",\n                \"expires\",\n                \"from\",\n                \"host\",\n                \"if-modified-since\",\n                \"if-unmodified-since\",\n                \"last-modified\",\n                \"location\",\n                \"max-forwards\",\n                \"proxy-authorization\",\n                \"referer\",\n                \"retry-after\",\n                \"user-agent\"\n            ]), de = Symbol(\"internals\");\n            function me(e) {\n                return e && String(e).trim().toLowerCase();\n            }\n            function fe(e) {\n                return !1 === e || null == e ? e : B.isArray(e) ? e.map(fe) : String(e);\n            }\n            function xe(e, n, a, t, i) {\n                return B.isFunction(t) ? t.call(this, n, a) : (i && (n = a), B.isString(n) ? B.isString(t) ? -1 !== n.indexOf(t) : B.isRegExp(t) ? t.test(n) : void 0 : void 0);\n            }\n            class ve {\n                constructor(e){\n                    e && this.set(e);\n                }\n                set(e, n, a) {\n                    const t = this;\n                    function i(e, n, a) {\n                        const i = me(n);\n                        if (!i) throw new Error(\"header name must be a non-empty string\");\n                        const o = B.findKey(t, i);\n                        (!o || void 0 === t[o] || !0 === a || void 0 === a && !1 !== t[o]) && (t[o || n] = fe(e));\n                    }\n                    const o = (e, n)=>B.forEach(e, (e, a)=>i(e, a, n));\n                    return B.isPlainObject(e) || e instanceof this.constructor ? o(e, n) : B.isString(e) && (e = e.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim()) ? o(((e)=>{\n                        const n = {};\n                        let a, t, i;\n                        return e && e.split(\"\\n\").forEach(function(e) {\n                            i = e.indexOf(\":\"), a = e.substring(0, i).trim().toLowerCase(), t = e.substring(i + 1).trim(), !a || n[a] && ue[a] || (\"set-cookie\" === a ? n[a] ? n[a].push(t) : n[a] = [\n                                t\n                            ] : n[a] = n[a] ? n[a] + \", \" + t : t);\n                        }), n;\n                    })(e), n) : null != e && i(n, e, a), this;\n                }\n                get(e, n) {\n                    if (e = me(e)) {\n                        const a = B.findKey(this, e);\n                        if (a) {\n                            const e = this[a];\n                            if (!n) return e;\n                            if (!0 === n) return function(e) {\n                                const n = Object.create(null), a = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n                                let t;\n                                for(; t = a.exec(e);)n[t[1]] = t[2];\n                                return n;\n                            }(e);\n                            if (B.isFunction(n)) return n.call(this, e, a);\n                            if (B.isRegExp(n)) return n.exec(e);\n                            throw new TypeError(\"parser must be boolean|regexp|function\");\n                        }\n                    }\n                }\n                has(e, n) {\n                    if (e = me(e)) {\n                        const a = B.findKey(this, e);\n                        return !(!a || void 0 === this[a] || n && !xe(0, this[a], a, n));\n                    }\n                    return !1;\n                }\n                delete(e, n) {\n                    const a = this;\n                    let t = !1;\n                    function i(e) {\n                        if (e = me(e)) {\n                            const i = B.findKey(a, e);\n                            !i || n && !xe(0, a[i], i, n) || (delete a[i], t = !0);\n                        }\n                    }\n                    return B.isArray(e) ? e.forEach(i) : i(e), t;\n                }\n                clear(e) {\n                    const n = Object.keys(this);\n                    let a = n.length, t = !1;\n                    for(; a--;){\n                        const i = n[a];\n                        e && !xe(0, this[i], i, e, !0) || (delete this[i], t = !0);\n                    }\n                    return t;\n                }\n                normalize(e) {\n                    const n = this, a = {};\n                    return B.forEach(this, (t, i)=>{\n                        const o = B.findKey(a, i);\n                        if (o) return n[o] = fe(t), void delete n[i];\n                        const s = e ? function(e) {\n                            return e.trim().toLowerCase().replace(/([a-z\\d])(\\w*)/g, (e, n, a)=>n.toUpperCase() + a);\n                        }(i) : String(i).trim();\n                        s !== i && delete n[i], n[s] = fe(t), a[s] = !0;\n                    }), this;\n                }\n                concat(...e) {\n                    return this.constructor.concat(this, ...e);\n                }\n                toJSON(e) {\n                    const n = Object.create(null);\n                    return B.forEach(this, (a, t)=>{\n                        null != a && !1 !== a && (n[t] = e && B.isArray(a) ? a.join(\", \") : a);\n                    }), n;\n                }\n                [Symbol.iterator]() {\n                    return Object.entries(this.toJSON())[Symbol.iterator]();\n                }\n                toString() {\n                    return Object.entries(this.toJSON()).map(([e, n])=>e + \": \" + n).join(\"\\n\");\n                }\n                get [Symbol.toStringTag]() {\n                    return \"AxiosHeaders\";\n                }\n                static from(e) {\n                    return e instanceof this ? e : new this(e);\n                }\n                static concat(e, ...n) {\n                    const a = new this(e);\n                    return n.forEach((e)=>a.set(e)), a;\n                }\n                static accessor(e) {\n                    const n = (this[de] = this[de] = {\n                        accessors: {}\n                    }).accessors, a = this.prototype;\n                    function t(e) {\n                        const t = me(e);\n                        n[t] || (function(e, n) {\n                            const a = B.toCamelCase(\" \" + n);\n                            [\n                                \"get\",\n                                \"set\",\n                                \"has\"\n                            ].forEach((t)=>{\n                                Object.defineProperty(e, t + a, {\n                                    value: function(e, a, i) {\n                                        return this[t].call(this, n, e, a, i);\n                                    },\n                                    configurable: !0\n                                });\n                            });\n                        }(a, e), n[t] = !0);\n                    }\n                    return B.isArray(e) ? e.forEach(t) : t(e), this;\n                }\n            }\n            ve.accessor([\n                \"Content-Type\",\n                \"Content-Length\",\n                \"Accept\",\n                \"Accept-Encoding\",\n                \"User-Agent\",\n                \"Authorization\"\n            ]), B.reduceDescriptors(ve.prototype, ({ value: e }, n)=>{\n                let a = n[0].toUpperCase() + n.slice(1);\n                return {\n                    get: ()=>e,\n                    set (e) {\n                        this[a] = e;\n                    }\n                };\n            }), B.freezeMethods(ve);\n            const he = ve;\n            function be(e, n) {\n                const a = this || le, t = n || a, i = he.from(t.headers);\n                let o = t.data;\n                return B.forEach(e, function(e) {\n                    o = e.call(a, o, i.normalize(), n ? n.status : void 0);\n                }), i.normalize(), o;\n            }\n            function ge(e) {\n                return !(!e || !e.__CANCEL__);\n            }\n            function ye(e, n, a) {\n                D.call(this, null == e ? \"canceled\" : e, D.ERR_CANCELED, n, a), this.name = \"CanceledError\";\n            }\n            B.inherits(ye, D, {\n                __CANCEL__: !0\n            });\n            const we = ye;\n            function je(e, n, a) {\n                const t = a.config.validateStatus;\n                a.status && t && !t(a.status) ? n(new D(\"Request failed with status code \" + a.status, [\n                    D.ERR_BAD_REQUEST,\n                    D.ERR_BAD_RESPONSE\n                ][Math.floor(a.status / 100) - 4], a.config, a.request, a)) : e(a);\n            }\n            function ke(e, n) {\n                return e && !/^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(n) ? function(e, n) {\n                    return n ? e.replace(/\\/?\\/$/, \"\") + \"/\" + n.replace(/^\\/+/, \"\") : e;\n                }(e, n) : n;\n            }\n            var Se = a(1104), Oe = a(3685), _e = a(5687), Ee = a(3837), Ae = a(4095);\n            const Re = __webpack_require__(/*! zlib */ \"zlib\"), Te = \"1.6.4\";\n            function Ce(e) {\n                const n = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(e);\n                return n && n[1] || \"\";\n            }\n            const Le = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n            var Pe = a(2781);\n            const Fe = function(e, n) {\n                e = e || 10;\n                const a = new Array(e), t = new Array(e);\n                let i, o = 0, s = 0;\n                return n = void 0 !== n ? n : 1e3, function(r) {\n                    const c = Date.now(), p = t[s];\n                    i || (i = c), a[o] = r, t[o] = c;\n                    let l = s, u = 0;\n                    for(; l !== o;)u += a[l++], l %= e;\n                    if (o = (o + 1) % e, o === s && (s = (s + 1) % e), c - i < n) return;\n                    const d = p && c - p;\n                    return d ? Math.round(1e3 * u / d) : void 0;\n                };\n            }, ze = Symbol(\"internals\");\n            class Ue extends Pe.Transform {\n                constructor(e){\n                    super({\n                        readableHighWaterMark: (e = B.toFlatObject(e, {\n                            maxRate: 0,\n                            chunkSize: 65536,\n                            minChunkSize: 100,\n                            timeWindow: 500,\n                            ticksRate: 2,\n                            samplesCount: 15\n                        }, null, (e, n)=>!B.isUndefined(n[e]))).chunkSize\n                    });\n                    const n = this, a = this[ze] = {\n                        length: e.length,\n                        timeWindow: e.timeWindow,\n                        ticksRate: e.ticksRate,\n                        chunkSize: e.chunkSize,\n                        maxRate: e.maxRate,\n                        minChunkSize: e.minChunkSize,\n                        bytesSeen: 0,\n                        isCaptured: !1,\n                        notifiedBytesLoaded: 0,\n                        ts: Date.now(),\n                        bytes: 0,\n                        onReadCallback: null\n                    }, t = Fe(a.ticksRate * e.samplesCount, a.timeWindow);\n                    this.on(\"newListener\", (e)=>{\n                        \"progress\" === e && (a.isCaptured || (a.isCaptured = !0));\n                    });\n                    let i = 0;\n                    a.updateProgress = function(e, n) {\n                        let a = 0;\n                        const t = 1e3 / n;\n                        let i = null;\n                        return function(n, o) {\n                            const s = Date.now();\n                            if (n || s - a > t) return i && (clearTimeout(i), i = null), a = s, e.apply(null, o);\n                            i || (i = setTimeout(()=>(i = null, a = Date.now(), e.apply(null, o)), t - (s - a)));\n                        };\n                    }(function() {\n                        const e = a.length, o = a.bytesSeen, s = o - i;\n                        if (!s || n.destroyed) return;\n                        const r = t(s);\n                        i = o, process.nextTick(()=>{\n                            n.emit(\"progress\", {\n                                loaded: o,\n                                total: e,\n                                progress: e ? o / e : void 0,\n                                bytes: s,\n                                rate: r || void 0,\n                                estimated: r && e && o <= e ? (e - o) / r : void 0\n                            });\n                        });\n                    }, a.ticksRate);\n                    const o = ()=>{\n                        a.updateProgress(!0);\n                    };\n                    this.once(\"end\", o), this.once(\"error\", o);\n                }\n                _read(e) {\n                    const n = this[ze];\n                    return n.onReadCallback && n.onReadCallback(), super._read(e);\n                }\n                _transform(e, n, a) {\n                    const t = this, i = this[ze], o = i.maxRate, s = this.readableHighWaterMark, r = i.timeWindow, c = o / (1e3 / r), p = !1 !== i.minChunkSize ? Math.max(i.minChunkSize, .01 * c) : 0, l = (e, n)=>{\n                        const a = Buffer.byteLength(e);\n                        let l, u = null, d = s, m = 0;\n                        if (o) {\n                            const e = Date.now();\n                            (!i.ts || (m = e - i.ts) >= r) && (i.ts = e, l = c - i.bytes, i.bytes = l < 0 ? -l : 0, m = 0), l = c - i.bytes;\n                        }\n                        if (o) {\n                            if (l <= 0) return setTimeout(()=>{\n                                n(null, e);\n                            }, r - m);\n                            l < d && (d = l);\n                        }\n                        d && a > d && a - d > p && (u = e.subarray(d), e = e.subarray(0, d)), function(e, n) {\n                            const a = Buffer.byteLength(e);\n                            i.bytesSeen += a, i.bytes += a, i.isCaptured && i.updateProgress(), t.push(e) ? process.nextTick(n) : i.onReadCallback = ()=>{\n                                i.onReadCallback = null, process.nextTick(n);\n                            };\n                        }(e, u ? ()=>{\n                            process.nextTick(n, null, u);\n                        } : n);\n                    };\n                    l(e, function e(n, t) {\n                        if (n) return a(n);\n                        t ? l(t, e) : a(null);\n                    });\n                }\n                setLength(e) {\n                    return this[ze].length = +e, this;\n                }\n            }\n            const Be = Ue, Ne = __webpack_require__(/*! events */ \"events\"), { asyncIterator: qe } = Symbol, Ie = async function*(e) {\n                e.stream ? yield* e.stream() : e.arrayBuffer ? yield await e.arrayBuffer() : e[qe] ? yield* e[qe]() : yield e;\n            }, De = B.ALPHABET.ALPHA_DIGIT + \"-_\", Me = new Ee.TextEncoder, We = \"\\r\\n\", He = Me.encode(We);\n            class $e {\n                constructor(e, n){\n                    const { escapeName: a } = this.constructor, t = B.isString(n);\n                    let i = `Content-Disposition: form-data; name=\"${a(e)}\"${!t && n.name ? `; filename=\"${a(n.name)}\"` : \"\"}${We}`;\n                    t ? n = Me.encode(String(n).replace(/\\r?\\n|\\r\\n?/g, We)) : i += `Content-Type: ${n.type || \"application/octet-stream\"}${We}`, this.headers = Me.encode(i + We), this.contentLength = t ? n.byteLength : n.size, this.size = this.headers.byteLength + this.contentLength + 2, this.name = e, this.value = n;\n                }\n                async *encode() {\n                    yield this.headers;\n                    const { value: e } = this;\n                    B.isTypedArray(e) ? yield e : yield* Ie(e), yield He;\n                }\n                static escapeName(e) {\n                    return String(e).replace(/[\\r\\n\"]/g, (e)=>({\n                            \"\\r\": \"%0D\",\n                            \"\\n\": \"%0A\",\n                            '\"': \"%22\"\n                        })[e]);\n                }\n            }\n            class Ge extends Pe.Transform {\n                __transform(e, n, a) {\n                    this.push(e), a();\n                }\n                _transform(e, n, a) {\n                    if (0 !== e.length && (this._transform = this.__transform, 120 !== e[0])) {\n                        const e = Buffer.alloc(2);\n                        e[0] = 120, e[1] = 156, this.push(e, n);\n                    }\n                    this.__transform(e, n, a);\n                }\n            }\n            const Ve = Ge, Je = (e, n)=>B.isAsyncFn(e) ? function(...a) {\n                    const t = a.pop();\n                    e.apply(this, a).then((e)=>{\n                        try {\n                            n ? t(null, ...n(e)) : t(null, e);\n                        } catch (e) {\n                            t(e);\n                        }\n                    }, t);\n                } : e, Ke = {\n                flush: Re.constants.Z_SYNC_FLUSH,\n                finishFlush: Re.constants.Z_SYNC_FLUSH\n            }, Qe = {\n                flush: Re.constants.BROTLI_OPERATION_FLUSH,\n                finishFlush: Re.constants.BROTLI_OPERATION_FLUSH\n            }, Ye = B.isFunction(Re.createBrotliDecompress), { http: Xe, https: Ze } = Ae, en = /https:?/, nn = re.protocols.map((e)=>e + \":\");\n            function an(e) {\n                e.beforeRedirects.proxy && e.beforeRedirects.proxy(e), e.beforeRedirects.config && e.beforeRedirects.config(e);\n            }\n            function tn(e, n, a) {\n                let t = n;\n                if (!t && !1 !== t) {\n                    const e = (0, Se.j)(a);\n                    e && (t = new URL(e));\n                }\n                if (t) {\n                    if (t.username && (t.auth = (t.username || \"\") + \":\" + (t.password || \"\")), t.auth) {\n                        (t.auth.username || t.auth.password) && (t.auth = (t.auth.username || \"\") + \":\" + (t.auth.password || \"\"));\n                        const n = Buffer.from(t.auth, \"utf8\").toString(\"base64\");\n                        e.headers[\"Proxy-Authorization\"] = \"Basic \" + n;\n                    }\n                    e.headers.host = e.hostname + (e.port ? \":\" + e.port : \"\");\n                    const n = t.hostname || t.host;\n                    e.hostname = n, e.host = n, e.port = t.port, e.path = a, t.protocol && (e.protocol = t.protocol.includes(\":\") ? t.protocol : `${t.protocol}:`);\n                }\n                e.beforeRedirects.proxy = function(e) {\n                    tn(e, n, e.href);\n                };\n            }\n            const on = \"undefined\" != typeof process && \"process\" === B.kindOf(process), sn = (e, n)=>(({ address: e, family: n })=>{\n                    if (!B.isString(e)) throw TypeError(\"address must be a string\");\n                    return {\n                        address: e,\n                        family: n || (e.indexOf(\".\") < 0 ? 6 : 4)\n                    };\n                })(B.isObject(e) ? e : {\n                    address: e,\n                    family: n\n                }), rn = on && function(e) {\n                return n = async function(n, a, t) {\n                    let { data: i, lookup: o, family: s } = e;\n                    const { responseType: r, responseEncoding: c } = e, p = e.method.toUpperCase();\n                    let l, u, d = !1;\n                    if (o) {\n                        const e = Je(o, (e)=>B.isArray(e) ? e : [\n                                e\n                            ]);\n                        o = (n, a, t)=>{\n                            e(n, a, (e, n, i)=>{\n                                const o = B.isArray(n) ? n.map((e)=>sn(e)) : [\n                                    sn(n, i)\n                                ];\n                                a.all ? t(e, o) : t(e, o[0].address, o[0].family);\n                            });\n                        };\n                    }\n                    const m = new Ne, f = ()=>{\n                        e.cancelToken && e.cancelToken.unsubscribe(x), e.signal && e.signal.removeEventListener(\"abort\", x), m.removeAllListeners();\n                    };\n                    function x(n) {\n                        m.emit(\"abort\", !n || n.type ? new we(null, e, u) : n);\n                    }\n                    t((e, n)=>{\n                        l = !0, n && (d = !0, f());\n                    }), m.once(\"abort\", a), (e.cancelToken || e.signal) && (e.cancelToken && e.cancelToken.subscribe(x), e.signal && (e.signal.aborted ? x() : e.signal.addEventListener(\"abort\", x)));\n                    const v = ke(e.baseURL, e.url), h = new URL(v, \"http://localhost\"), b = h.protocol || nn[0];\n                    if (\"data:\" === b) {\n                        let t;\n                        if (\"GET\" !== p) return je(n, a, {\n                            status: 405,\n                            statusText: \"method not allowed\",\n                            headers: {},\n                            config: e\n                        });\n                        try {\n                            t = function(e, n, a) {\n                                const t = a && a.Blob || re.classes.Blob, i = Ce(e);\n                                if (void 0 === n && t && (n = !0), \"data\" === i) {\n                                    e = i.length ? e.slice(i.length + 1) : e;\n                                    const a = Le.exec(e);\n                                    if (!a) throw new D(\"Invalid URL\", D.ERR_INVALID_URL);\n                                    const o = a[1], s = a[2], r = a[3], c = Buffer.from(decodeURIComponent(r), s ? \"base64\" : \"utf8\");\n                                    if (n) {\n                                        if (!t) throw new D(\"Blob is not supported\", D.ERR_NOT_SUPPORT);\n                                        return new t([\n                                            c\n                                        ], {\n                                            type: o\n                                        });\n                                    }\n                                    return c;\n                                }\n                                throw new D(\"Unsupported protocol \" + i, D.ERR_NOT_SUPPORT);\n                            }(e.url, \"blob\" === r, {\n                                Blob: e.env && e.env.Blob\n                            });\n                        } catch (n) {\n                            throw D.from(n, D.ERR_BAD_REQUEST, e);\n                        }\n                        return \"text\" === r ? (t = t.toString(c), c && \"utf8\" !== c || (t = B.stripBOM(t))) : \"stream\" === r && (t = Pe.Readable.from(t)), je(n, a, {\n                            data: t,\n                            status: 200,\n                            statusText: \"OK\",\n                            headers: new he,\n                            config: e\n                        });\n                    }\n                    if (-1 === nn.indexOf(b)) return a(new D(\"Unsupported protocol \" + b, D.ERR_BAD_REQUEST, e));\n                    const g = he.from(e.headers).normalize();\n                    g.set(\"User-Agent\", \"axios/\" + Te, !1);\n                    const y = e.onDownloadProgress, w = e.onUploadProgress, j = e.maxRate;\n                    let k, S;\n                    if (B.isSpecCompliantForm(i)) {\n                        const e = g.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n                        i = ((e, n, a)=>{\n                            const { tag: t = \"form-data-boundary\", size: i = 25, boundary: o = t + \"-\" + B.generateString(i, De) } = a || {};\n                            if (!B.isFormData(e)) throw TypeError(\"FormData instance required\");\n                            if (o.length < 1 || o.length > 70) throw Error(\"boundary must be 10-70 characters long\");\n                            const s = Me.encode(\"--\" + o + We), r = Me.encode(\"--\" + o + \"--\" + We + We);\n                            let c = r.byteLength;\n                            const p = Array.from(e.entries()).map(([e, n])=>{\n                                const a = new $e(e, n);\n                                return c += a.size, a;\n                            });\n                            c += s.byteLength * p.length, c = B.toFiniteNumber(c);\n                            const l = {\n                                \"Content-Type\": `multipart/form-data; boundary=${o}`\n                            };\n                            return Number.isFinite(c) && (l[\"Content-Length\"] = c), n && n(l), Pe.Readable.from(async function*() {\n                                for (const e of p)yield s, yield* e.encode();\n                                yield r;\n                            }());\n                        })(i, (e)=>{\n                            g.set(e);\n                        }, {\n                            tag: `axios-${Te}-boundary`,\n                            boundary: e && e[1] || void 0\n                        });\n                    } else if (B.isFormData(i) && B.isFunction(i.getHeaders)) {\n                        if (g.set(i.getHeaders()), !g.hasContentLength()) try {\n                            const e = await Ee.promisify(i.getLength).call(i);\n                            Number.isFinite(e) && e >= 0 && g.setContentLength(e);\n                        } catch (e) {}\n                    } else if (B.isBlob(i)) i.size && g.setContentType(i.type || \"application/octet-stream\"), g.setContentLength(i.size || 0), i = Pe.Readable.from(Ie(i));\n                    else if (i && !B.isStream(i)) {\n                        if (Buffer.isBuffer(i)) ;\n                        else if (B.isArrayBuffer(i)) i = Buffer.from(new Uint8Array(i));\n                        else {\n                            if (!B.isString(i)) return a(new D(\"Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream\", D.ERR_BAD_REQUEST, e));\n                            i = Buffer.from(i, \"utf-8\");\n                        }\n                        if (g.setContentLength(i.length, !1), e.maxBodyLength > -1 && i.length > e.maxBodyLength) return a(new D(\"Request body larger than maxBodyLength limit\", D.ERR_BAD_REQUEST, e));\n                    }\n                    const O = B.toFiniteNumber(g.getContentLength());\n                    let _, E;\n                    B.isArray(j) ? (k = j[0], S = j[1]) : k = S = j, i && (w || k) && (B.isStream(i) || (i = Pe.Readable.from(i, {\n                        objectMode: !1\n                    })), i = Pe.pipeline([\n                        i,\n                        new Be({\n                            length: O,\n                            maxRate: B.toFiniteNumber(k)\n                        })\n                    ], B.noop), w && i.on(\"progress\", (e)=>{\n                        w(Object.assign(e, {\n                            upload: !0\n                        }));\n                    })), e.auth && (_ = (e.auth.username || \"\") + \":\" + (e.auth.password || \"\")), !_ && h.username && (_ = h.username + \":\" + h.password), _ && g.delete(\"authorization\");\n                    try {\n                        E = Z(h.pathname + h.search, e.params, e.paramsSerializer).replace(/^\\?/, \"\");\n                    } catch (n) {\n                        const t = new Error(n.message);\n                        return t.config = e, t.url = e.url, t.exists = !0, a(t);\n                    }\n                    g.set(\"Accept-Encoding\", \"gzip, compress, deflate\" + (Ye ? \", br\" : \"\"), !1);\n                    const A = {\n                        path: E,\n                        method: p,\n                        headers: g.toJSON(),\n                        agents: {\n                            http: e.httpAgent,\n                            https: e.httpsAgent\n                        },\n                        auth: _,\n                        protocol: b,\n                        family: s,\n                        beforeRedirect: an,\n                        beforeRedirects: {}\n                    };\n                    let R;\n                    !B.isUndefined(o) && (A.lookup = o), e.socketPath ? A.socketPath = e.socketPath : (A.hostname = h.hostname, A.port = h.port, tn(A, e.proxy, b + \"//\" + h.hostname + (h.port ? \":\" + h.port : \"\") + A.path));\n                    const T = en.test(A.protocol);\n                    if (A.agent = T ? e.httpsAgent : e.httpAgent, e.transport ? R = e.transport : 0 === e.maxRedirects ? R = T ? _e : Oe : (e.maxRedirects && (A.maxRedirects = e.maxRedirects), e.beforeRedirect && (A.beforeRedirects.config = e.beforeRedirect), R = T ? Ze : Xe), e.maxBodyLength > -1 ? A.maxBodyLength = e.maxBodyLength : A.maxBodyLength = 1 / 0, e.insecureHTTPParser && (A.insecureHTTPParser = e.insecureHTTPParser), u = R.request(A, function(t) {\n                        if (u.destroyed) return;\n                        const i = [\n                            t\n                        ], o = +t.headers[\"content-length\"];\n                        if (y) {\n                            const e = new Be({\n                                length: B.toFiniteNumber(o),\n                                maxRate: B.toFiniteNumber(S)\n                            });\n                            y && e.on(\"progress\", (e)=>{\n                                y(Object.assign(e, {\n                                    download: !0\n                                }));\n                            }), i.push(e);\n                        }\n                        let s = t;\n                        const l = t.req || u;\n                        if (!1 !== e.decompress && t.headers[\"content-encoding\"]) switch(\"HEAD\" !== p && 204 !== t.statusCode || delete t.headers[\"content-encoding\"], (t.headers[\"content-encoding\"] || \"\").toLowerCase()){\n                            case \"gzip\":\n                            case \"x-gzip\":\n                            case \"compress\":\n                            case \"x-compress\":\n                                i.push(Re.createUnzip(Ke)), delete t.headers[\"content-encoding\"];\n                                break;\n                            case \"deflate\":\n                                i.push(new Ve), i.push(Re.createUnzip(Ke)), delete t.headers[\"content-encoding\"];\n                                break;\n                            case \"br\":\n                                Ye && (i.push(Re.createBrotliDecompress(Qe)), delete t.headers[\"content-encoding\"]);\n                        }\n                        s = i.length > 1 ? Pe.pipeline(i, B.noop) : i[0];\n                        const x = Pe.finished(s, ()=>{\n                            x(), f();\n                        }), v = {\n                            status: t.statusCode,\n                            statusText: t.statusMessage,\n                            headers: new he(t.headers),\n                            config: e,\n                            request: l\n                        };\n                        if (\"stream\" === r) v.data = s, je(n, a, v);\n                        else {\n                            const t = [];\n                            let i = 0;\n                            s.on(\"data\", function(n) {\n                                t.push(n), i += n.length, e.maxContentLength > -1 && i > e.maxContentLength && (d = !0, s.destroy(), a(new D(\"maxContentLength size of \" + e.maxContentLength + \" exceeded\", D.ERR_BAD_RESPONSE, e, l)));\n                            }), s.on(\"aborted\", function() {\n                                if (d) return;\n                                const n = new D(\"maxContentLength size of \" + e.maxContentLength + \" exceeded\", D.ERR_BAD_RESPONSE, e, l);\n                                s.destroy(n), a(n);\n                            }), s.on(\"error\", function(n) {\n                                u.destroyed || a(D.from(n, null, e, l));\n                            }), s.on(\"end\", function() {\n                                try {\n                                    let e = 1 === t.length ? t[0] : Buffer.concat(t);\n                                    \"arraybuffer\" !== r && (e = e.toString(c), c && \"utf8\" !== c || (e = B.stripBOM(e))), v.data = e;\n                                } catch (n) {\n                                    return a(D.from(n, null, e, v.request, v));\n                                }\n                                je(n, a, v);\n                            });\n                        }\n                        m.once(\"abort\", (e)=>{\n                            s.destroyed || (s.emit(\"error\", e), s.destroy());\n                        });\n                    }), m.once(\"abort\", (e)=>{\n                        a(e), u.destroy(e);\n                    }), u.on(\"error\", function(n) {\n                        a(D.from(n, null, e, u));\n                    }), u.on(\"socket\", function(e) {\n                        e.setKeepAlive(!0, 6e4);\n                    }), e.timeout) {\n                        const n = parseInt(e.timeout, 10);\n                        if (Number.isNaN(n)) return void a(new D(\"error trying to parse `config.timeout` to int\", D.ERR_BAD_OPTION_VALUE, e, u));\n                        u.setTimeout(n, function() {\n                            if (l) return;\n                            let n = e.timeout ? \"timeout of \" + e.timeout + \"ms exceeded\" : \"timeout exceeded\";\n                            const t = e.transitional || ne;\n                            e.timeoutErrorMessage && (n = e.timeoutErrorMessage), a(new D(n, t.clarifyTimeoutError ? D.ETIMEDOUT : D.ECONNABORTED, e, u)), x();\n                        });\n                    }\n                    if (B.isStream(i)) {\n                        let n = !1, a = !1;\n                        i.on(\"end\", ()=>{\n                            n = !0;\n                        }), i.once(\"error\", (e)=>{\n                            a = !0, u.destroy(e);\n                        }), i.on(\"close\", ()=>{\n                            n || a || x(new we(\"Request stream has been aborted\", e, u));\n                        }), i.pipe(u);\n                    } else u.end(i);\n                }, new Promise((e, a)=>{\n                    let t, i;\n                    const o = (e, n)=>{\n                        i || (i = !0, t && t(e, n));\n                    }, s = (e)=>{\n                        o(e, !0), a(e);\n                    };\n                    n((n)=>{\n                        o(n), e(n);\n                    }, s, (e)=>t = e).catch(s);\n                });\n                var n;\n            }, cn = re.hasStandardBrowserEnv ? {\n                write (e, n, a, t, i, o) {\n                    const s = [\n                        e + \"=\" + encodeURIComponent(n)\n                    ];\n                    B.isNumber(a) && s.push(\"expires=\" + new Date(a).toGMTString()), B.isString(t) && s.push(\"path=\" + t), B.isString(i) && s.push(\"domain=\" + i), !0 === o && s.push(\"secure\"), document.cookie = s.join(\"; \");\n                },\n                read (e) {\n                    const n = document.cookie.match(new RegExp(\"(^|;\\\\s*)(\" + e + \")=([^;]*)\"));\n                    return n ? decodeURIComponent(n[3]) : null;\n                },\n                remove (e) {\n                    this.write(e, \"\", Date.now() - 864e5);\n                }\n            } : {\n                write () {},\n                read: ()=>null,\n                remove () {}\n            }, pn = re.hasStandardBrowserEnv ? function() {\n                const e = /(msie|trident)/i.test(navigator.userAgent), n = document.createElement(\"a\");\n                let a;\n                function t(a) {\n                    let t = a;\n                    return e && (n.setAttribute(\"href\", t), t = n.href), n.setAttribute(\"href\", t), {\n                        href: n.href,\n                        protocol: n.protocol ? n.protocol.replace(/:$/, \"\") : \"\",\n                        host: n.host,\n                        search: n.search ? n.search.replace(/^\\?/, \"\") : \"\",\n                        hash: n.hash ? n.hash.replace(/^#/, \"\") : \"\",\n                        hostname: n.hostname,\n                        port: n.port,\n                        pathname: \"/\" === n.pathname.charAt(0) ? n.pathname : \"/\" + n.pathname\n                    };\n                }\n                return a = t(window.location.href), function(e) {\n                    const n = B.isString(e) ? t(e) : e;\n                    return n.protocol === a.protocol && n.host === a.host;\n                };\n            }() : function() {\n                return !0;\n            };\n            function ln(e, n) {\n                let a = 0;\n                const t = Fe(50, 250);\n                return (i)=>{\n                    const o = i.loaded, s = i.lengthComputable ? i.total : void 0, r = o - a, c = t(r);\n                    a = o;\n                    const p = {\n                        loaded: o,\n                        total: s,\n                        progress: s ? o / s : void 0,\n                        bytes: r,\n                        rate: c || void 0,\n                        estimated: c && s && o <= s ? (s - o) / c : void 0,\n                        event: i\n                    };\n                    p[n ? \"download\" : \"upload\"] = !0, e(p);\n                };\n            }\n            const un = {\n                http: rn,\n                xhr: \"undefined\" != typeof XMLHttpRequest && function(e) {\n                    return new Promise(function(n, a) {\n                        let t = e.data;\n                        const i = he.from(e.headers).normalize();\n                        let o, s, { responseType: r, withXSRFToken: c } = e;\n                        function p() {\n                            e.cancelToken && e.cancelToken.unsubscribe(o), e.signal && e.signal.removeEventListener(\"abort\", o);\n                        }\n                        if (B.isFormData(t)) {\n                            if (re.hasStandardBrowserEnv || re.hasStandardBrowserWebWorkerEnv) i.setContentType(!1);\n                            else if (!1 !== (s = i.getContentType())) {\n                                const [e, ...n] = s ? s.split(\";\").map((e)=>e.trim()).filter(Boolean) : [];\n                                i.setContentType([\n                                    e || \"multipart/form-data\",\n                                    ...n\n                                ].join(\"; \"));\n                            }\n                        }\n                        let l = new XMLHttpRequest;\n                        if (e.auth) {\n                            const n = e.auth.username || \"\", a = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : \"\";\n                            i.set(\"Authorization\", \"Basic \" + btoa(n + \":\" + a));\n                        }\n                        const u = ke(e.baseURL, e.url);\n                        function d() {\n                            if (!l) return;\n                            const t = he.from(\"getAllResponseHeaders\" in l && l.getAllResponseHeaders());\n                            je(function(e) {\n                                n(e), p();\n                            }, function(e) {\n                                a(e), p();\n                            }, {\n                                data: r && \"text\" !== r && \"json\" !== r ? l.response : l.responseText,\n                                status: l.status,\n                                statusText: l.statusText,\n                                headers: t,\n                                config: e,\n                                request: l\n                            }), l = null;\n                        }\n                        if (l.open(e.method.toUpperCase(), Z(u, e.params, e.paramsSerializer), !0), l.timeout = e.timeout, \"onloadend\" in l ? l.onloadend = d : l.onreadystatechange = function() {\n                            l && 4 === l.readyState && (0 !== l.status || l.responseURL && 0 === l.responseURL.indexOf(\"file:\")) && setTimeout(d);\n                        }, l.onabort = function() {\n                            l && (a(new D(\"Request aborted\", D.ECONNABORTED, e, l)), l = null);\n                        }, l.onerror = function() {\n                            a(new D(\"Network Error\", D.ERR_NETWORK, e, l)), l = null;\n                        }, l.ontimeout = function() {\n                            let n = e.timeout ? \"timeout of \" + e.timeout + \"ms exceeded\" : \"timeout exceeded\";\n                            const t = e.transitional || ne;\n                            e.timeoutErrorMessage && (n = e.timeoutErrorMessage), a(new D(n, t.clarifyTimeoutError ? D.ETIMEDOUT : D.ECONNABORTED, e, l)), l = null;\n                        }, re.hasStandardBrowserEnv && (c && B.isFunction(c) && (c = c(e)), c || !1 !== c && pn(u))) {\n                            const n = e.xsrfHeaderName && e.xsrfCookieName && cn.read(e.xsrfCookieName);\n                            n && i.set(e.xsrfHeaderName, n);\n                        }\n                        void 0 === t && i.setContentType(null), \"setRequestHeader\" in l && B.forEach(i.toJSON(), function(e, n) {\n                            l.setRequestHeader(n, e);\n                        }), B.isUndefined(e.withCredentials) || (l.withCredentials = !!e.withCredentials), r && \"json\" !== r && (l.responseType = e.responseType), \"function\" == typeof e.onDownloadProgress && l.addEventListener(\"progress\", ln(e.onDownloadProgress, !0)), \"function\" == typeof e.onUploadProgress && l.upload && l.upload.addEventListener(\"progress\", ln(e.onUploadProgress)), (e.cancelToken || e.signal) && (o = (n)=>{\n                            l && (a(!n || n.type ? new we(null, e, l) : n), l.abort(), l = null);\n                        }, e.cancelToken && e.cancelToken.subscribe(o), e.signal && (e.signal.aborted ? o() : e.signal.addEventListener(\"abort\", o)));\n                        const m = Ce(u);\n                        m && -1 === re.protocols.indexOf(m) ? a(new D(\"Unsupported protocol \" + m + \":\", D.ERR_BAD_REQUEST, e)) : l.send(t || null);\n                    });\n                }\n            };\n            B.forEach(un, (e, n)=>{\n                if (e) {\n                    try {\n                        Object.defineProperty(e, \"name\", {\n                            value: n\n                        });\n                    } catch (e) {}\n                    Object.defineProperty(e, \"adapterName\", {\n                        value: n\n                    });\n                }\n            });\n            const dn = (e)=>`- ${e}`, mn = (e)=>B.isFunction(e) || null === e || !1 === e, fn = {\n                getAdapter: (e)=>{\n                    e = B.isArray(e) ? e : [\n                        e\n                    ];\n                    const { length: n } = e;\n                    let a, t;\n                    const i = {};\n                    for(let o = 0; o < n; o++){\n                        let n;\n                        if (a = e[o], t = a, !mn(a) && (t = un[(n = String(a)).toLowerCase()], void 0 === t)) throw new D(`Unknown adapter '${n}'`);\n                        if (t) break;\n                        i[n || \"#\" + o] = t;\n                    }\n                    if (!t) {\n                        const e = Object.entries(i).map(([e, n])=>`adapter ${e} ` + (!1 === n ? \"is not supported by the environment\" : \"is not available in the build\"));\n                        let a = n ? e.length > 1 ? \"since :\\n\" + e.map(dn).join(\"\\n\") : \" \" + dn(e[0]) : \"as no adapter specified\";\n                        throw new D(\"There is no suitable adapter to dispatch the request \" + a, \"ERR_NOT_SUPPORT\");\n                    }\n                    return t;\n                },\n                adapters: un\n            };\n            function xn(e) {\n                if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted) throw new we(null, e);\n            }\n            function vn(e) {\n                return xn(e), e.headers = he.from(e.headers), e.data = be.call(e, e.transformRequest), -1 !== [\n                    \"post\",\n                    \"put\",\n                    \"patch\"\n                ].indexOf(e.method) && e.headers.setContentType(\"application/x-www-form-urlencoded\", !1), fn.getAdapter(e.adapter || le.adapter)(e).then(function(n) {\n                    return xn(e), n.data = be.call(e, e.transformResponse, n), n.headers = he.from(n.headers), n;\n                }, function(n) {\n                    return ge(n) || (xn(e), n && n.response && (n.response.data = be.call(e, e.transformResponse, n.response), n.response.headers = he.from(n.response.headers))), Promise.reject(n);\n                });\n            }\n            const hn = (e)=>e instanceof he ? e.toJSON() : e;\n            function bn(e, n) {\n                n = n || {};\n                const a = {};\n                function t(e, n, a) {\n                    return B.isPlainObject(e) && B.isPlainObject(n) ? B.merge.call({\n                        caseless: a\n                    }, e, n) : B.isPlainObject(n) ? B.merge({}, n) : B.isArray(n) ? n.slice() : n;\n                }\n                function i(e, n, a) {\n                    return B.isUndefined(n) ? B.isUndefined(e) ? void 0 : t(void 0, e, a) : t(e, n, a);\n                }\n                function o(e, n) {\n                    if (!B.isUndefined(n)) return t(void 0, n);\n                }\n                function s(e, n) {\n                    return B.isUndefined(n) ? B.isUndefined(e) ? void 0 : t(void 0, e) : t(void 0, n);\n                }\n                function r(a, i, o) {\n                    return o in n ? t(a, i) : o in e ? t(void 0, a) : void 0;\n                }\n                const c = {\n                    url: o,\n                    method: o,\n                    data: o,\n                    baseURL: s,\n                    transformRequest: s,\n                    transformResponse: s,\n                    paramsSerializer: s,\n                    timeout: s,\n                    timeoutMessage: s,\n                    withCredentials: s,\n                    withXSRFToken: s,\n                    adapter: s,\n                    responseType: s,\n                    xsrfCookieName: s,\n                    xsrfHeaderName: s,\n                    onUploadProgress: s,\n                    onDownloadProgress: s,\n                    decompress: s,\n                    maxContentLength: s,\n                    maxBodyLength: s,\n                    beforeRedirect: s,\n                    transport: s,\n                    httpAgent: s,\n                    httpsAgent: s,\n                    cancelToken: s,\n                    socketPath: s,\n                    responseEncoding: s,\n                    validateStatus: r,\n                    headers: (e, n)=>i(hn(e), hn(n), !0)\n                };\n                return B.forEach(Object.keys(Object.assign({}, e, n)), function(t) {\n                    const o = c[t] || i, s = o(e[t], n[t], t);\n                    B.isUndefined(s) && o !== r || (a[t] = s);\n                }), a;\n            }\n            const gn = {};\n            [\n                \"object\",\n                \"boolean\",\n                \"number\",\n                \"function\",\n                \"string\",\n                \"symbol\"\n            ].forEach((e, n)=>{\n                gn[e] = function(a) {\n                    return typeof a === e || \"a\" + (n < 1 ? \"n \" : \" \") + e;\n                };\n            });\n            const yn = {};\n            gn.transitional = function(e, n, a) {\n                function t(e, n) {\n                    return \"[Axios v1.6.4] Transitional option '\" + e + \"'\" + n + (a ? \". \" + a : \"\");\n                }\n                return (a, i, o)=>{\n                    if (!1 === e) throw new D(t(i, \" has been removed\" + (n ? \" in \" + n : \"\")), D.ERR_DEPRECATED);\n                    return n && !yn[i] && (yn[i] = !0, console.warn(t(i, \" has been deprecated since v\" + n + \" and will be removed in the near future\"))), !e || e(a, i, o);\n                };\n            };\n            const wn = {\n                assertOptions: function(e, n, a) {\n                    if (\"object\" != typeof e) throw new D(\"options must be an object\", D.ERR_BAD_OPTION_VALUE);\n                    const t = Object.keys(e);\n                    let i = t.length;\n                    for(; i-- > 0;){\n                        const o = t[i], s = n[o];\n                        if (s) {\n                            const n = e[o], a = void 0 === n || s(n, o, e);\n                            if (!0 !== a) throw new D(\"option \" + o + \" must be \" + a, D.ERR_BAD_OPTION_VALUE);\n                        } else if (!0 !== a) throw new D(\"Unknown option \" + o, D.ERR_BAD_OPTION);\n                    }\n                },\n                validators: gn\n            }, jn = wn.validators;\n            class kn {\n                constructor(e){\n                    this.defaults = e, this.interceptors = {\n                        request: new ee,\n                        response: new ee\n                    };\n                }\n                request(e, n) {\n                    \"string\" == typeof e ? (n = n || {}).url = e : n = e || {}, n = bn(this.defaults, n);\n                    const { transitional: a, paramsSerializer: t, headers: i } = n;\n                    void 0 !== a && wn.assertOptions(a, {\n                        silentJSONParsing: jn.transitional(jn.boolean),\n                        forcedJSONParsing: jn.transitional(jn.boolean),\n                        clarifyTimeoutError: jn.transitional(jn.boolean)\n                    }, !1), null != t && (B.isFunction(t) ? n.paramsSerializer = {\n                        serialize: t\n                    } : wn.assertOptions(t, {\n                        encode: jn.function,\n                        serialize: jn.function\n                    }, !0)), n.method = (n.method || this.defaults.method || \"get\").toLowerCase();\n                    let o = i && B.merge(i.common, i[n.method]);\n                    i && B.forEach([\n                        \"delete\",\n                        \"get\",\n                        \"head\",\n                        \"post\",\n                        \"put\",\n                        \"patch\",\n                        \"common\"\n                    ], (e)=>{\n                        delete i[e];\n                    }), n.headers = he.concat(o, i);\n                    const s = [];\n                    let r = !0;\n                    this.interceptors.request.forEach(function(e) {\n                        \"function\" == typeof e.runWhen && !1 === e.runWhen(n) || (r = r && e.synchronous, s.unshift(e.fulfilled, e.rejected));\n                    });\n                    const c = [];\n                    let p;\n                    this.interceptors.response.forEach(function(e) {\n                        c.push(e.fulfilled, e.rejected);\n                    });\n                    let l, u = 0;\n                    if (!r) {\n                        const e = [\n                            vn.bind(this),\n                            void 0\n                        ];\n                        for(e.unshift.apply(e, s), e.push.apply(e, c), l = e.length, p = Promise.resolve(n); u < l;)p = p.then(e[u++], e[u++]);\n                        return p;\n                    }\n                    l = s.length;\n                    let d = n;\n                    for(u = 0; u < l;){\n                        const e = s[u++], n = s[u++];\n                        try {\n                            d = e(d);\n                        } catch (e) {\n                            n.call(this, e);\n                            break;\n                        }\n                    }\n                    try {\n                        p = vn.call(this, d);\n                    } catch (e) {\n                        return Promise.reject(e);\n                    }\n                    for(u = 0, l = c.length; u < l;)p = p.then(c[u++], c[u++]);\n                    return p;\n                }\n                getUri(e) {\n                    return Z(ke((e = bn(this.defaults, e)).baseURL, e.url), e.params, e.paramsSerializer);\n                }\n            }\n            B.forEach([\n                \"delete\",\n                \"get\",\n                \"head\",\n                \"options\"\n            ], function(e) {\n                kn.prototype[e] = function(n, a) {\n                    return this.request(bn(a || {}, {\n                        method: e,\n                        url: n,\n                        data: (a || {}).data\n                    }));\n                };\n            }), B.forEach([\n                \"post\",\n                \"put\",\n                \"patch\"\n            ], function(e) {\n                function n(n) {\n                    return function(a, t, i) {\n                        return this.request(bn(i || {}, {\n                            method: e,\n                            headers: n ? {\n                                \"Content-Type\": \"multipart/form-data\"\n                            } : {},\n                            url: a,\n                            data: t\n                        }));\n                    };\n                }\n                kn.prototype[e] = n(), kn.prototype[e + \"Form\"] = n(!0);\n            });\n            const Sn = kn;\n            class On {\n                constructor(e){\n                    if (\"function\" != typeof e) throw new TypeError(\"executor must be a function.\");\n                    let n;\n                    this.promise = new Promise(function(e) {\n                        n = e;\n                    });\n                    const a = this;\n                    this.promise.then((e)=>{\n                        if (!a._listeners) return;\n                        let n = a._listeners.length;\n                        for(; n-- > 0;)a._listeners[n](e);\n                        a._listeners = null;\n                    }), this.promise.then = (e)=>{\n                        let n;\n                        const t = new Promise((e)=>{\n                            a.subscribe(e), n = e;\n                        }).then(e);\n                        return t.cancel = function() {\n                            a.unsubscribe(n);\n                        }, t;\n                    }, e(function(e, t, i) {\n                        a.reason || (a.reason = new we(e, t, i), n(a.reason));\n                    });\n                }\n                throwIfRequested() {\n                    if (this.reason) throw this.reason;\n                }\n                subscribe(e) {\n                    this.reason ? e(this.reason) : this._listeners ? this._listeners.push(e) : this._listeners = [\n                        e\n                    ];\n                }\n                unsubscribe(e) {\n                    if (!this._listeners) return;\n                    const n = this._listeners.indexOf(e);\n                    -1 !== n && this._listeners.splice(n, 1);\n                }\n                static source() {\n                    let e;\n                    return {\n                        token: new On(function(n) {\n                            e = n;\n                        }),\n                        cancel: e\n                    };\n                }\n            }\n            const _n = On, En = {\n                Continue: 100,\n                SwitchingProtocols: 101,\n                Processing: 102,\n                EarlyHints: 103,\n                Ok: 200,\n                Created: 201,\n                Accepted: 202,\n                NonAuthoritativeInformation: 203,\n                NoContent: 204,\n                ResetContent: 205,\n                PartialContent: 206,\n                MultiStatus: 207,\n                AlreadyReported: 208,\n                ImUsed: 226,\n                MultipleChoices: 300,\n                MovedPermanently: 301,\n                Found: 302,\n                SeeOther: 303,\n                NotModified: 304,\n                UseProxy: 305,\n                Unused: 306,\n                TemporaryRedirect: 307,\n                PermanentRedirect: 308,\n                BadRequest: 400,\n                Unauthorized: 401,\n                PaymentRequired: 402,\n                Forbidden: 403,\n                NotFound: 404,\n                MethodNotAllowed: 405,\n                NotAcceptable: 406,\n                ProxyAuthenticationRequired: 407,\n                RequestTimeout: 408,\n                Conflict: 409,\n                Gone: 410,\n                LengthRequired: 411,\n                PreconditionFailed: 412,\n                PayloadTooLarge: 413,\n                UriTooLong: 414,\n                UnsupportedMediaType: 415,\n                RangeNotSatisfiable: 416,\n                ExpectationFailed: 417,\n                ImATeapot: 418,\n                MisdirectedRequest: 421,\n                UnprocessableEntity: 422,\n                Locked: 423,\n                FailedDependency: 424,\n                TooEarly: 425,\n                UpgradeRequired: 426,\n                PreconditionRequired: 428,\n                TooManyRequests: 429,\n                RequestHeaderFieldsTooLarge: 431,\n                UnavailableForLegalReasons: 451,\n                InternalServerError: 500,\n                NotImplemented: 501,\n                BadGateway: 502,\n                ServiceUnavailable: 503,\n                GatewayTimeout: 504,\n                HttpVersionNotSupported: 505,\n                VariantAlsoNegotiates: 506,\n                InsufficientStorage: 507,\n                LoopDetected: 508,\n                NotExtended: 510,\n                NetworkAuthenticationRequired: 511\n            };\n            Object.entries(En).forEach(([e, n])=>{\n                En[n] = e;\n            });\n            const An = En, Rn = function e(a) {\n                const t = new Sn(a), i = n(Sn.prototype.request, t);\n                return B.extend(i, Sn.prototype, t, {\n                    allOwnKeys: !0\n                }), B.extend(i, t, null, {\n                    allOwnKeys: !0\n                }), i.create = function(n) {\n                    return e(bn(a, n));\n                }, i;\n            }(le);\n            Rn.Axios = Sn, Rn.CanceledError = we, Rn.CancelToken = _n, Rn.isCancel = ge, Rn.VERSION = Te, Rn.toFormData = V, Rn.AxiosError = D, Rn.Cancel = Rn.CanceledError, Rn.all = function(e) {\n                return Promise.all(e);\n            }, Rn.spread = function(e) {\n                return function(n) {\n                    return e.apply(null, n);\n                };\n            }, Rn.isAxiosError = function(e) {\n                return B.isObject(e) && !0 === e.isAxiosError;\n            }, Rn.mergeConfig = bn, Rn.AxiosHeaders = he, Rn.formToJSON = (e)=>ce(B.isHTMLForm(e) ? new FormData(e) : e), Rn.getAdapter = fn.getAdapter, Rn.HttpStatusCode = An, Rn.default = Rn;\n            const Tn = Rn;\n            var Cn = Function.prototype.toString, Ln = Object.create, Pn = Object.defineProperty, Fn = Object.getOwnPropertyDescriptor, zn = Object.getOwnPropertyNames, Un = Object.getOwnPropertySymbols, Bn = Object.getPrototypeOf, Nn = Object.prototype, qn = Nn.hasOwnProperty, In = Nn.propertyIsEnumerable, Dn = \"function\" == typeof Un, Mn = \"function\" == typeof WeakMap, Wn = function() {\n                if (Mn) return function() {\n                    return new WeakMap;\n                };\n                var e = function() {\n                    function e() {\n                        this._keys = [], this._values = [];\n                    }\n                    return e.prototype.has = function(e) {\n                        return !!~this._keys.indexOf(e);\n                    }, e.prototype.get = function(e) {\n                        return this._values[this._keys.indexOf(e)];\n                    }, e.prototype.set = function(e, n) {\n                        this._keys.push(e), this._values.push(n);\n                    }, e;\n                }();\n                return function() {\n                    return new e;\n                };\n            }(), Hn = function(e, n) {\n                var a = e.__proto__ || Bn(e);\n                if (!a) return Ln(null);\n                var t = a.constructor;\n                if (t === n.Object) return a === n.Object.prototype ? {} : Ln(a);\n                if (~Cn.call(t).indexOf(\"[native code]\")) try {\n                    return new t;\n                } catch (e) {}\n                return Ln(a);\n            }, $n = function(e, n, a, t) {\n                var i = Hn(e, n);\n                for(var o in t.set(e, i), e)qn.call(e, o) && (i[o] = a(e[o], t));\n                if (Dn) for(var s = Un(e), r = 0, c = s.length, p = void 0; r < c; ++r)p = s[r], In.call(e, p) && (i[p] = a(e[p], t));\n                return i;\n            }, Gn = function(e, n, a, t) {\n                var i = Hn(e, n);\n                t.set(e, i);\n                for(var o = Dn ? zn(e).concat(Un(e)) : zn(e), s = 0, r = o.length, c = void 0, p = void 0; s < r; ++s)if (\"callee\" !== (c = o[s]) && \"caller\" !== c) if (p = Fn(e, c)) {\n                    p.get || p.set || (p.value = a(e[c], t));\n                    try {\n                        Pn(i, c, p);\n                    } catch (e) {\n                        i[c] = p.value;\n                    }\n                } else i[c] = a(e[c], t);\n                return i;\n            }, Vn = function(e) {\n                var n = \"\";\n                return e.global && (n += \"g\"), e.ignoreCase && (n += \"i\"), e.multiline && (n += \"m\"), e.unicode && (n += \"u\"), e.sticky && (n += \"y\"), n;\n            }, Jn = Array.isArray, Kn = Object.getPrototypeOf, Qn = function() {\n                return \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof self ? self :  false ? 0 : \"undefined\" != typeof global ? global : (console && console.error && console.error('Unable to locate global object, returning \"this\".'), this);\n            }();\n            function Yn(e, n) {\n                var a = !(!n || !n.isStrict), t = n && n.realm || Qn, i = a ? Gn : $n, o = function(e, n) {\n                    if (!e || \"object\" != typeof e) return e;\n                    if (n.has(e)) return n.get(e);\n                    var s, r = e.__proto__ || Kn(e), c = r && r.constructor;\n                    if (!c || c === t.Object) return i(e, t, o, n);\n                    if (Jn(e)) {\n                        if (a) return Gn(e, t, o, n);\n                        s = new c, n.set(e, s);\n                        for(var p = 0, l = e.length; p < l; ++p)s[p] = o(e[p], n);\n                        return s;\n                    }\n                    if (e instanceof t.Date) return new c(e.getTime());\n                    if (e instanceof t.RegExp) return (s = new c(e.source, e.flags || Vn(e))).lastIndex = e.lastIndex, s;\n                    if (t.Map && e instanceof t.Map) return s = new c, n.set(e, s), e.forEach(function(e, a) {\n                        s.set(a, o(e, n));\n                    }), s;\n                    if (t.Set && e instanceof t.Set) return s = new c, n.set(e, s), e.forEach(function(e) {\n                        s.add(o(e, n));\n                    }), s;\n                    if (t.Blob && e instanceof t.Blob) return e.slice(0, e.size, e.type);\n                    if (t.Buffer && t.Buffer.isBuffer(e)) return s = t.Buffer.allocUnsafe ? t.Buffer.allocUnsafe(e.length) : new c(e.length), n.set(e, s), e.copy(s), s;\n                    if (t.ArrayBuffer) {\n                        if (t.ArrayBuffer.isView(e)) return s = new c(e.buffer.slice(0)), n.set(e, s), s;\n                        if (e instanceof t.ArrayBuffer) return s = e.slice(0), n.set(e, s), s;\n                    }\n                    return \"function\" == typeof e.then || e instanceof Error || t.WeakMap && e instanceof t.WeakMap || t.WeakSet && e instanceof t.WeakSet ? e : i(e, t, o, n);\n                };\n                return o(e, Wn());\n            }\n            Yn.default = Yn, Yn.strict = function(e, n) {\n                return Yn(e, {\n                    isStrict: !0,\n                    realm: n ? n.realm : void 0\n                });\n            };\n            var Xn = a(1122), Zn = a.n(Xn), ea = a(1451), na = a.n(ea), aa = a(3930), ta = a.n(aa), ia = a(3261), oa = a.n(ia);\n            function sa(e, n) {\n                var a = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var t = Object.getOwnPropertySymbols(e);\n                    n && (t = t.filter(function(n) {\n                        return Object.getOwnPropertyDescriptor(e, n).enumerable;\n                    })), a.push.apply(a, t);\n                }\n                return a;\n            }\n            function ra(e) {\n                for(var n = 1; n < arguments.length; n++){\n                    var a = null != arguments[n] ? arguments[n] : {};\n                    n % 2 ? sa(Object(a), !0).forEach(function(n) {\n                        var t, i, o;\n                        t = e, i = n, o = a[n], (i = function(e) {\n                            var n = function(e, n) {\n                                if (\"object\" != typeof e || null === e) return e;\n                                var a = e[Symbol.toPrimitive];\n                                if (void 0 !== a) {\n                                    var t = a.call(e, \"string\");\n                                    if (\"object\" != typeof t) return t;\n                                    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                                }\n                                return String(e);\n                            }(e);\n                            return \"symbol\" == typeof n ? n : String(n);\n                        }(i)) in t ? Object.defineProperty(t, i, {\n                            value: o,\n                            enumerable: !0,\n                            configurable: !0,\n                            writable: !0\n                        }) : t[i] = o;\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : sa(Object(a)).forEach(function(n) {\n                        Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(a, n));\n                    });\n                }\n                return e;\n            }\n            function ca(e) {\n                return ca = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, ca(e);\n            }\n            function pa() {\n                pa = function(e, n) {\n                    return new a(e, void 0, n);\n                };\n                var e = RegExp.prototype, n = new WeakMap;\n                function a(e, t, i) {\n                    var o = new RegExp(e, t);\n                    return n.set(o, i || n.get(e)), la(o, a.prototype);\n                }\n                function t(e, a) {\n                    var t = n.get(a);\n                    return Object.keys(t).reduce(function(n, a) {\n                        var i = t[a];\n                        if (\"number\" == typeof i) n[a] = e[i];\n                        else {\n                            for(var o = 0; void 0 === e[i[o]] && o + 1 < i.length;)o++;\n                            n[a] = e[i[o]];\n                        }\n                        return n;\n                    }, Object.create(null));\n                }\n                return function(e, n) {\n                    if (\"function\" != typeof n && null !== n) throw new TypeError(\"Super expression must either be null or a function\");\n                    e.prototype = Object.create(n && n.prototype, {\n                        constructor: {\n                            value: e,\n                            writable: !0,\n                            configurable: !0\n                        }\n                    }), Object.defineProperty(e, \"prototype\", {\n                        writable: !1\n                    }), n && la(e, n);\n                }(a, RegExp), a.prototype.exec = function(n) {\n                    var a = e.exec.call(this, n);\n                    if (a) {\n                        a.groups = t(a, this);\n                        var i = a.indices;\n                        i && (i.groups = t(i, this));\n                    }\n                    return a;\n                }, a.prototype[Symbol.replace] = function(a, i) {\n                    if (\"string\" == typeof i) {\n                        var o = n.get(this);\n                        return e[Symbol.replace].call(this, a, i.replace(/\\$<([^>]+)>/g, function(e, n) {\n                            var a = o[n];\n                            return \"$\" + (Array.isArray(a) ? a.join(\"$\") : a);\n                        }));\n                    }\n                    if (\"function\" == typeof i) {\n                        var s = this;\n                        return e[Symbol.replace].call(this, a, function() {\n                            var e = arguments;\n                            return \"object\" != typeof e[e.length - 1] && (e = [].slice.call(e)).push(t(e, s)), i.apply(this, e);\n                        });\n                    }\n                    return e[Symbol.replace].call(this, a, i);\n                }, pa.apply(this, arguments);\n            }\n            function la(e, n) {\n                return la = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, n) {\n                    return e.__proto__ = n, e;\n                }, la(e, n);\n            }\n            function ua(e, n) {\n                if (e) {\n                    if (\"string\" == typeof e) return da(e, n);\n                    var a = Object.prototype.toString.call(e).slice(8, -1);\n                    return \"Object\" === a && e.constructor && (a = e.constructor.name), \"Map\" === a || \"Set\" === a ? Array.from(e) : \"Arguments\" === a || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a) ? da(e, n) : void 0;\n                }\n            }\n            function da(e, n) {\n                (null == n || n > e.length) && (n = e.length);\n                for(var a = 0, t = new Array(n); a < n; a++)t[a] = e[a];\n                return t;\n            }\n            function ma() {}\n            var fa = function(e) {\n                return new Promise(function(n) {\n                    setTimeout(n, e);\n                });\n            }, xa = function(e) {\n                return Math.pow(Math.SQRT2, e);\n            }, va = pa(/(\\d+)(%)/, {\n                value: 1\n            });\n            function ha(e) {\n                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 7, a = n;\n                if (va.test(e)) {\n                    var t, i = null === (t = e.match(va)) || void 0 === t ? void 0 : t.groups;\n                    if (i && i.value) {\n                        var o = parseInt(i.value) / 100;\n                        a = Math.round(n * o);\n                    }\n                }\n                return Math.min(30, Math.max(1, a));\n            }\n            function ba(e, n) {\n                return n(\"info\", \"Throttle request to \".concat(e, \"/s\")), ta()({\n                    limit: e,\n                    interval: 1e3,\n                    strict: !1\n                });\n            }\n            var ga = function(e) {\n                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"auto\", a = e.defaults.logHandler, t = void 0 === a ? ma : a, i = na()(n) ? ha(n) : ha(\"auto\", n), o = ba(i, t), s = !1, r = e.interceptors.request.use(function(e) {\n                    return o(function() {\n                        return e;\n                    })();\n                }, function(e) {\n                    return Promise.reject(e);\n                }), c = e.interceptors.response.use(function(a) {\n                    if (!s && na()(n) && (\"auto\" === n || va.test(n)) && a.headers && a.headers[\"x-contentful-ratelimit-second-limit\"]) {\n                        var c = parseInt(a.headers[\"x-contentful-ratelimit-second-limit\"]), p = ha(n, c);\n                        p !== i && (r && e.interceptors.request.eject(r), i = p, o = ba(p, t), r = e.interceptors.request.use(function(e) {\n                            return o(function() {\n                                return e;\n                            })();\n                        }, function(e) {\n                            return Promise.reject(e);\n                        })), s = !0;\n                    }\n                    return a;\n                }, function(e) {\n                    return Promise.reject(e);\n                });\n                return function() {\n                    e.interceptors.request.eject(r), e.interceptors.response.eject(c);\n                };\n            }, ya = /^(?!\\w+:\\/\\/)([^\\s:]+\\.?[^\\s:]+)(?::(\\d+))?(?!:)$/;\n            function wa(e, n) {\n                var a = ra(ra({}, {\n                    insecure: !1,\n                    retryOnError: !0,\n                    logHandler: function(e, n) {\n                        if (\"error\" === e && n) {\n                            var a = [\n                                n.name,\n                                n.message\n                            ].filter(function(e) {\n                                return e;\n                            }).join(\" - \");\n                            return console.error(\"[error] \".concat(a)), void console.error(n);\n                        }\n                        console.log(\"[\".concat(e, \"] \").concat(n));\n                    },\n                    headers: {},\n                    httpAgent: !1,\n                    httpsAgent: !1,\n                    timeout: 3e4,\n                    throttle: 0,\n                    basePath: \"\",\n                    adapter: void 0,\n                    maxContentLength: 1073741824,\n                    maxBodyLength: 1073741824\n                }), n);\n                if (!a.accessToken) {\n                    var t = new TypeError(\"Expected parameter accessToken\");\n                    throw a.logHandler(\"error\", t), t;\n                }\n                var i, o, s = a.insecure ? \"http\" : \"https\", r = a.space ? \"\".concat(a.space, \"/\") : \"\", c = a.defaultHostname, p = a.insecure ? 80 : 443;\n                if (a.host && ya.test(a.host)) {\n                    var l = a.host.split(\":\");\n                    if (2 === l.length) {\n                        var u = (o = 2, function(e) {\n                            if (Array.isArray(e)) return e;\n                        }(i = l) || function(e, n) {\n                            var a = null == e ? null : \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n                            if (null != a) {\n                                var t, i, o, s, r = [], c = !0, p = !1;\n                                try {\n                                    if (o = (a = a.call(e)).next, 0 === n) {\n                                        if (Object(a) !== a) return;\n                                        c = !1;\n                                    } else for(; !(c = (t = o.call(a)).done) && (r.push(t.value), r.length !== n); c = !0);\n                                } catch (e) {\n                                    p = !0, i = e;\n                                } finally{\n                                    try {\n                                        if (!c && null != a.return && (s = a.return(), Object(s) !== s)) return;\n                                    } finally{\n                                        if (p) throw i;\n                                    }\n                                }\n                                return r;\n                            }\n                        }(i, o) || ua(i, o) || function() {\n                            throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                        }());\n                        c = u[0], p = u[1];\n                    } else c = l[0];\n                }\n                a.basePath && (a.basePath = \"/\".concat(a.basePath.split(\"/\").filter(Boolean).join(\"/\")));\n                var d = n.baseURL || \"\".concat(s, \"://\").concat(c, \":\").concat(p).concat(a.basePath, \"/spaces/\").concat(r);\n                a.headers.Authorization || \"function\" == typeof a.accessToken || (a.headers.Authorization = \"Bearer \" + a.accessToken);\n                var m = {\n                    baseURL: d,\n                    headers: a.headers,\n                    httpAgent: a.httpAgent,\n                    httpsAgent: a.httpsAgent,\n                    proxy: a.proxy,\n                    timeout: a.timeout,\n                    adapter: a.adapter,\n                    maxContentLength: a.maxContentLength,\n                    maxBodyLength: a.maxBodyLength,\n                    paramsSerializer: {\n                        serialize: function(e) {\n                            return Zn().stringify(e);\n                        }\n                    },\n                    logHandler: a.logHandler,\n                    responseLogger: a.responseLogger,\n                    requestLogger: a.requestLogger,\n                    retryOnError: a.retryOnError\n                }, f = e.create(m);\n                return f.httpClientParams = n, f.cloneWithNewParams = function(a) {\n                    return wa(e, ra(ra({}, Yn(n)), a));\n                }, a.onBeforeRequest && f.interceptors.request.use(a.onBeforeRequest), \"function\" == typeof a.accessToken && function(e, n) {\n                    e.interceptors.request.use(function(e) {\n                        return n().then(function(n) {\n                            return e.headers.set(\"Authorization\", \"Bearer \".concat(n)), e;\n                        });\n                    });\n                }(f, a.accessToken), a.throttle && ga(f, a.throttle), function(e) {\n                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5, a = e.defaults, t = a.responseLogger, i = void 0 === t ? ma : t, o = a.requestLogger, s = void 0 === o ? ma : o;\n                    e.interceptors.request.use(function(e) {\n                        return s(e), e;\n                    }, function(e) {\n                        return s(e), Promise.reject(e);\n                    }), e.interceptors.response.use(function(e) {\n                        return i(e), e;\n                    }, function(a) {\n                        var t = a.response, o = a.config;\n                        if (i(a), !o || !e.defaults.retryOnError) return Promise.reject(a);\n                        var s = o.attempts || 1;\n                        if (s > n) return a.attempts = o.attempts, Promise.reject(a);\n                        var r = null, c = xa(s);\n                        return t ? t.status >= 500 && t.status < 600 ? r = \"Server \".concat(t.status) : 429 === t.status && (r = \"Rate limit\", t.headers && a.response.headers[\"x-contentful-ratelimit-reset\"] && (c = t.headers[\"x-contentful-ratelimit-reset\"])) : r = \"Connection\", r ? (c = Math.floor(1e3 * c + 200 * Math.random() + 500), e.defaults.logHandler(\"warning\", \"\".concat(r, \" error occurred. Waiting for \").concat(c, \" ms before retrying...\")), o.attempts = s + 1, delete o.httpAgent, delete o.httpsAgent, fa(c).then(function() {\n                            return e(o);\n                        })) : Promise.reject(a);\n                    });\n                }(f, a.retryLimit), a.onError && f.interceptors.response.use(function(e) {\n                    return e;\n                }, a.onError), f;\n            }\n            function ja(e) {\n                var n = e.query, a = {};\n                return delete n.resolveLinks, a.params = Yn(n), a;\n            }\n            function ka(e) {\n                var n, a = function(e, n) {\n                    var a = \"undefined\" != typeof Symbol && e[Symbol.iterator] || e[\"@@iterator\"];\n                    if (!a) {\n                        if (Array.isArray(e) || (a = ua(e))) {\n                            a && (e = a);\n                            var t = 0, i = function() {};\n                            return {\n                                s: i,\n                                n: function() {\n                                    return t >= e.length ? {\n                                        done: !0\n                                    } : {\n                                        done: !1,\n                                        value: e[t++]\n                                    };\n                                },\n                                e: function(e) {\n                                    throw e;\n                                },\n                                f: i\n                            };\n                        }\n                        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                    }\n                    var o, s = !0, r = !1;\n                    return {\n                        s: function() {\n                            a = a.call(e);\n                        },\n                        n: function() {\n                            var e = a.next();\n                            return s = e.done, e;\n                        },\n                        e: function(e) {\n                            r = !0, o = e;\n                        },\n                        f: function() {\n                            try {\n                                s || null == a.return || a.return();\n                            } finally{\n                                if (r) throw o;\n                            }\n                        }\n                    };\n                }(Object.getOwnPropertyNames(e));\n                try {\n                    for(a.s(); !(n = a.n()).done;){\n                        var t = e[n.value];\n                        t && \"object\" === ca(t) && ka(t);\n                    }\n                } catch (e) {\n                    a.e(e);\n                } finally{\n                    a.f();\n                }\n                return Object.freeze(e);\n            }\n            function Sa() {\n                var e = window;\n                if (!e) return null;\n                var n = e.navigator.userAgent, a = e.navigator.platform;\n                return -1 !== [\n                    \"Macintosh\",\n                    \"MacIntel\",\n                    \"MacPPC\",\n                    \"Mac68K\"\n                ].indexOf(a) ? \"macOS\" : -1 !== [\n                    \"iPhone\",\n                    \"iPad\",\n                    \"iPod\"\n                ].indexOf(a) ? \"iOS\" : -1 !== [\n                    \"Win32\",\n                    \"Win64\",\n                    \"Windows\",\n                    \"WinCE\"\n                ].indexOf(a) ? \"Windows\" : /Android/.test(n) ? \"Android\" : /Linux/.test(a) ? \"Linux\" : null;\n            }\n            function Oa(e) {\n                return Object.defineProperty(e, \"toPlainObject\", {\n                    enumerable: !1,\n                    configurable: !1,\n                    writable: !1,\n                    value: function() {\n                        return Yn(this);\n                    }\n                });\n            }\n            function _a(e) {\n                var n, a = e.config, t = e.response;\n                if (a && a.headers && a.headers.Authorization) {\n                    var i = \"...\".concat(a.headers.Authorization.toString().substr(-5));\n                    a.headers.Authorization = \"Bearer \".concat(i);\n                }\n                if (!oa()(t) || !oa()(a)) throw e;\n                var o, s = null == t ? void 0 : t.data, r = {\n                    status: null == t ? void 0 : t.status,\n                    statusText: null == t ? void 0 : t.statusText,\n                    message: \"\",\n                    details: {}\n                };\n                a && oa()(a) && (r.request = {\n                    url: a.url,\n                    headers: a.headers,\n                    method: a.method,\n                    payloadData: a.data\n                }), s && \"object\" === ca(s) && (\"requestId\" in s && (r.requestId = s.requestId || \"UNKNOWN\"), \"message\" in s && (r.message = s.message || \"\"), \"details\" in s && (r.details = s.details || {}), n = null === (o = s.sys) || void 0 === o ? void 0 : o.id);\n                var c = new Error;\n                c.name = n && \"Unknown\" !== n ? n : \"\".concat(null == t ? void 0 : t.status, \" \").concat(null == t ? void 0 : t.statusText);\n                try {\n                    c.message = JSON.stringify(r, null, \"  \");\n                } catch (e) {\n                    var p;\n                    c.message = null !== (p = null == r ? void 0 : r.message) && void 0 !== p ? p : \"\";\n                }\n                throw c;\n            }\n            function Ea(e) {\n                return function(n) {\n                    return Object.assign({}, e, n);\n                };\n            }\n            var Aa = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                return typeof e;\n            } : function(e) {\n                return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n            };\n            function Ra(e) {\n                if (Array.isArray(e)) {\n                    for(var n = 0, a = Array(e.length); n < e.length; n++)a[n] = e[n];\n                    return a;\n                }\n                return Array.from(e);\n            }\n            var Ta = {}, Ca = function(e, n) {\n                var a = n.entryId, t = n.linkType, i = n.spaceId, o = n.environmentId;\n                return i && o ? e.get(i + \"!\" + o + \"!\" + t + \"!\" + a) : e.get(t + \"!\" + a);\n            }, La = function(e, n) {\n                var a = n.sys, t = a.type, i = a.linkType;\n                if (\"ResourceLink\" === t) {\n                    var o = function(e) {\n                        var n = /.*:spaces\\/([^/]+)(?:\\/environments\\/([^/]+))?\\/entries\\/([^/]+)$/;\n                        if (n.test(e)) {\n                            var a = function(e, n) {\n                                if (Array.isArray(e)) return e;\n                                if (Symbol.iterator in Object(e)) return function(e, n) {\n                                    var a = [], t = !0, i = !1, o = void 0;\n                                    try {\n                                        for(var s, r = e[Symbol.iterator](); !(t = (s = r.next()).done) && (a.push(s.value), !n || a.length !== n); t = !0);\n                                    } catch (e) {\n                                        i = !0, o = e;\n                                    } finally{\n                                        try {\n                                            !t && r.return && r.return();\n                                        } finally{\n                                            if (i) throw o;\n                                        }\n                                    }\n                                    return a;\n                                }(e, n);\n                                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                            }(e.match(n), 4), t = (a[0], a[1]), i = a[2];\n                            return {\n                                spaceId: t,\n                                environmentId: void 0 === i ? \"master\" : i,\n                                entryId: a[3]\n                            };\n                        }\n                    }(n.sys.urn), s = o.spaceId, r = o.environmentId, c = o.entryId, p = i.split(\":\")[1];\n                    return Ca(e, {\n                        linkType: p,\n                        entryId: c,\n                        spaceId: s,\n                        environmentId: r\n                    }) || Ta;\n                }\n                var l = n.sys.id;\n                return Ca(e, {\n                    linkType: i,\n                    entryId: l\n                }) || Ta;\n            }, Pa = function e(n, a, t, i) {\n                if (a(n)) return t(n);\n                if (n && \"object\" === (void 0 === n ? \"undefined\" : Aa(n))) {\n                    for(var o in n)n.hasOwnProperty(o) && (n[o] = e(n[o], a, t, i));\n                    i && (n = function(e) {\n                        if (Array.isArray(e)) return e.filter(function(e) {\n                            return e !== Ta;\n                        });\n                        for(var n in e)e[n] === Ta && delete e[n];\n                        return e;\n                    }(n));\n                }\n                return n;\n            };\n            const Fa = function(e, n) {\n                if (n = n || {}, !e.items) return [];\n                var a = Yn(e), t = Object.keys(a.includes || {}).reduce(function(n, a) {\n                    return [].concat(Ra(n), Ra(e.includes[a]));\n                }, []), i = [].concat(Ra(a.items), Ra(t)).filter(function(e) {\n                    return Boolean(e.sys);\n                }), o = new Map(i.reduce(function(e, n) {\n                    var a, t = (a = n.sys, a.space && a.environment ? [\n                        a.type + \"!\" + a.id,\n                        a.space.sys.id + \"!\" + a.environment.sys.id + \"!\" + a.type + \"!\" + a.id\n                    ] : [\n                        a.type + \"!\" + a.id\n                    ]).map(function(e) {\n                        return [\n                            e,\n                            n\n                        ];\n                    });\n                    return e.push.apply(e, Ra(t)), e;\n                }, []));\n                return i.forEach(function(e) {\n                    var a = function(e, n) {\n                        return Array.isArray(n) ? Object.keys(e).filter(function(e) {\n                            return -1 !== n.indexOf(e);\n                        }).reduce(function(n, a) {\n                            return n[a] = e[a], n;\n                        }, {}) : e;\n                    }(e, n.itemEntryPoints);\n                    Object.assign(e, Pa(a, function(e) {\n                        return (n = e) && n.sys && \"Link\" === n.sys.type || function(e) {\n                            return e && e.sys && \"ResourceLink\" === e.sys.type;\n                        }(e);\n                        var n;\n                    }, function(e) {\n                        return function(e, n, a) {\n                            var t = La(e, n);\n                            return t === Ta ? a ? t : n : t;\n                        }(o, e, n.removeUnresolved);\n                    }, n.removeUnresolved));\n                }), a.items;\n            };\n            var za = a(3784), Ua = a.n(za);\n            function Ba(e) {\n                return Object.defineProperty(e, \"stringifySafe\", {\n                    enumerable: !1,\n                    configurable: !1,\n                    writable: !1,\n                    value: function(e = null, n = \"\") {\n                        return Ua()(this, e, n, (e, n)=>({\n                                sys: {\n                                    type: \"Link\",\n                                    linkType: \"Entry\",\n                                    id: n.sys.id,\n                                    circular: !0\n                                }\n                            }));\n                    }\n                });\n            }\n            async function Na(e, n, a) {\n                if (!n || !n.initial && !n.nextSyncToken && !n.nextPageToken) throw new Error(\"Please provide one of `initial`, `nextSyncToken` or `nextPageToken` parameters for syncing\");\n                if (n.content_type && !n.type) n.type = \"Entry\";\n                else if (n.content_type && n.type && \"Entry\" !== n.type) throw new Error(\"When using the `content_type` filter your `type` parameter cannot be different from `Entry`.\");\n                const { withoutLinkResolution: t, withoutUnresolvableLinks: i, paginate: o } = {\n                    withoutLinkResolution: !1,\n                    withoutUnresolvableLinks: !1,\n                    paginate: !0,\n                    ...a\n                }, s = await qa(e, [], n, {\n                    paginate: o\n                });\n                t || (s.items = Fa(s, {\n                    removeUnresolved: i,\n                    itemEntryPoints: [\n                        \"fields\"\n                    ]\n                }));\n                const r = function(e) {\n                    const n = (e)=>(n, a)=>(a.sys.type === e && n.push(Oa(a)), n);\n                    return {\n                        entries: e.reduce(n(\"Entry\"), []),\n                        assets: e.reduce(n(\"Asset\"), []),\n                        deletedEntries: e.reduce(n(\"DeletedEntry\"), []),\n                        deletedAssets: e.reduce(n(\"DeletedAsset\"), [])\n                    };\n                }(s.items);\n                return s.nextSyncToken && (r.nextSyncToken = s.nextSyncToken), s.nextPageToken && (r.nextPageToken = s.nextPageToken), ka((c = Ba(Oa(r))).sys || {}), c;\n                var c;\n            }\n            async function qa(e, n, a, { paginate: t }) {\n                const i = (o = a).nextPageToken ? {\n                    sync_token: o.nextPageToken\n                } : o.nextSyncToken ? {\n                    sync_token: o.nextSyncToken\n                } : o.sync_token ? {\n                    sync_token: o.sync_token\n                } : o;\n                var o;\n                const s = (await e.get(\"sync\", ja({\n                    query: i\n                }))).data || {};\n                return n = n.concat(s.items || []), s.nextPageUrl ? t ? (delete i.initial, i.sync_token = Ia(s.nextPageUrl), qa(e, n, i, {\n                    paginate: t\n                })) : {\n                    items: n,\n                    nextPageToken: Ia(s.nextPageUrl)\n                } : s.nextSyncUrl ? {\n                    items: n,\n                    nextSyncToken: Ia(s.nextSyncUrl)\n                } : {\n                    items: []\n                };\n            }\n            function Ia(e) {\n                const n = e.split(\"?\");\n                return n.length > 0 ? n[1].replace(\"sync_token=\", \"\") : \"\";\n            }\n            function Da(e) {\n                const n = {};\n                let a = !1;\n                for(const t in e)Array.isArray(e[t]) && (n[t] = e[t].join(\",\"), a = !0);\n                return a ? {\n                    ...e,\n                    ...n\n                } : e;\n            }\n            function Ma(e) {\n                if (!e.select) return e;\n                const n = Array.isArray(e.select) ? e.select : e.select.split(\",\").map((e)=>e.trim()), a = new Set(n);\n                return a.has(\"sys\") ? e : (a.add(\"sys.id\"), a.add(\"sys.type\"), {\n                    ...e,\n                    select: [\n                        ...a\n                    ].join(\",\")\n                });\n            }\n            function Wa(e, { resolveLinks: n, removeUnresolved: a }) {\n                const t = Ba(e);\n                return n && (t.items = Fa(t, {\n                    removeUnresolved: a,\n                    itemEntryPoints: [\n                        \"fields\"\n                    ]\n                })), t;\n            }\n            class Ha extends Error {\n                constructor(e, n){\n                    super(`Invalid \"${e}\" provided, ` + n), this.name = \"ValidationError\";\n                }\n            }\n            function $a(e, n) {\n                n ? function(e) {\n                    if (e.locale) throw new Ha(\"locale\", \"The `locale` parameter is not allowed\");\n                }(e) : function(e) {\n                    if (\"*\" === e.locale) throw new Ha(\"locale\", \"The use of locale='*' is no longer supported.To fetch an entry in all existing locales, \\n      use client.withAllLocales instead of the locale='*' parameter.\");\n                }(e);\n            }\n            function Ga(e) {\n                if (\"resolveLinks\" in e) throw new Ha(\"resolveLinks\", \"The use of the 'resolveLinks' parameter is no longer supported. By default, links are resolved. \\n      If you do not want to resolve links, use client.withoutLinkResolution.\");\n            }\n            function Va(e) {\n                if (\"removeUnresolved\" in e) throw new Ha(\"removeUnresolved\", \"The use of the 'removeUnresolved' parameter is no longer supported. By default, unresolved links are kept as link objects.\\n      If you do not want to include unresolved links, use client.withoutUnresolvableLinks.\");\n            }\n            function Ja(e) {\n                for(const n in e){\n                    const a = e[n];\n                    if (\"object\" == typeof a && null !== a && !Array.isArray(a)) throw new Error(`Objects are not supported as value for the \"${n}\" query parameter.`);\n                }\n            }\n            class Ka extends Error {\n                constructor(e, n, a){\n                    super(\"The resource could not be found.\"), this.sys = {\n                        type: \"Error\",\n                        id: \"NotFound\"\n                    }, this.details = {\n                        type: \"Entry\",\n                        id: e,\n                        environment: n,\n                        space: a\n                    };\n                }\n            }\n            function Qa({ http: e, getGlobalOptions: n }, a) {\n                const t = (e = \"unknown\")=>new Ka(e, n().environment, n().space), i = (e)=>{\n                    let a = \"space\" === e ? n().spaceBaseUrl : n().environmentBaseUrl;\n                    if (!a) throw new Error(\"Please define baseUrl for \" + e);\n                    return a.endsWith(\"/\") || (a += \"/\"), a;\n                };\n                async function o({ context: n, path: a, config: t }) {\n                    const o = i(n);\n                    try {\n                        return (await e.get(o + a, t)).data;\n                    } catch (e) {\n                        _a(e);\n                    }\n                }\n                async function s(e, n) {\n                    const { withoutLinkResolution: a, withoutUnresolvableLinks: t } = n;\n                    try {\n                        return Wa(await o({\n                            context: \"environment\",\n                            path: \"entries\",\n                            config: ja({\n                                query: Da(Ma(e))\n                            })\n                        }), {\n                            resolveLinks: !a ?? !0,\n                            removeUnresolved: t ?? !1\n                        });\n                    } catch (e) {\n                        _a(e);\n                    }\n                }\n                return {\n                    version: \"10.6.16\",\n                    getSpace: async function() {\n                        return o({\n                            context: \"space\",\n                            path: \"\"\n                        });\n                    },\n                    getContentType: async function(e) {\n                        return o({\n                            context: \"environment\",\n                            path: `content_types/${e}`\n                        });\n                    },\n                    getContentTypes: async function(e = {}) {\n                        return o({\n                            context: \"environment\",\n                            path: \"content_types\",\n                            config: ja({\n                                query: e\n                            })\n                        });\n                    },\n                    getAsset: async function(e, n = {}) {\n                        return async function(e, n, a = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: t } = a;\n                            $a(n, t), Ja(n);\n                            return async function(e, n) {\n                                try {\n                                    return o({\n                                        context: \"environment\",\n                                        path: `assets/${e}`,\n                                        config: ja({\n                                            query: Ma(n)\n                                        })\n                                    });\n                                } catch (e) {\n                                    _a(e);\n                                }\n                            }(e, t ? {\n                                ...n,\n                                locale: \"*\"\n                            } : n);\n                        }(e, n, a);\n                    },\n                    getAssets: async function(e = {}) {\n                        return async function(e, n = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: a } = n;\n                            $a(e, a), Ja(e);\n                            return async function(e) {\n                                try {\n                                    return o({\n                                        context: \"environment\",\n                                        path: \"assets\",\n                                        config: ja({\n                                            query: Da(Ma(e))\n                                        })\n                                    });\n                                } catch (e) {\n                                    _a(e);\n                                }\n                            }(a ? {\n                                ...e,\n                                locale: \"*\"\n                            } : e);\n                        }(e, a);\n                    },\n                    getTag: async function(e) {\n                        return o({\n                            context: \"environment\",\n                            path: `tags/${e}`\n                        });\n                    },\n                    getTags: async function(e = {}) {\n                        return Ja(e), o({\n                            context: \"environment\",\n                            path: \"tags\",\n                            config: ja({\n                                query: Da(Ma(e))\n                            })\n                        });\n                    },\n                    getLocales: async function(e = {}) {\n                        return Ja(e), o({\n                            context: \"environment\",\n                            path: \"locales\",\n                            config: ja({\n                                query: Ma(e)\n                            })\n                        });\n                    },\n                    parseEntries: function(e) {\n                        return function(e, n = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            return function(e, n) {\n                                const { withoutLinkResolution: a, withoutUnresolvableLinks: t } = n;\n                                return Wa(e, {\n                                    resolveLinks: !a ?? !0,\n                                    removeUnresolved: t ?? !1\n                                });\n                            }(e, n);\n                        }(e, a);\n                    },\n                    sync: async function(t, i = {\n                        paginate: !0\n                    }) {\n                        return async function(a, t, i = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            Ga(a), Va(a);\n                            const o = {\n                                ...t,\n                                ...i\n                            };\n                            return function(e) {\n                                e.defaults.baseURL = n().environmentBaseUrl;\n                            }(e), Na(e, a, o);\n                        }(t, i, a);\n                    },\n                    getEntry: async function(e, n = {}) {\n                        return async function(e, n, a = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: i } = a;\n                            return $a(n, i), Ga(n), Va(n), Ja(n), async function(e, n, a) {\n                                if (!e) throw t(e);\n                                try {\n                                    const i = await s({\n                                        \"sys.id\": e,\n                                        ...n\n                                    }, a);\n                                    if (i.items.length > 0) return i.items[0];\n                                    throw t(e);\n                                } catch (e) {\n                                    _a(e);\n                                }\n                            }(e, i ? {\n                                ...n,\n                                locale: \"*\"\n                            } : n, a);\n                        }(e, n, a);\n                    },\n                    getEntries: async function(e = {}) {\n                        return async function(e, n = {\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        }) {\n                            const { withAllLocales: a } = n;\n                            return $a(e, a), Ga(e), Va(e), Ja(e), s(a ? {\n                                ...e,\n                                locale: \"*\"\n                            } : e, n);\n                        }(e, a);\n                    },\n                    createAssetKey: async function(n) {\n                        try {\n                            const e = Math.floor(Date.now() / 1e3);\n                            !function(e, n, a) {\n                                if (a = a || {}, \"number\" != typeof n) throw new Ha(e, `only numeric values are allowed for timestamps, provided type was \"${typeof n}\"`);\n                                if (a.maximum && n > a.maximum) throw new Ha(e, `value (${n}) cannot be further in the future than expected maximum (${a.maximum})`);\n                                if (a.now && n < a.now) throw new Ha(e, `value (${n}) cannot be in the past, current time was ${a.now}`);\n                            }(\"expiresAt\", n, {\n                                maximum: e + 172800,\n                                now: e\n                            });\n                        } catch (e) {\n                            _a(e);\n                        }\n                        return async function({ context: n, path: a, data: t, config: o }) {\n                            const s = i(n);\n                            try {\n                                return (await e.post(s + a, t, o)).data;\n                            } catch (e) {\n                                _a(e);\n                            }\n                        }({\n                            context: \"environment\",\n                            path: \"asset_keys\",\n                            data: {\n                                expiresAt: n\n                            }\n                        });\n                    }\n                };\n            }\n            const Ya = ({ http: e, getGlobalOptions: n })=>{\n                function a(t) {\n                    return function({ http: e, getGlobalOptions: n }, a, t) {\n                        const i = Qa({\n                            http: e,\n                            getGlobalOptions: n\n                        }, a);\n                        return Object.defineProperty(i, \"withAllLocales\", {\n                            get: ()=>t({\n                                    ...a,\n                                    withAllLocales: !0\n                                })\n                        }), Object.defineProperty(i, \"withoutLinkResolution\", {\n                            get: ()=>t({\n                                    ...a,\n                                    withoutLinkResolution: !0\n                                })\n                        }), Object.defineProperty(i, \"withoutUnresolvableLinks\", {\n                            get: ()=>t({\n                                    ...a,\n                                    withoutUnresolvableLinks: !0\n                                })\n                        }), Object.create(i);\n                    }({\n                        http: e,\n                        getGlobalOptions: n\n                    }, t, a);\n                }\n                return {\n                    ...Qa({\n                        http: e,\n                        getGlobalOptions: n\n                    }, {\n                        withoutLinkResolution: !1,\n                        withAllLocales: !1,\n                        withoutUnresolvableLinks: !1\n                    }),\n                    get withAllLocales () {\n                        return a({\n                            withAllLocales: !0,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !1\n                        });\n                    },\n                    get withoutLinkResolution () {\n                        return a({\n                            withAllLocales: !1,\n                            withoutLinkResolution: !0,\n                            withoutUnresolvableLinks: !1\n                        });\n                    },\n                    get withoutUnresolvableLinks () {\n                        return a({\n                            withAllLocales: !1,\n                            withoutLinkResolution: !1,\n                            withoutUnresolvableLinks: !0\n                        });\n                    }\n                };\n            };\n            function Xa(e) {\n                if (!e.accessToken) throw new TypeError(\"Expected parameter accessToken\");\n                if (!e.space) throw new TypeError(\"Expected parameter space\");\n                Ga(e), Va(e);\n                const n = {\n                    resolveLinks: !0,\n                    removeUnresolved: !1,\n                    defaultHostname: \"cdn.contentful.com\",\n                    environment: \"master\",\n                    ...e\n                }, a = function(e, n, a, t) {\n                    var i = [];\n                    n && i.push(\"app \".concat(n)), a && i.push(\"integration \".concat(a)), t && i.push(\"feature \" + t), i.push(\"sdk \".concat(e));\n                    var o = null;\n                    try {\n                         false ? (0) : \"undefined\" == typeof process || false ? (o = Sa(), i.push(\"platform browser\")) : (o = function() {\n                            var e = process.platform || \"linux\", n = process.version || \"0.0.0\", a = {\n                                android: \"Android\",\n                                aix: \"Linux\",\n                                darwin: \"macOS\",\n                                freebsd: \"Linux\",\n                                linux: \"Linux\",\n                                openbsd: \"Linux\",\n                                sunos: \"Linux\",\n                                win32: \"Windows\"\n                            };\n                            return e in a ? \"\".concat(a[e] || \"Linux\", \"/\").concat(n) : null;\n                        }(), i.push(\"platform node.js/\".concat(process.versions && process.versions.node ? \"v\".concat(process.versions.node) : process.version)));\n                    } catch (e) {\n                        o = null;\n                    }\n                    return o && i.push(\"os \".concat(o)), \"\".concat(i.filter(function(e) {\n                        return \"\" !== e;\n                    }).join(\"; \"), \";\");\n                }(\"contentful.js/10.6.16\", n.application, n.integration);\n                n.headers = {\n                    ...n.headers,\n                    \"Content-Type\": \"application/vnd.contentful.delivery.v1+json\",\n                    \"X-Contentful-User-Agent\": a\n                };\n                const t = wa(Tn, n);\n                if (!t.defaults.baseURL) throw new Error(\"Please define a baseURL\");\n                const i = Ea({\n                    space: n.space,\n                    environment: n.environment,\n                    spaceBaseUrl: t.defaults.baseURL,\n                    environmentBaseUrl: `${t.defaults.baseURL}environments/${n.environment}`\n                });\n                return t.defaults.baseURL = i({}).environmentBaseUrl, Ya({\n                    http: t,\n                    getGlobalOptions: i\n                });\n            }\n        })(), t;\n    })());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/contentful/dist/contentful.node.min.js\n");

/***/ })

};
;